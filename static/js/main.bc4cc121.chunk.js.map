{"version":3,"sources":["i18n.ts","components/analytics/GoogleAnalyticsReporter.tsx","assets/svg/logo_white.svg","assets/images/menu.svg","state/application/actions.ts","connectors/Fortmatic.ts","connectors/NetworkConnector.ts","connectors/index.ts","constants/index.ts","hooks/index.ts","state/application/hooks.ts","state/user/actions.ts","state/user/hooks.tsx","theme/components.tsx","theme/index.tsx","components/Menu/index.tsx","hooks/useOnClickOutside.tsx","components/Row/index.tsx","state/tokens/actions.ts","apollo/client.ts","data/tokens/poolsForToken.ts","data/tokens/chartData.ts","utils/queries.ts","hooks/useBlocksFromTimestamps.ts","data/tokens/priceData.ts","types/index.ts","utils/tokens.ts","data/tokens/transactions.ts","utils/index.ts","state/tokens/hooks.ts","utils/data.ts","hooks/useEthPrices.ts","data/tokens/tokenData.ts","state/pools/actions.ts","data/pools/chartData.ts","data/pools/transactions.ts","state/pools/hooks.ts","data/search/index.ts","components/Column/index.tsx","components/Logo/index.tsx","components/CurrencyLogo/index.tsx","utils/numbers.ts","components/DoubleLogo/index.tsx","components/Card/index.tsx","hooks/useTheme.ts","components/Button/index.tsx","components/Popover/index.tsx","hooks/useInterval.ts","components/Tooltip/index.tsx","components/HoverInlineText/index.tsx","components/Search/index.tsx","components/Header/index.tsx","components/Header/URLWarning.tsx","state/lists/actions.ts","utils/listVersionLabel.ts","components/Popups/ListUpdatePopup.tsx","components/Popups/TransactionPopup.tsx","components/Popups/PopupItem.tsx","components/Popups/index.tsx","theme/DarkModeQueryParamReader.tsx","components/LineChart/alt.tsx","state/protocol/actions.ts","state/protocol/hooks.ts","components/Percent/index.tsx","assets/images/whitev3.svg","components/Loader/index.tsx","components/Text/index.ts","components/shared/index.tsx","components/tokens/TokenTable.tsx","components/pools/PoolTable.tsx","pages/styled.ts","utils/date.ts","components/BarChart/alt.tsx","components/TransactionsTable/index.tsx","pages/Home/index.tsx","pages/Protocol/index.tsx","pages/Pool/PoolsOverview.tsx","components/tokens/TopTokenMovers.tsx","pages/Token/TokensOverview.tsx","components/Header/Polling.tsx","components/Header/TopBar.tsx","hooks/useColor.ts","components/Toggle/index.tsx","components/CandleChart/index.tsx","pages/Token/TokenPage.tsx","constants/intervals.ts","pages/Token/redirects.tsx","data/pools/tickData.ts","components/DensityChart/CurrentPriceLabel.tsx","components/DensityChart/CustomToolTip.tsx","components/DensityChart/index.tsx","pages/Pool/PoolPage.tsx","pages/App.tsx","state/application/reducer.ts","state/global/actions.ts","state/user/reducer.ts","constants/lists.ts","state/lists/reducer.ts","state/multicall/actions.ts","state/multicall/reducer.ts","state/protocol/reducer.ts","state/tokens/reducer.ts","state/pools/reducer.ts","state/index.ts","state/user/updater.tsx","data/protocol/overview.ts","data/protocol/chart.ts","data/protocol/transactions.ts","state/protocol/updater.ts","data/tokens/topTokens.ts","state/tokens/updater.ts","data/pools/topPools.ts","data/pools/poolData.ts","state/pools/updater.ts","data/application/index.ts","state/application/updater.ts","index.tsx"],"names":["i18next","use","XHR","LanguageDetector","initReactI18next","init","backend","loadPath","react","useSuspense","fallbackLng","preload","keySeparator","interpolation","escapeValue","GoogleAnalyticsReporter","location","pathname","search","useEffect","ReactGA","pageview","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","SvgMenu","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","ForwardRef","ApplicationModal","updateBlockNumber","createAction","setOpenModal","addPopup","removePopup","updateSubgraphStatus","CHAIN_ID_NETWORK_ARGUMENT","ChainId","MAINNET","undefined","ROPSTEN","RINKEBY","AVALANCHE","FortmaticConnector","a","fortmatic","Fortmatic","default","apiKey","chainId","Error","provider","getProvider","pollForOverlayReady","Promise","resolve","interval","setInterval","overlayReady","clearInterval","emit","all","enable","then","accounts","account","FortmaticConnectorCore","RequestError","message","code","data","MiniRpcProvider","url","batchWaitTimeMs","isMetaMask","host","path","nextId","batchTimeoutId","batch","clearBatch","console","debug","fetch","method","headers","accept","body","JSON","stringify","map","item","request","response","forEach","reject","ok","status","statusText","json","byKey","reduce","memo","current","result","error","sendAsync","callback","params","jsonrpc","catch","toString","promise","push","setTimeout","parsed","URL","NetworkConnector","urls","defaultChainId","invariant","supportedChainIds","k","Number","providers","currentChainId","accumulator","AbstractConnector","NETWORK_URL","process","FORMATIC_KEY","REACT_APP_FORTMATIC_KEY","PORTIS_ID","REACT_APP_PORTIS_ID","NETWORK_CHAIN_ID","parseInt","InjectedConnector","WalletConnectConnector","rpc","1","bridge","qrcode","pollingInterval","PortisConnector","dAppId","networks","WalletLinkConnector","appName","appLogoUrl","MAX_UINT128","BigNumber","from","pow","sub","WETH_ADDRESS","DAI","Token","USDT","WBTC","UNI_ADDRESS","WETH_ONLY","GÖRLI","WETH9","TOKEN_HIDE","address","POOL_HIDE","BIPS_BASE","JSBI","BigInt","Percent","exponentiate","useActiveWeb3React","context","useWeb3ReactCore","contextNetwork","active","useModalOpen","modal","useSelector","state","application","openModal","useToggleModal","open","dispatch","useDispatch","useCallback","useRemovePopup","useSubgraphStatus","subgraphStatus","available","syncedBlock","updateMatchesDarkMode","updateUserDarkMode","addSerializedToken","removeSerializedToken","addSavedToken","addSavedPool","addSerializedPair","removeSerializedPair","toggleURLWarning","useSavedTokens","savedTokens","user","useSavedPools","savedPools","useURLWarningVisible","URLWarningVisible","StyledInternalLink","styled","button","attrs","warning","theme","backgroundColor","red1","primary1","white","darken","bg1","text4","X","div","size","marginRight","marginLeft","blue1","disabled","text2","Link","fontSize","StyledLink","rotateImg","LinkIconFeather","Trash","text3","keyframes","img","ExternalLink","href","rel","rest","handleClick","event","ctrlKey","metaKey","outboundLink","label","preventDefault","window","onClick","rotate","Spinner","text1","span","mediaWidth","upToMedium","HideMedium","HideSmall","upToSmall","HideExtraSmall","upToExtraSmall","ExtraSmallOnly","MEDIA_WIDTHS","upToLarge","mediaWidthTemplates","b","c","css","colors","darkMode","black","text5","bg0","bg2","bg3","bg4","bg5","modalBG","advancedBG","primary2","primary3","primary4","primary5","primaryText1","secondary1","secondary2","secondary3","pink1","red2","red3","green1","yellow1","yellow2","yellow3","blue2","ThemeProvider","children","matchesDarkMode","userDarkMode","shallowEqual","useIsDarkMode","themeObject","useMemo","grids","sm","md","lg","shadow1","flexColumnNoWrap","flexRowNoWrap","TextWrapper","Text","color","TYPE","fontWeight","FixedGlobalStyle","createGlobalStyle","ThemedGlobalStyle","StyledMenuIcon","MenuIcon","StyledMenuButton","StyledMenu","MenuFlyout","MenuItem","Menu","node","useRef","MENU","toggle","handler","handlerRef","handleClickOutside","e","contains","document","addEventListener","removeEventListener","useOnClickOutside","Row","Box","align","justify","padding","border","borderRadius","RowBetween","RowFlat","AutoRow","gap","RowFixed","ResponsiveRow","updateTokenData","addTokenKeys","addPoolAddresses","updateChartData","updateTransactions","updatePriceData","client","ApolloClient","uri","cache","InMemoryCache","queryDeduplication","defaultOptions","watchQuery","fetchPolicy","query","errorPolicy","healthClient","blockClient","POOLS_FOR_TOKEN","gql","fetchPoolsForToken","variables","loading","Boolean","addresses","formattedData","asToken0","concat","asToken1","p","dayjs","extend","utc","weekOfYear","ONE_DAY_UNIX","TOKEN_CHART","fetchTokenChartData","startTimestamp","endTimestamp","unix","skip","allFound","startTime","chartResData","tokenDayDatas","formattedExisting","accum","dayData","date","toFixed","volumeUSD","parseFloat","totalValueLockedUSD","firstEntry","timestamp","latestTvl","nextDay","currentDayIndex","includes","dateMap","splitQuery","vars","values","skipCount","fetchedData","end","sliced","slice","log","useDeltaTimestamps","utcCurrentTime","subtract","startOf","GET_BLOCKS","timestamps","queryString","useBlocksFromTimestamps","useState","blocks","setBlocks","setError","results","fetchData","formatted","t","split","number","getBlocksFromTimestamps","TransactionType","PRICE_CHART","fetchTokenPriceData","time","priceData","errors","tokenHourDatas","formattedHistory","periodStartUnix","close","high","low","formatTokenSymbol","symbol","formatTokenName","name","GLOBAL_TRANSACTIONS","fetchTokenTransactions","mints0","mintsAs0","m","type","MINT","hash","transaction","sender","origin","token0Symbol","pool","token0","token1Symbol","token1","token0Address","token1Address","amountUSD","amountToken0","amount0","amountToken1","amount1","mints1","mintsAs1","burns0","burnsAs0","BURN","owner","burns1","burnsAs1","swaps0","swapsAs0","SWAP","swaps1","swapsAs1","isAddress","value","getAddress","ETHERSCAN_PREFIXES","3","4","5","43114","getEtherscanLink","prefix","currentTimestamp","Date","getTime","shortenAddress","chars","substring","Fraction","escapeRegExp","string","replace","feeTierPercent","fee","toPrecision","notEmpty","useAllTokenData","tokens","byAddress","useAddTokenKeys","tokenAddresses","useTokenDatas","allTokenData","filter","get2DayChange","valueNow","value24HoursAgo","value48HoursAgo","currentChange","previousChange","adjustedPercentChange","isNaN","isFinite","getPercentChange","change","ETH_PRICES","fetchEthPrices","block24","block48","blockWeek","ethPriceUSD","oneDay","twoDay","week","oneWeek","useEthPrices","prices","setPrices","blockError","formattedBlocks","TOKENS_BULK","block","tokenString","useFetchedTokenDatas","ethPrices","useQuery","loading24","error24","data24","loading48","error48","data48","loadingWeek","errorWeek","dataWeek","anyError","anyLoading","poolData","parsed24","parsed48","parsedWeek","volumeUSDChange","volumeUSDWeek","tvlUSD","tvlUSDChange","tvlToken","totalValueLocked","priceUSD","derivedETH","priceUSDOneDay","priceUSDWeek","priceUSDChange","priceUSDChangeWeek","txCount","feesUSD","exists","updatePoolData","addPoolKeys","updatePoolChartData","updatePoolTransactions","updateTickData","POOL_CHART","fetchPoolChartData","poolDayDatas","POOL_TRANSACTIONS","fetchPoolTransactions","mints","burns","swaps","useAllPoolData","pools","useAddPoolKeys","poolAddresses","usePoolDatas","allPoolData","untrackedAddresses","TOKEN_SEARCH","POOL_SEARCH","Column","AutoColumn","BAD_SRCS","getTokenLogoURL","StyledLogo","srcs","alt","refresh","src","find","onError","CurrencyLogo","style","checkSummed","formatDollarAmount","num","digits","round","numbro","formatCurrency","average","mantissa","abbreviations","million","billion","formatAmount","format","Wrapper","sizeraw","margin","HigherLogo","CoveredLogo","DoubleCurrencyLogo","address0","address1","Card","LightCard","LightGreyCard","GreyCard","DarkGreyCard","GreyBadge","useTheme","useContext","ThemeContext","Base","RebassButton","ButtonPrimary","bgColor","altDisabledStyle","ButtonGray","ButtonSecondary","ButtonOutlined","lighten","HoverIcon","SavedIcon","PopoverContainer","show","transparentize","ReferenceElement","Arrow","Popover","content","placement","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","setArrowElement","usePopper","strategy","modifiers","options","offset","element","styles","update","attributes","delay","leading","savedCallback","tick","useInterval","popper","className","arrow","TooltipContainer","Tooltip","text","link","adjustSize","HoverInlineText","maxCharacters","showHover","setShowHover","onMouseEnter","onMouseLeave","Container","StyledInput","input","hide","Blackout","ResponsiveGrid","Break","HoverText","HoverRowLink","OptionButton","enabled","Search","history","useHistory","menuRef","textRef","handleDown","focus","focused","setFocused","showMenu","setShowMenu","setValue","allTokens","allPools","tokenData","setTokenData","setPoolData","toUpperCase","asSymbol","allFetchedTokens","asAddress","asName","allFetchedPools","as0","as1","tokenFullDatas","tokenFullLoading","poolDatasFull","formattedTokens","newTokens","combinedTokens","filteredSortedTokens","tokenEntryKey","match","RegExp","some","newPools","combinedPools","toLocaleLowerCase","useFetchSearchResults","tokensShown","setTokensShown","poolsShown","setPoolsShown","handleNav","to","watchListTokenData","watchListPoolData","showWatchlist","setShowWatchlist","tokensForList","sort","t0","t1","poolForList","p0","p1","keyName","onKeyDown","onChange","placeholder","onFocus","onBlur","pl","textAlign","ml","stopPropagation","whiteSpace","feeTier","token0Price","HeaderFrame","HeaderControls","HeaderElementWrap","HeaderRow","HeaderLinks","Title","NavLink","UniIcon","activeClassName","StyledNavLink","Header","LogoDark","isActive","PhishAlert","StyledClose","URLWarning","useURLWarningToggle","showURLWarning","isMobile","display","hostname","fetchTokenList","pending","fulfilled","rejected","addList","removeList","enableList","disableList","acceptListUpdate","listVersionLabel","version","major","minor","patch","ChangesList","ul","ListUpdatePopup","popKey","listUrl","oldList","newList","auto","removeThisPopup","handleAcceptUpdate","category","action","diffTokenLists","tokensAdded","added","tokensChanged","changed","tokensRemoved","removed","numTokensChanged","flex","token","Fragment","flexGrow","RowNoFlex","TransactionPopup","success","summary","paddingRight","Popup","Fader","AnimatedFader","animated","PopupItem","removeAfterMs","timeout","clearTimeout","popupContent","txn","listUpdate","faderStyle","useSpring","config","duration","MobilePopupWrapper","MobilePopupInner","FixedPopupColumn","extraPadding","Popups","activePopups","list","popupList","useActivePopups","urlWarningActive","reverse","DarkModeQueryParamReader","parse","parseArrays","ignoreQueryPrefix","toLowerCase","Chart","setLabel","topLeft","topRight","bottomLeft","bottomRight","minHeight","parsedValue","ResponsiveContainer","AreaChart","top","right","left","bottom","x1","y1","x2","y2","stopColor","stopOpacity","XAxis","dataKey","axisLine","tickLine","tickFormatter","minTickGap","cursor","contentStyle","formatter","payload","formattedTime","Area","updateProtocolData","useProtocolData","protocolData","protocol","useProtocolChartData","chartData","useProtocolTransactions","transactions","negative","decimals","wrap","simple","truncated","neutral","Math","abs","StyledSVG","svg","Loader","pulse","AnimatedImg","LocalLoader","v3","loadingAnimation","LoadingRows","Label","ClickableText","PageButtons","faded","MonoSpace","LinkWrapper","ResponsiveLogo","DataRow","index","SORT_FIELD","TokenTable","tokenDatas","maxItems","sortField","setSortField","sortDirection","setSortDirection","page","setPage","maxPage","setMaxPage","extraPages","floor","sortedTokens","x","handleSort","newField","field","PoolTable","poolDatas","sortedPools","PageWrapper","ThemedBackground","ThemedBackgroundGlobal","unixToDate","formatTime","now","inSeconds","diff","inMinutes","inHours","inDays","CustomBar","y","rx","BarChart","Bar","shape","SortText","abs0","abs1","outputTokenSymbol","inputTokenSymbol","TransactionTable","txFilter","setTxFilter","sortedTransactions","ChartWrapper","Home","scrollTo","volumeHover","setVolumeHover","liquidityHover","setLiquidityHover","leftLabel","setLeftLabel","rightLabel","setRightLabel","formattedTvlData","day","formattedVolumeData","mr","feeChange","Protocol","PoolPage","watchlistPools","CardWrapper","FixedContainer","ScrollableRow","DataCard","lineHeight","TopTokenMovers","topPriceIncrease","min","increaseRef","increaseSet","setIncreaseSet","scrollLeft","scrollWidth","entry","TokensOverview","watchListTokens","paddingTop","StyledPolling","StyledPollingDot","rotate360","Polling","isMounted","setIsMounted","latestBlock","timer1","opacity","Item","TopBar","justifyContent","Vibrant","getPalette","palette","detectedHex","hex","AAscore","shade","useColor","setColor","formattedAddress","useLayoutEffect","stale","getColorFromToken","tokenColor","isOnSwitch","ToggleWrapper","ToggleElementFree","ChartView","CandleChart","textColor","chartRef","chartCreated","setChart","handleResize","parentElement","resize","clientWidth","timeScale","fitContent","scrollToPosition","isClient","chart","createChart","layout","fontFamily","rightPriceScale","scaleMargins","borderVisible","secondsVisible","tickMarkFormatter","unixTime","watermark","visible","grid","horzLines","vertLines","crosshair","horzLine","labelVisible","mode","vertLine","labelBackgroundColor","series","addCandlestickSeries","upColor","downColor","borderDownColor","borderUpColor","wickDownColor","wickUpColor","setData","subscribeCrosshairMove","param","point","seriesPrices","get","PriceText","ContentLayout","TokenPage","useTokenData","poolsForToken","tokenAddress","usePoolsForToken","useTokenTransactions","useTokenChartData","PRICE","view","setView","latestValue","setLatestValue","valueLabel","setValueLabel","timeWindow","oldestTimestampFetched","oldestFetchedTimestamp","fetchingError","secondsInterval","useTokenPriceData","adjustedToCurrent","adjusted","marginTop","alignItems","VOL","TVL","RedirectInvalidToken","FEE_TIER_TO_TICK_SPACING","fetchInitializedTicks","poolAddress","tickIdxLowerBound","tickIdxUpperBound","tickQuery","surroundingTicks","surroundingTicksResult","ticks","poolQuery","fetchTicksSurroundingPrice","numSurroundingTicks","poolResult","poolCurrentTick","liquidity","token0Decimals","token1Decimals","poolCurrentTickIdx","tickSpacing","activeTickIdx","initializedTicksResult","initializedTicks","tickIdxToInitializedTick","keyBy","activeTickIdxForPrice","TickMath","MIN_TICK","MAX_TICK","activeTickProcessed","liquidityActive","tickIdx","liquidityNet","price0","tickToPrice","price1","liquidityGross","activeTick","Direction","subsequentTicks","computeSurroundingTicks","direction","previousTickProcessed","processedTicks","currentTickIdx","ASC","currentTickProcessed","currentInitializedTick","add","DESC","notEqual","previousTicks","ticksProcessed","CurrentPriceLabel","chartProps","labelData","entryData","isCurrent","toLocaleString","minimumSignificantDigits","TooltipWrapper","CustomToolTip","currentPrice","tvlToken0","tvlToken1","ControlsWrapper","ActionButton","ZOOM_INTERVAL","initialState","INITIAL_TICKS_TO_FETCH","refAreaLeft","refAreaRight","DensityChart","formattedAddress0","formattedAddress1","tickData","usePoolTickData","poolTickData","updatePoolTickData","ticksToFetch","setTicksToFetch","amountTicks","setLoading","zoomState","setZoomState","setFormattedData","sqrtPriceX96","getSqrtRatioAtTick","feeAmount","mockTicks","TICK_SPACINGS","multiply","Pool","nextSqrtX96","maxAmountToken0","CurrencyAmount","fromRawAmount","getOutputAmount","outputRes0","token1Amount","toExact","activeLiquidity","newData","formatData","atZoomMax","atZoomMin","handleZoomIn","handleZoomOut","zoomedData","reversed","isAnimationActive","Cell","LabelList","position","TokenButton","usePoolChartData","usePoolTransactions","token1Price","DENSITY","AppWrapper","HeaderWrapper","BodyWrapper","Marginer","App","fallback","component","maxWidth","exact","strict","PoolsOverview","blockNumber","createReducer","builder","addCase","max","popup","nanoid","updateVersion","pairKey","pairs","lastUpdateVersionTimestamp","serializedToken","serializedPair","tokenAAddress","tokenBAddress","AVA_AEB_LIST","DEFAULT_LIST_OF_LISTS","DEFAULT_ACTIVE_LIST_URLS","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","byUrl","activeListUrls","requestId","tokenList","getVersionUpgrade","VersionUpgrade","NONE","errorMessage","u","lastInitializedSet","s","l","Set","newListOfListsSet","has","ADDRESS_REGEX","LOWER_HEX_REGEX","toCallKey","test","callData","addMulticallListeners","removeMulticallListeners","fetchingMulticallResults","errorFetchingMulticallResults","updateMulticallResults","callResults","calls","blocksPerFetch","listeners","callListeners","callKey","fetchingBlockNumber","lastUpdated","PERSISTED_KEYS","store","configureStore","reducer","multicall","lists","middleware","getDefaultMiddleware","thunk","immutableCheck","save","states","preloadedState","load","Updater","darkHandler","matches","matchMedia","addListener","removeListener","GLOBAL_DATA","GLOBAL_CHART","fetchChartData","uniswapDayDatas","fetchTopTransactions","mintEntries","burnEntries","swapEntries","factories","totalVolumeUSD","volumeOneWindowAgo","txCountOneWindowAgo","txCountChange","feesOneWindowAgo","totalFeesUSD","useFetchProtocolData","fetchedProtocolData","useFetchGlobalChartData","fetchedChartData","chartError","TOP_TOKENS","updateTokenDatas","useUpdateTokenData","useTopTokenAddresses","tokenDataError","tokenDataLoading","TOP_POOLS","POOLS_BULK","poolString","useUpdatePoolData","useTopPoolAddresses","totalValueLockedToken0","totalValueLockedToken1","sqrtPrice","poolDataError","poolDataLoading","SUBGRAPH_HEALTH","updateStatus","indexingStatusForCurrentVersion","headBlock","chains","chainHeadBlock","useFetchedSubgraphStatus","newSyncedBlock","GOOGLE_ANALYTICS_ID","REACT_APP_GOOGLE_ANALYTICS_ID","Updaters","initialize","set","customBrowserType","testMode","exception","description","filename","lineno","colno","fatal","ReactDOM","render","getElementById"],"mappings":"+RAKAA,IACGC,IAAIC,KACJD,IAAIE,KACJF,IAAIG,KACJC,KAAK,CACJC,QAAS,CACPC,SAAS,0BAEXC,MAAO,CACLC,aAAa,GAEfC,YAAa,KACbC,QAAS,CAAC,MACVC,cAAc,EACdC,cAAe,CAAEC,aAAa,KAGnBd,EAAf,EAAeA,I,8BCjBA,SAASe,EAAT,GAAiG,IAAD,IAA7DC,SAAYC,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,OAItE,OAHAC,qBAAU,WACRC,IAAQC,SAAR,UAAoBJ,GAApB,OAA+BC,MAC9B,CAACD,EAAUC,IACP,K,YCTM,MAA0B,uC,oCCAzC,SAASI,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAEhT,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,IAAI,EAAqB,gBAAoB,OAAQ,CACnDoB,EAAG,0HACHC,OAAQ,QACRC,YAAa,EACbC,cAAe,QACfC,eAAgB,UAGd,EAAqB,gBAAoB,OAAQ,CACnDJ,EAAG,0HACHC,OAAQ,QACRC,YAAa,EACbC,cAAe,QACfC,eAAgB,UAGd,EAAqB,gBAAoB,OAAQ,CACnDJ,EAAG,iHACHC,OAAQ,QACRC,YAAa,EACbC,cAAe,QACfC,eAAgB,UAGlB,SAASC,EAAQC,EAAMC,GACrB,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQnB,EAAyBe,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAO7B,EAAS,CACtDkC,MAAO,GACPC,OAAQ,GACRC,QAAS,YACTC,KAAM,OACNC,MAAO,6BACPC,IAAKT,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DS,GAAIR,GACHD,GAAS,KAAM,EAAO,EAAO,GAGlC,IAAIU,EAA0B,aAAiBb,GAChC,I,ICvCHc,E,kBAAAA,O,mBAAAA,I,uBAAAA,I,gBAAAA,M,KAML,I,IAAMC,EAAoBC,YAAuD,iCAC3EC,EAAeD,YAAsC,4BACrDE,EAAWF,YACtB,wBAEWG,EAAcH,YAA8B,2BAC5CI,EAAuBJ,YAClC,oC,2IClBIK,IAAgG,mBACnGC,KAAQC,aAAUC,GADiF,cAEnGF,KAAQG,QAAU,WAFiF,cAGnGH,KAAQI,QAAU,WAHiF,cAInGJ,KAAQK,UAAY,aAJ+E,GAOzFC,GAAb,wMACE,qDAAAC,EAAA,yDACO5C,KAAK6C,UADZ,iCAEyC,kCAFzC,mBAEqBC,EAFrB,EAEYC,QAEAC,GAJZ,EAIgChD,MAApBgD,UAAQC,EAJpB,EAIoBA,WACDb,IALnB,iBAMMpC,KAAK6C,UAAY,IAAIC,EAAUE,EAAQZ,GAA0Ba,IANvE,8BAQY,IAAIC,MAAJ,kCAAqCD,IARjD,eAYQE,EAAWnD,KAAK6C,UAAUO,cAE1BC,EAAsB,IAAIC,SAAQ,SAACC,GACvC,IAAMC,EAAWC,aAAY,WACvBN,EAASO,eACXC,cAAcH,GACd,EAAKI,KA9Bc,iBA+BnBL,OAED,QArBP,UAwB0BD,QAAQO,IAAI,CAClCV,EAASW,SAASC,MAAK,SAACC,GAAD,OAAwBA,EAAS,MACxDX,IA1BJ,2CAwBSY,EAxBT,uBA6BS,CAAEd,SAAUnD,KAAK6C,UAAUO,cAAeH,QAAUjD,KAAaiD,QAASgB,YA7BnF,iDADF,2DAAwCC,M,qCCIlCC,G,oDACJ,WAAYC,EAAwBC,EAAqBC,GAAiB,IAAD,8BACvE,cAAMF,IAD4BC,OAAqC,EAAhBC,OAAgB,E,uBADhDpB,QAYrBqB,GAYJ,WAAYtB,EAAiBuB,EAAaC,GAA2B,IAAD,gCAXpDC,YAAoB,EAWgC,KAVpDzB,aAUoD,OATpDuB,SASoD,OARpDG,UAQoD,OAPpDC,UAOoD,OANpDH,qBAMoD,OAJ5DI,OAAS,EAImD,KAH5DC,eAAuD,KAGK,KAF5DC,MAAqB,GAEuC,KAUpDC,WAVoD,sBAUvC,sDAAApC,EAAA,6DAC3BqC,QAAQC,MAAM,iBAAkB,EAAKH,OAC/BA,EAAQ,EAAKA,MACnB,EAAKA,MAAQ,GACb,EAAKD,eAAiB,KAJK,kBAORK,MAAM,EAAKX,IAAK,CAC/BY,OAAQ,OACRC,QAAS,CAAE,eAAgB,mBAAoBC,OAAQ,oBACvDC,KAAMC,KAAKC,UAAUV,EAAMW,KAAI,SAACC,GAAD,OAAUA,EAAKC,cAVvB,OAOzBC,EAPyB,gEAazBd,EAAMe,SAAQ,mBAAgBC,EAAhB,EAAGA,QAAoB,IAAI7C,MAAM,iCAbtB,8BAiBtB2C,EAASG,GAjBa,wBAkBzBjB,EAAMe,SAAQ,mBAAgBC,EAAhB,EAAGA,QAAoB,IAAI5B,GAAJ,UAAoB0B,EAASI,OAA7B,aAAwCJ,EAASK,aAAe,UAlB5E,sDAwBZL,EAASM,OAxBG,QAwBzBA,EAxByB,iEA0BzBpB,EAAMe,SAAQ,mBAAgBC,EAAhB,EAAGA,QAAoB,IAAI7C,MAAM,qCA1BtB,2BA6BrBkD,EAAQrB,EAAMsB,QAAoC,SAACC,EAAMC,GAE7D,OADAD,EAAKC,EAAQX,QAAQjE,IAAM4E,EACpBD,IACN,IAhCwB,eAiCNH,GAjCM,IAiC3B,2BAAWK,EAAgB,UAKrBJ,EAAMI,EAAO7E,IAHf4B,EAFuB,EAEvBA,QACAwC,EAHuB,EAGvBA,OACWX,EAJY,EAIvBQ,QAAWR,OAET7B,GAAWwC,IACT,UAAWS,EACbT,EAAO,IAAI5B,GAAJ,OAAiBqC,QAAjB,IAAiBA,GAAjB,UAAiBA,EAAQC,aAAzB,aAAiB,EAAerC,QAAhC,OAAyCoC,QAAzC,IAAyCA,GAAzC,UAAyCA,EAAQC,aAAjD,aAAyC,EAAepC,KAAxD,OAA8DmC,QAA9D,IAA8DA,GAA9D,UAA8DA,EAAQC,aAAtE,aAA8D,EAAenC,OAC3E,WAAYkC,EACrBjD,EAAQiD,EAAOA,QAEfT,EAAO,IAAI5B,GAAJ,mDAA6DiB,EAA7D,cAAiF,KAAOoB,KA7C1E,gGAVuC,KA6DpDE,UAAY,SAC1Bd,EAMAe,GAEA,EAAKf,QAAQA,EAAQR,OAAQQ,EAAQgB,QAClC7C,MAAK,SAACyC,GAAD,OAAYG,EAAS,KAAM,CAAEE,QAAS,MAAOlF,GAAIiE,EAAQjE,GAAI6E,cAClEM,OAAM,SAACL,GAAD,OAAWE,EAASF,EAAO,UAxE8B,KA2EpDb,QA3EoD,uCA2E1C,WACxBR,EACAwB,GAFwB,iBAAAhE,EAAA,yDAIF,kBAAXwC,EAJa,yCAKf,EAAKQ,QAAQR,EAAOA,OAAQA,EAAOwB,SALpB,UAOT,gBAAXxB,EAPoB,qDAQV,EAAKnC,QAAQ8D,SAAS,MARZ,cAUlBC,EAAU,IAAI1D,SAAQ,SAACC,EAASwC,GACpC,EAAKhB,MAAMkC,KAAK,CACdrB,QAAS,CACPiB,QAAS,MACTlF,GAAI,EAAKkD,SACTO,SACAwB,UAEFrD,UACAwC,cAGJ,EAAKjB,eAAL,UAAsB,EAAKA,sBAA3B,QAA6CoC,WAAW,EAAKlC,WAAY,EAAKP,iBAtBtD,kBAuBjBuC,GAvBiB,2CA3E0C,wDAClEhH,KAAKiD,QAAUA,EACfjD,KAAKwE,IAAMA,EACX,IAAM2C,EAAS,IAAIC,IAAI5C,GACvBxE,KAAK2E,KAAOwC,EAAOxC,KACnB3E,KAAK4E,KAAOuC,EAAOrI,SAEnBkB,KAAKyE,gBAAL,OAAuBA,QAAvB,IAAuBA,IAAmB,IA+FjC4C,GAAb,oDAIE,cAAkE,IAAD,EAAnDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,eAA6C,2BAC/DC,aAAUD,GAA+C,IAA7BnI,OAAOgB,KAAKkH,GAAM7H,OAAc,sDAC5D,cAAM,CAAEgI,kBAAmBrI,OAAOgB,KAAKkH,GAAM5B,KAAI,SAACgC,GAAD,OAAeC,OAAOD,SALxDE,eAGgD,IAFzDC,oBAEyD,EAI/D,EAAKA,eAAiBN,GAAkBI,OAAOvI,OAAOgB,KAAKkH,GAAM,IACjE,EAAKM,UAAYxI,OAAOgB,KAAKkH,GAAMjB,QAA+C,SAACyB,EAAa7E,GAE9F,OADA6E,EAAYH,OAAO1E,IAAY,IAAIsB,GAAgBoD,OAAO1E,GAAUqE,EAAKK,OAAO1E,KACzE6E,IACN,IAR4D,EAJnE,2CAeE,WACE,OAAO9H,KAAK4H,UAAU5H,KAAK6H,kBAhB/B,6DAmBE,uGACS,CAAE1E,SAAUnD,KAAK4H,UAAU5H,KAAK6H,gBAAiB5E,QAASjD,KAAK6H,eAAgB5D,QAAS,OADjG,gDAnBF,sHAuBE,uGACSjE,KAAK4H,UAAU5H,KAAK6H,iBAD7B,gDAvBF,qHA2BE,uGACS7H,KAAK6H,gBADd,gDA3BF,qHA+BE,uGACS,MADT,2CA/BF,8EAmCE,gBAnCF,GAAsCE,MCvIhCC,GAAcC,wCACdC,GAAeD,6NAAYE,wBAC3BC,GAAYH,6NAAYI,oBAEjBC,GAA2BC,SAAQ,UAACN,SAAD,EAAmC,SAM5D,IAAIZ,GAAiB,CAC1CC,KAAK,eAAIgB,GAAmBN,MAQN,IAAIQ,IAAkB,CAC5Cf,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,SAIT,IAAIgB,IAAuB,CACtDC,IAAK,CAAEC,EAAGX,IACVY,OAAQ,mCACRC,QAAQ,EACRC,gBAAiB,OAIM,IAAInG,GAAmB,CAC9CK,OAAM,OAAEkF,SAAF,IAAEA,MAAgB,GACxBjF,QAAS,IAIW,IAAI8F,IAAgB,CACxCC,OAAM,OAAEZ,SAAF,IAAEA,MAAa,GACrBa,SAAU,CAAC,KAIa,IAAIC,IAAoB,CAChD1E,IAAKwD,GACLmB,QAAS,UACTC,WACE,4KA7BG,I,uDCfMC,GAAcC,KAAUC,KAAK,GAAGC,IAAI,KAAKC,IAAI,GAO7CC,GAAe,6CAEfC,GAAM,IAAIC,KACrBvH,KAAQK,UACR,6CACA,GACA,MACA,kBAEWmH,GAAO,IAAID,KAAMvH,KAAQK,UAAW,6CAA8C,EAAG,OAAQ,cAC7FoH,GAAO,IAAIF,KAAMvH,KAAQK,UAAW,6CAA8C,EAAG,OAAQ,eAWpGqH,GAAc,6CAoBdC,IAnB2C,qBAC9C3H,KAAQC,QAAU,IAAIsH,KAAMvH,KAAQC,QAASyH,GAAa,GAAI,MAAO,YADvB,eAE9C1H,KAAQI,QAAU,IAAImH,KAAMvH,KAAQI,QAASsH,GAAa,GAAI,MAAO,YAFvB,eAG9C1H,KAAQG,QAAU,IAAIoH,KAAMvH,KAAQG,QAASuH,GAAa,GAAI,MAAO,YAHvB,eAI9C1H,KAAQ4H,WAAQ,IAAIL,KAAMvH,KAAQ4H,WAAOF,GAAa,GAAI,MAAO,YAJnB,eAK9C1H,KAAQK,UAAY,IAAIkH,KAAMvH,KAAQK,UAAWqH,GAAa,GAAI,MAAO,YAGX,qBAC9DA,GAAc,OADgD,eAb/B,6CAeV,cAFyC,eAXjC,6CAcV,YAIoD,eACvE1H,KAAQC,QAAU,8CAGU,qBAC5BD,KAAQC,QAAU,CAAC4H,KAAM7H,KAAQC,WADL,eAE5BD,KAAQG,QAAU,CAAC0H,KAAM7H,KAAQG,WAFL,eAG5BH,KAAQI,QAAU,CAACyH,KAAM7H,KAAQI,WAHL,eAI5BJ,KAAQ4H,WAAQ,CAACC,KAAM7H,KAAQ4H,cAJH,eAK5B5H,KAAQK,UAAY,CAACwH,KAAM7H,KAAQK,aALP,IAmClByH,IA1B6C,6BACrDH,IADqD,kBAEvD3H,KAAQK,UAF+C,uBAE/BsH,GAAU3H,KAAQK,YAFa,CAEDiH,GAAKE,GAAMC,OAOqB,eACtFzH,KAAQK,UAD8E,eAEpFmH,GAAKO,QAAU,CAACT,GAAKO,KAAM7H,KAAQK,cAKiB,6BACpDsH,IADoD,kBAEtD3H,KAAQK,UAF8C,uBAE9BsH,GAAU3H,KAAQK,YAFY,CAEAiH,GAAKE,GAAMC,OAQ1C,CAAC,6CAA8C,+CAC5DO,GAAY,CACvB,6CACA,6CACA,8CAmGWC,IAhGkE,eAC5EjI,KAAQC,QAAU,CACjB,CACE,IAAIsH,KAAMvH,KAAQC,QAAS,6CAA8C,EAAG,OAAQ,gBACpF,IAAIsH,KAAMvH,KAAQC,QAAS,6CAA8C,EAAG,QAAS,sBAEvF,CAACwH,GAAMD,IACP,CAACF,GAAKE,MAmF6BU,KAAKC,OAAO,QAEvBD,KAAKC,OAAO,GAGhB,IAAIC,KAAQF,KAAKC,OAAO,GAAID,KAAKC,OAAO,MACvCD,KAAKC,OAAO,MAEY,IAAIC,KAAQF,KAAKC,OAAO,KAAMF,IAC3B,IAAIG,KAAQF,KAAKC,OAAO,KAAMF,IAChC,IAAIG,KAAQF,KAAKC,OAAO,KAAMF,IAEnB,IAAIG,KAAQF,KAAKC,OAAO,KAAOF,IAEpC,IAAIG,KAAQF,KAAKC,OAAO,MAAOF,IAG1DC,KAAKG,aAAaH,KAAKC,OAAO,IAAKD,KAAKC,OAAO,KAC5B,IAAIC,KAAQF,KAAKC,OAAO,IAAKD,KAAKC,OAAO,MAE7D,IAAIC,KAAQ,KACL,IAAIA,KAAQ,KC7MxC,SAASE,KACd,IAAMC,EAAUC,cACVC,EAAiBD,YDmLS,WClLhC,OAAOD,EAAQG,OAASH,EAAUE,ECA7B,SAASE,GAAaC,GAE3B,OADkBC,aAAY,SAACC,GAAD,OAAqBA,EAAMC,YAAYC,eAChDJ,EAGhB,SAASK,GAAeL,GAC7B,IAAMM,EAAOP,GAAaC,GACpBO,EAAWC,cACjB,OAAOC,uBAAY,kBAAMF,EAASxJ,EAAauJ,EAAO,KAAON,MAAS,CAACO,EAAUP,EAAOM,IAkCnF,SAASI,KACd,IAAMH,EAAWC,cACjB,OAAOC,uBACL,SAAC/L,GACC6L,EAAStJ,EAAY,CAAEvC,WAEzB,CAAC6L,IAWE,SAASI,KAOd,IAAMJ,EAAWC,cASjB,MAAO,CARQP,aAAY,SAACC,GAAD,OAAqBA,EAAMC,YAAYS,kBAEnDH,uBACb,SAACI,EAA2BC,GAC1BP,EAASrJ,EAAqB,CAAE2J,YAAWC,mBAE7C,CAACP,K,aCtEQQ,GAAwBjK,YAA2C,8BACnEkK,GAAqBlK,YAAwC,2BAC7DmK,GAAqBnK,YAAmD,2BACxEoK,GAAwBpK,YAAmD,8BAC3EqK,GAAgBrK,YAAkC,sBAClDsK,GAAetK,YAAkC,qBACjDuK,GAAoBvK,YAAiD,0BACrEwK,GAAuBxK,YAClC,6BAEWyK,GAAmBzK,YAAmB,wBCkD5C,SAAS0K,KACd,IAAMjB,EAAWC,cACXiB,EAAcxB,aAAY,SAACC,GAAD,OAAqBA,EAAMwB,KAAKD,eAOhE,MAAO,QAACA,QAAD,IAACA,IAAe,GANIhB,uBACzB,SAACtB,GACCoB,EAASY,GAAc,CAAEhC,eAE3B,CAACoB,KAKE,SAASoB,KACd,IAAMpB,EAAWC,cACXoB,EAAa3B,aAAY,SAACC,GAAD,OAAqBA,EAAMwB,KAAKE,cAO/D,MAAO,QAACA,QAAD,IAACA,IAAc,GANGnB,uBACvB,SAACtB,GACCoB,EAASa,GAAa,CAAEjC,eAE1B,CAACoB,KA2CE,SAASsB,KACd,OAAO5B,aAAY,SAACC,GAAD,OAAqBA,EAAMwB,KAAKI,qB,kICvCxCC,I,OA3FaC,UAAOC,OAAV,wPAkBDD,UAAOC,OAAOC,OAAyD,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,MAAZ,MAAyB,CACpHC,gBAAiBF,EAAUC,EAAME,KAAOF,EAAMG,YAD1BP,CAAH,ibAUG,qBAAGK,mBACd,qBAAGD,MAAkBI,SAKR,gBAAGH,EAAH,EAAGA,gBAAH,OAAyBI,YAAO,IAAMJ,MAItC,gBAAGA,EAAH,EAAGA,gBAAH,OAAyBI,YAAO,GAAKJ,MAIrC,qBAAGD,MAAkBM,OAChC,qBAAGN,MAAkBO,SAKTX,kBAAOY,KAAPZ,CAAH,kDAKKA,UAAOa,IAAV,gNAIb,gBAAGC,EAAH,EAAGA,KAAH,cAAcA,QAAd,IAAcA,IAAQ,UACrB,gBAAGA,EAAH,EAAGA,KAAH,cAAcA,QAAd,IAAcA,IAAQ,UAChB,gBAAGC,EAAH,EAAGA,YAAH,cAAqBA,QAArB,IAAqBA,IAAe,KACrC,gBAAGC,EAAH,EAAGA,WAAH,cAAoBA,QAApB,IAAoBA,IAAc,KAErC,gBAAGZ,EAAH,EAAGA,MAAO1M,EAAV,EAAUA,OAAV,cAAuBA,QAAvB,IAAuBA,IAAU0M,EAAMa,SAKrBjB,UAAOC,OAAV,oTAKjB,qBAAGiB,SAA2B,UAAY,aAC3C,gBAAGd,EAAH,EAAGA,MAAH,SAAUc,SAA2Bd,EAAMe,MAAQf,EAAMG,YAI7C,qBAAGW,SAA2B,KAAO,eAKrC,qBAAGA,SAA2B,KAAO,eAS1BlB,kBAAOoB,IAAPpB,CAAH,qSAGpB,qBAAGI,MAAkBG,YAEjB,gBAAGc,EAAH,EAAGA,SAAH,cAAkBA,QAAlB,IAAkBA,IAAY,WAgBvCC,GAAatB,UAAOrK,EAAV,iaAGL,qBAAGyK,MAAkBG,YAoE1BgB,IA7CkBvB,UAAOrK,EAAV,uUAsBGqK,kBAAOwB,KAAPxB,CAAH,qGAIT,qBAAGI,MAAkBa,SAGRjB,kBAAOyB,KAAPzB,CAAH,uOAIV,qBAAGI,MAAkBsB,SAYfC,oBAAH,qKAUiB3B,UAAO4B,IAAV,4KACdL,IAQR,SAASM,GAAT,GAK8E,IAAD,IAJlFxP,cAIkF,MAJzE,SAIyE,EAHlFyP,EAGkF,EAHlFA,KAGkF,IAFlFC,WAEkF,MAF5E,sBAE4E,EAD/EC,EAC+E,wCAC5EC,EAAcxD,uBAClB,SAACyD,GAEgB,WAAX7P,GAAuB6P,EAAMC,SAAWD,EAAME,QAChDpQ,IAAQqQ,aAAa,CAAEC,MAAOR,IAAQ,WACpC9J,QAAQC,MAAM,4BAA6B6J,OAG7CI,EAAMK,iBAENvQ,IAAQqQ,aAAa,CAAEC,MAAOR,IAAQ,WACpCU,OAAO5Q,SAASkQ,KAAOA,QAI7B,CAACA,EAAMzP,IAET,OAAO,eAACiP,GAAD,cAAYjP,OAAQA,EAAQ0P,IAAKA,EAAKD,KAAMA,EAAMW,QAASR,GAAiBD,IAiCrF,IAAMU,GAASf,oBAAH,wHASCgB,GAAU3C,UAAO4B,IAAV,oGACFc,IAKI1C,kBAAOD,GAAPC,CAAH,6CACR,qBAAGI,MAAkBwC,SAUE5C,kBAAO2C,GAAP3C,CAAH,6DACnB,qBAAGc,QACJ,qBAAGA,QAGYd,UAAO6C,KAAV,sCACnB,qBAAGzC,MAAkB0C,WAAWC,WAA/B,KAAD,kDANG,I,kBAWMC,GAAahD,UAAO6C,KAAV,sCACnB,qBAAGzC,MAAkB0C,WAAWC,WAA/B,KAAD,kDAKSE,GAAYjD,UAAO6C,KAAV,sCAClB,qBAAGzC,MAAkB0C,WAAWI,UAA/B,KAAD,kDAKSC,GAAiBnD,UAAO6C,KAAV,sCACvB,qBAAGzC,MAAkB0C,WAAWM,eAA/B,KAAD,kDAKSC,GAAiBrD,UAAO6C,KAAV,wDAEvB,qBAAGzC,MAAkB0C,WAAWM,eAA/B,KAAD,mDCtTSE,GAAe,CAC1BF,eAAgB,IAChBF,UAAW,IACXH,WAAY,IACZQ,UAAW,MAGPC,GAA4ErR,OAAOgB,KAAKmQ,IAAclK,QAC1G,SAACyB,EAAaiG,GAMZ,OALEjG,EAAoBiG,GAAQ,SAACnL,EAAQ8N,EAAQC,GAAjB,OAA4BC,cAA3B,QAAD,kFACNL,GAAqBxC,GACvC6C,cAAIhO,EAAG8N,EAAGC,KAGT7I,IAET,IAMK,SAAS+I,GAAOC,GACrB,MAAO,CAELrD,MANU,UAOVsD,MANU,UASVlB,MAAkB,UAClBzB,MAAkB,UAClBO,MAAkB,UAClBf,MAAkB,UAClBoD,MAAkB,YAGlBC,IAAgB,UAChBtD,IAAgB,YAChBuD,IAAgB,YAChBC,IAAgB,UAChBC,IAAgB,UAChBC,IAAgB,UAGhBC,QAASR,EAAW,mBAAqB,kBACzCS,WAAYT,EAAW,kBAAoB,wBAG3CtD,SAAqB,UACrBgE,SAAqB,UACrBC,SAAqB,UACrBC,SAAqB,YACrBC,SAAqB,YAGrBC,aAAyB,UAGzBC,WAAuB,UACvBC,WAAuB,YACvBC,WAAuB,YAGvBC,MAAO,UACPzE,KAAM,UACN0E,KAAM,UACNC,KAAM,UACNC,OAAQ,WACRC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTpE,MAAO,UACPqE,MAAO,WAoCI,SAASC,GAAT,GAAqE,IAA5CC,EAA2C,EAA3CA,SAChC3B,EFnFD,WAAmC,IAAD,EACG5F,aAIxC,oBAAGyB,KAAQ+F,EAAX,EAAWA,gBAAX,MAAkD,CAChDC,aADF,EAA4BA,aAE1BD,qBAEFE,KARMD,EAD+B,EAC/BA,aAAcD,EADiB,EACjBA,gBAWtB,OAAwB,OAAjBC,EAAwBD,EAAkBC,EEuEhCE,GAEXC,EAAcC,mBAAQ,kBA/BvB,SAAejC,GACpB,OAAO,6BACFD,GAAOC,IADZ,IAGEkC,MAAO,CACLC,GAAI,EACJC,GAAI,GACJC,GAAI,IAINC,QAAStC,EAAW,OAAS,UAG7Bf,WAAYU,GAGZ4C,iBAAkBzC,cAAF,yFAIhB0C,cAAe1C,cAAF,wFAUmBvD,CAAMyD,KAAW,CAACA,IAEpD,OAAO,eAAC,gBAAD,CAA+BzD,MAAOyF,EAAtC,SAAoDL,IAG7D,I,kBAAMc,GAActG,kBAAOuG,KAAPvG,CAAH,6CACN,gBAAGwG,EAAH,EAAGA,MAAH,SAAUpG,MAA2BoG,MAGnCC,GAAO,SACbtS,GACH,OAAO,eAACmS,GAAD,cAAaI,WAAY,IAAKF,MAAO,SAAarS,KAFhDsS,GAAO,SAOZtS,GACJ,OAAO,eAACmS,GAAD,cAAaI,WAAY,IAAKF,MAAO,SAAarS,KARhDsS,GAAO,SAgBbtS,GACH,OAAO,eAACmS,GAAD,cAAaI,WAAY,IAAKrF,SAAU,GAAImF,MAAO,SAAarS,KAjB9DsS,GAAO,SAmBNtS,GACV,OAAO,eAACmS,GAAD,cAAaI,WAAY,IAAKrF,SAAU,GAAImF,MAAO,SAAarS,KApB9DsS,GAAO,SAsBLtS,GACX,OAAO,eAACmS,GAAD,cAAaI,WAAY,IAAKrF,SAAU,GAAImF,MAAO,SAAarS,KAvB9DsS,GAAO,SA4BZtS,GACJ,OAAO,eAACmS,GAAD,cAAaI,WAAY,IAAKrF,SAAU,IAAQlN,KA7B9CsS,GAAO,SAwCbtS,GACH,OAAO,eAACmS,GAAD,cAAaI,WAAY,IAAKF,MAAO,OAAWrS,KAU9CwS,GAAmBC,4BAAH,8pBAkBjBhD,IAAO,GAAO3C,OAsBb4F,GAAoBD,4BAAH,+gBAEnB,qBAAGxG,MAAkBwC,SACV,qBAAGxC,MAAkBM,OCzNrCoG,GAAiB9G,kBAAO+G,EAAP/G,CAAH,+DAEN,qBAAGI,MAAkBwC,SAI7BoE,GAAmBhH,UAAOC,OAAV,4XAQA,qBAAGG,MAAkB8D,OASnB,qBAAG9D,MAAkB+D,OAQvC8C,GAAajH,UAAOa,IAAV,yLAUVqG,GAAalH,UAAO6C,KAAV,yaAEM,qBAAGzC,MAAkB8D,OAavC,qBAAG9D,MAAkB0C,WAAWC,WAA/B,QAAD,gDAKEoE,GAAWnH,kBAAO6B,GAAP7B,CAAH,gNAGH,qBAAGI,MAAkBe,SAEnB,qBAAGf,MAAkBwC,SAWnB,SAASwE,KACtB,IAAMC,EAAOC,mBACPhJ,EAAOP,GAAanJ,EAAiB2S,MACrCC,EAASnJ,GAAezJ,EAAiB2S,MAG/C,OC3FK,SACLF,EACAI,GAEA,IAAMC,EAAaJ,iBAAiCG,GACpD1V,qBAAU,WACR2V,EAAWpO,QAAUmO,IACpB,CAACA,IAEJ1V,qBAAU,WACR,IAAM4V,EAAqB,SAACC,GAAmB,IAAD,IAC5C,oBAAIP,EAAK/N,eAAT,aAAI,EAAcuO,SAASD,EAAEvV,eAA7B,UAGIqV,EAAWpO,SAASoO,EAAWpO,WAKrC,OAFAwO,SAASC,iBAAiB,YAAaJ,GAEhC,WACLG,SAASE,oBAAoB,YAAaL,MAE3C,CAACN,IDmEJY,CAAkBZ,EAAM/I,EAAOkJ,OAASlS,GAItC,eADA,CACC2R,GAAD,CAAYxS,IAAK4S,EAAjB,UACE,eAACL,GAAD,CAAkBvE,QAAS+E,EAA3B,SACE,eAACV,GAAD,MAGDxI,GACC,gBAAC4I,GAAD,WACE,gBAACC,GAAD,CAAUzS,GAAG,OAAOoN,KAAK,uBAAzB,UACE,eAAC,IAAD,CAAMhB,KAAM,KADd,WAIA,gBAACqG,GAAD,CAAUzS,GAAG,OAAOoN,KAAK,8BAAzB,UACE,eAAC,IAAD,CAAUhB,KAAM,KADlB,UAIA,gBAACqG,GAAD,CAAUzS,GAAG,OAAOoN,KAzBZ,+CAyBR,UACE,eAAC,IAAD,CAAMhB,KAAM,KADd,UAIA,gBAACqG,GAAD,CAAUzS,GAAG,OAAOoN,KAAK,gCAAzB,UACE,eAAC,IAAD,CAAehB,KAAM,KADvB,mB,sCE/GJoH,GAAMlI,kBAAOmI,OAAPnI,CAAH,oLAQE,gBAAG5L,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,IAAS,UAGlB,gBAAGgU,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,IAAS,YACpB,gBAAGC,EAAH,EAAGA,QAAH,cAAiBA,QAAjB,IAAiBA,IAAW,gBACpC,qBAAGC,WACJ,qBAAGC,UACI,qBAAGC,gBAGTC,GAAazI,kBAAOkI,GAAPlI,CAAH,iEAIV0I,GAAU1I,UAAOa,IAAV,0EAKP8H,GAAU3I,kBAAOkI,GAAPlI,CAAH,0IAER,gBAAG4I,EAAH,EAAGA,IAAH,OAAaA,GAAG,WAAQA,MACf,gBAAGP,EAAH,EAAGA,QAAH,OAAiBA,GAAWA,KAGnC,qBAAGO,OAIJC,GAAW7I,kBAAOkI,GAAPlI,CAAH,qEAET,gBAAG4I,EAAH,EAAGA,IAAH,OAAaA,GAAG,WAAQA,MAGvBE,GAAgB9I,kBAAOyI,GAAPzI,CAAH,sCACtB,qBAAGI,MAAkB0C,WAAWI,UAA/B,QAAD,4EAMWgF,M,UC/CFa,GAAkBjU,YAAsC,0BAGxDkU,GAAelU,YAA2C,uBAG1DmU,GAAmBnU,YAC9B,2BAIWoU,GAAkBpU,YAC7B,0BAIWqU,GAAqBrU,YAChC,6BAIWsU,GAAkBtU,YAK5B,0B,uCC7BUuU,GAAS,IAAIC,gBAAa,CACrCC,IAAK,oDACLC,MAAO,IAAIC,iBACXC,oBAAoB,EACpBC,eAAgB,CACdC,WAAY,CACVC,YAAa,YAEfC,MAAO,CACLD,YAAa,WACbE,YAAa,UAKNC,GAAe,IAAIV,gBAAa,CAC3CC,IAAK,8CACLC,MAAO,IAAIC,mBAGAQ,GAAc,IAAIX,gBAAa,CAC1CC,IAAK,qEACLC,MAAO,IAAIC,iBACXC,oBAAoB,EACpBC,eAAgB,CACdC,WAAY,CACVC,YAAa,gBAEfC,MAAO,CACLD,YAAa,eACbE,YAAa,UC7BNG,GAAkBC,KAAH,mVAuBrB,SAAeC,GAAtB,mC,8CAAO,WACLjN,GADK,uBAAAxH,EAAA,+EAQoC0T,GAAOS,MAA6B,CACzEA,MAAOI,GACPG,UAAW,CACTlN,QAASA,GAEX0M,YAAa,gBAbZ,mBAQKS,EARL,EAQKA,QAAS9Q,EARd,EAQcA,MAAOnC,EARrB,EAQqBA,MAQpBiT,IAAW9Q,GAAUnC,EAhBtB,yCAiBM,CACLiT,UACA9Q,MAAO+Q,QAAQ/Q,GACfgR,eAAWlV,IApBZ,cAwBGmV,EAAgBpT,EAAKqT,SAASC,OAAOtT,EAAKuT,UAAUnS,KAAI,SAACoS,GAAD,OAAOA,EAAEnW,MAxBpE,kBA0BI,CACL4V,UACA9Q,MAAO+Q,QAAQ/Q,GACfgR,UAAWC,IA7BV,2DAgCI,CACLH,SAAS,EACT9Q,OAAO,EACPgR,eAAWlV,IAnCV,2D,0FClBPwV,KAAMC,OAAOC,MACbF,KAAMC,OAAOE,MACb,IAAMC,GAAe,MAEfC,GAAchB,KAAH,sVAwBV,SAAeiB,GAAtB,mC,8CAAO,WAAmCjO,GAAnC,iDAAAxH,EAAA,sDACD0B,EAIE,GACAgU,EAAiB,WACjBC,EAAeR,KAAME,MAAMO,OAE7B/R,GAAQ,EACRgS,EAAO,EACPC,GAAW,EAXV,mBAcKA,EAdL,kCAeoDpC,GAAOS,MAAoB,CAC9EA,MAAOqB,GACPd,UAAW,CACTlN,QAASA,EACTuO,UAAWL,EACXG,QAEF3B,YAAa,gBAtBd,iBAea8B,EAfb,EAeOtU,KAAoBmC,EAf3B,EAe2BA,MAf3B,EAekC8Q,UAUjCkB,GAAQ,KACJG,EAAaC,cAAcpZ,OAAS,KAAQgH,KAC9CiS,GAAW,GAETE,IACFtU,EAAOA,EAAKsT,OAAOgB,EAAaC,iBA9BnC,yEAmCHpS,GAAQ,EAnCL,YAsCDnC,EAtCC,iBAsDH,IAfMwU,EAAoBxU,EAAK+B,QAAO,SAAC0S,EAA4CC,GAOjF,OALAD,EADoBxQ,UAAUyQ,EAAQC,KAAOd,IAAce,QAAQ,KAC9C,CACnBD,KAAMD,EAAQC,KACdE,UAAWC,WAAWJ,EAAQG,WAC9BE,oBAAqBD,WAAWJ,EAAQK,sBAEnCN,IACN,IAEGO,EAAaR,EAAkBvQ,SAASnJ,OAAOgB,KAAK0Y,GAAmB,KAGzES,EApDD,iBAoDaD,QApDb,IAoDaA,OApDb,EAoDaA,EAAYL,YApDzB,QAoDiCX,EAChCkB,EArDD,iBAqDaF,QArDb,IAqDaA,OArDb,EAqDaA,EAAYD,2BArDzB,QAqDgD,EAC5CE,EAAYhB,EAAeJ,IAC1BsB,EAAUF,EAAYpB,GACtBuB,EAAkBnR,UAAUkR,EAAUtB,IAAce,QAAQ,IAC7D9Z,OAAOgB,KAAK0Y,GAAmBa,SAASD,EAAgB3S,YAO3DyS,EAAYV,EAAkBY,GAAiBL,oBAN/CP,EAAkBY,GAAmB,CACnCT,KAAMQ,EACNN,UAAW,EACXE,oBAAqBG,GAKzBD,EAAYE,EAlEX,OAqEGG,EAAUxa,OAAOgB,KAAK0Y,GAAmBpT,KAAI,SAAC/F,GAClD,OAAOmZ,EAAkBvQ,SAAS5I,OAtEjC,kBAyEI,CACL2E,KAAMsV,EACNnT,OAAO,IA3EN,iCA8EI,CACLnC,UAAM/B,EACNkE,UAhFC,2D,sBCzBA,SAAeoT,GAAtB,yC,8CAAO,WACL9C,EACAT,EACAwD,EACAC,GAJK,uCAAAnX,EAAA,sDAKLoX,EALK,+BAKO,IAERC,EAAc,GACdvB,GAAW,EACXD,EAAO,EATN,mBAWKC,EAXL,wBAYGwB,EAAMH,EAAOta,OACbgZ,EAAOuB,EAAYD,EAAOta,SAC5Bya,EAAMzB,EAAOuB,GAETG,EAASJ,EAAOK,MAAM3B,EAAMyB,GAhBjC,UAiBoB5D,EAAOS,MAAY,CACtCA,MAAOA,EAAK,WAAL,eAAS+C,GAAT,QAAeK,KACtBrD,YAAa,iBAnBd,QAiBKtQ,EAjBL,OAqBDyT,EAAW,6BACNA,GACAzT,EAAOlC,MAERlF,OAAOgB,KAAKoG,EAAOlC,MAAM7E,OAASua,GAAavB,EAAOuB,EAAYD,EAAOta,OAC3EiZ,GAAW,EAEXD,GAAQuB,EA5BT,gDA+BIC,GA/BJ,yCAiCHhV,QAAQoV,IAAR,MAjCG,uBAkCI9X,GAlCJ,2D,sBAsCA,SAAS+X,KACd,IAAMC,EAAiBxC,OAIvB,MAAO,CAHIwC,EAAeC,SAAS,EAAG,OAAOC,QAAQ,UAAUjC,OACpD+B,EAAeC,SAAS,EAAG,OAAOC,QAAQ,UAAUjC,OACjD+B,EAAeC,SAAS,EAAG,QAAQC,QAAQ,UAAUjC,QChD9D,I,GAAMkC,GAAa,SAACC,GACzB,IAAIC,EAAc,iBASlB,OARAA,GAAeD,EAAWjV,KAAI,SAAC6T,GAC7B,MAAM,IAAN,OAAWA,EAAX,8FAA0GA,EAA1G,2BACEA,EAAY,IADd,qCAMFqB,GAAe,IACRxD,KAAIwD,IAON,SAASC,GACdF,GASC,IAAD,EAC4BG,qBAD5B,mBACOC,EADP,KACeC,EADf,OAE0BF,oBAAS,GAFnC,mBAEOrU,EAFP,KAEcwU,EAFd,KAkCA,OA9BAjc,qBAAU,WAAM,4CACd,4BAAA4D,EAAA,sEACwBiX,GAAWa,GAAYxD,GAAa,GAAIyD,GADhE,QACQO,EADR,QAGIF,EAAUE,GAEVD,GAAS,GALb,4CADc,sBASTF,GAAWtU,GATD,WAAD,wBAUZ0U,MAoBG,CACLJ,OAjBsBhI,mBAAQ,WAC9B,GAAIgI,EAAQ,CACV,IAAMK,EAAY,GAClB,IAAK,IAAMC,KAAKN,EACVA,EAAOM,GAAG5b,OAAS,GACrB2b,EAAUnU,KAAK,CACbsS,UAAW8B,EAAEC,MAAM,KAAK,GACxBC,OAAQR,EAAOM,GAAG,GAAV,SAId,OAAOD,KAGR,CAACL,IAIFtU,SAWG,SAAe+U,GAAtB,mC,8CAAO,WAAuCb,GAAvC,iCAAA/X,EAAA,yDAA6DoX,EAA7D,+BAAyE,IACnD,KAAb,OAAVW,QAAU,IAAVA,OAAA,EAAAA,EAAYlb,QADX,yCAEI,IAFJ,uBAI0Boa,GAAWa,GAAYxD,GAAa,GAAIyD,EAAYX,GAJ9E,OAOL,GAHMC,EAJD,OAMCc,EAAgB,GAClBd,EACF,IAAWoB,KAAKpB,EACVA,EAAYoB,GAAG5b,OAAS,GAC1Bsb,EAAO9T,KAAK,CACVsS,UAAW8B,EAAEC,MAAM,KAAK,GACxBC,OAAQtB,EAAYoB,GAAG,GAAf,SAZX,yBAiBEN,GAjBF,4C,sBCtEPhD,KAAMC,OAAOC,MACbF,KAAMC,OAAOE,MAEN,ICDKuD,G,GDuBNC,GAActE,KAAH,4XA4BV,SAAeuE,GAAtB,uC,8CAAO,WACLvR,EACA5G,EACA8U,GAHK,mCAAA1V,EAAA,kEAWG2V,EAAeR,KAAME,MAAMO,OAE5BF,EAbF,uBAcDrT,QAAQoV,IAAI,4CAdX,kBAeM,CACL/V,KAAM,GACNmC,OAAO,IAjBR,OAwBH,IAFMkU,EAAa,GACfiB,EAAOtD,EACJsD,GAAQrD,GACboC,EAAW1T,KAAK2U,GAChBA,GAAQpY,EA1BP,GA8BuB,IAAtBmX,EAAWlb,OA9BZ,0CA+BM,CACL6E,KAAM,GACNmC,OAAO,IAjCR,yBAsCkB+U,GAAwBb,EAAY,KAtCtD,YAsCGI,EAtCH,SAuC8B,IAAlBA,EAAOtb,OAvCnB,wBAwCDwF,QAAQoV,IAAI,yBAxCX,kBAyCM,CACL/V,KAAM,GACNmC,OAAO,IA3CR,QA8CCnC,EAME,GACFmU,EAAO,EACPC,GAAW,EAtDZ,WAuDKA,EAvDL,kCAwDkDpC,GAAOS,MAAoB,CAC5EA,MAAO2E,GACPpE,UAAW,CACTlN,QAASA,EACTuO,UAAWL,EACXG,QAEF3B,YAAa,aA/Dd,iBAwDa+E,EAxDb,EAwDOvX,KAAiBwX,EAxDxB,EAwDwBA,OAxDxB,EAwDgCvE,UAU/BkB,GAAQ,KACHoD,GAAaA,EAAUE,eAAetc,OAAS,KAAQqc,KAC1DpD,GAAW,GAETmD,IACFvX,EAAOA,EAAKsT,OAAOiE,EAAUE,kBAvEhC,+BA4EGC,EAAmB1X,EAAKoB,KAAI,SAAChF,GACjC,MAAO,CACLkb,KAAMlb,EAAEub,gBACR1Q,KAAM6N,WAAW1Y,EAAE6K,MACnB2Q,MAAO9C,WAAW1Y,EAAEwb,OACpBC,KAAM/C,WAAW1Y,EAAEyb,MACnBC,IAAKhD,WAAW1Y,EAAE0b,SAlFnB,kBAsFI,CACL9X,KAAM0X,EACNvV,OAAO,IAxFN,yCA2FHxB,QAAQoV,IAAR,MA3FG,kBA4FI,CACL/V,KAAM,GACNmC,OAAO,IA9FN,2D,sBE/BA,SAAS4V,GAAkBjS,EAAiBkS,GACjD,OAAIlS,IAAYV,GACP,OAEF4S,EAGF,SAASC,GAAgBnS,EAAiBoS,GAC/C,OAAIpS,IAAYV,GACP,QAEF8S,G,SD/BGf,O,eAAAA,I,eAAAA,I,gBAAAA,Q,KENZ,IAAMgB,GAAsBrF,KAAH,61EA4PlB,SAAesF,GAAtB,mC,8CAAO,WACLtS,GADK,iCAAAxH,EAAA,+EAIoC0T,GAAOS,MAA0B,CACtEA,MAAO0F,GACPnF,UAAW,CACTlN,QAASA,GAEX0M,YAAa,gBATZ,mBAIKxS,EAJL,EAIKA,KAAMmC,EAJX,EAIWA,MAAO8Q,EAJlB,EAIkBA,SAQjB9Q,EAZD,yCAaM,CACLnC,UAAM/B,EACNkE,OAAO,EACP8Q,SAAS,IAhBV,WAoBCA,GAAYjT,EApBb,0CAqBM,CACLA,UAAM/B,EACNkE,OAAO,EACP8Q,SAAS,IAxBV,eA4BGoF,EAASrY,EAAKsY,SAASlX,KAAI,SAACmX,GAChC,MAAO,CACLC,KAAMrB,GAAgBsB,KACtBC,KAAMH,EAAEI,YAAYtb,GACpB4X,UAAWsD,EAAEtD,UACb2D,OAAQL,EAAEM,OACVC,aAAcf,GAAkBQ,EAAEQ,KAAKC,OAAO3b,GAAIkb,EAAEQ,KAAKC,OAAOhB,QAChEiB,aAAclB,GAAkBQ,EAAEQ,KAAKG,OAAO7b,GAAIkb,EAAEQ,KAAKG,OAAOlB,QAChEmB,cAAeZ,EAAEQ,KAAKC,OAAO3b,GAC7B+b,cAAeb,EAAEQ,KAAKG,OAAO7b,GAC7Bgc,UAAWvE,WAAWyD,EAAEc,WACxBC,aAAcxE,WAAWyD,EAAEgB,SAC3BC,aAAc1E,WAAWyD,EAAEkB,aAGzBC,EAAS1Z,EAAK2Z,SAASvY,KAAI,SAACmX,GAChC,MAAO,CACLC,KAAMrB,GAAgBsB,KACtBC,KAAMH,EAAEI,YAAYtb,GACpB4X,UAAWsD,EAAEtD,UACb2D,OAAQL,EAAEM,OACVC,aAAcf,GAAkBQ,EAAEQ,KAAKC,OAAO3b,GAAIkb,EAAEQ,KAAKC,OAAOhB,QAChEiB,aAAclB,GAAkBQ,EAAEQ,KAAKG,OAAO7b,GAAIkb,EAAEQ,KAAKG,OAAOlB,QAChEmB,cAAeZ,EAAEQ,KAAKC,OAAO3b,GAC7B+b,cAAeb,EAAEQ,KAAKG,OAAO7b,GAC7Bgc,UAAWvE,WAAWyD,EAAEc,WACxBC,aAAcxE,WAAWyD,EAAEgB,SAC3BC,aAAc1E,WAAWyD,EAAEkB,aAIzBG,EAAS5Z,EAAK6Z,SAASzY,KAAI,SAACmX,GAChC,MAAO,CACLC,KAAMrB,GAAgB2C,KACtBpB,KAAMH,EAAEI,YAAYtb,GACpB4X,UAAWsD,EAAEtD,UACb2D,OAAQL,EAAEwB,MACVjB,aAAcf,GAAkBQ,EAAEQ,KAAKC,OAAO3b,GAAIkb,EAAEQ,KAAKC,OAAOhB,QAChEiB,aAAclB,GAAkBQ,EAAEQ,KAAKG,OAAO7b,GAAIkb,EAAEQ,KAAKG,OAAOlB,QAChEmB,cAAeZ,EAAEQ,KAAKC,OAAO3b,GAC7B+b,cAAeb,EAAEQ,KAAKG,OAAO7b,GAC7Bgc,UAAWvE,WAAWyD,EAAEc,WACxBC,aAAcxE,WAAWyD,EAAEgB,SAC3BC,aAAc1E,WAAWyD,EAAEkB,aAGzBO,EAASha,EAAKia,SAAS7Y,KAAI,SAACmX,GAChC,MAAO,CACLC,KAAMrB,GAAgB2C,KACtBpB,KAAMH,EAAEI,YAAYtb,GACpB4X,UAAWsD,EAAEtD,UACb2D,OAAQL,EAAEwB,MACVjB,aAAcf,GAAkBQ,EAAEQ,KAAKC,OAAO3b,GAAIkb,EAAEQ,KAAKC,OAAOhB,QAChEiB,aAAclB,GAAkBQ,EAAEQ,KAAKG,OAAO7b,GAAIkb,EAAEQ,KAAKG,OAAOlB,QAChEmB,cAAeZ,EAAEQ,KAAKC,OAAO3b,GAC7B+b,cAAeb,EAAEQ,KAAKG,OAAO7b,GAC7Bgc,UAAWvE,WAAWyD,EAAEc,WACxBC,aAAcxE,WAAWyD,EAAEgB,SAC3BC,aAAc1E,WAAWyD,EAAEkB,aAIzBS,EAASla,EAAKma,SAAS/Y,KAAI,SAACmX,GAChC,MAAO,CACLC,KAAMrB,GAAgBiD,KACtB1B,KAAMH,EAAEI,YAAYtb,GACpB4X,UAAWsD,EAAEtD,UACb2D,OAAQL,EAAEM,OACVC,aAAcf,GAAkBQ,EAAEQ,KAAKC,OAAO3b,GAAIkb,EAAEQ,KAAKC,OAAOhB,QAChEiB,aAAclB,GAAkBQ,EAAEQ,KAAKG,OAAO7b,GAAIkb,EAAEQ,KAAKG,OAAOlB,QAChEmB,cAAeZ,EAAEQ,KAAKC,OAAO3b,GAC7B+b,cAAeb,EAAEQ,KAAKG,OAAO7b,GAC7Bgc,UAAWvE,WAAWyD,EAAEc,WACxBC,aAAcxE,WAAWyD,EAAEgB,SAC3BC,aAAc1E,WAAWyD,EAAEkB,aAIzBY,EAASra,EAAKsa,SAASlZ,KAAI,SAACmX,GAChC,MAAO,CACLC,KAAMrB,GAAgBiD,KACtB1B,KAAMH,EAAEI,YAAYtb,GACpB4X,UAAWsD,EAAEtD,UACb2D,OAAQL,EAAEM,OACVC,aAAcf,GAAkBQ,EAAEQ,KAAKC,OAAO3b,GAAIkb,EAAEQ,KAAKC,OAAOhB,QAChEiB,aAAclB,GAAkBQ,EAAEQ,KAAKG,OAAO7b,GAAIkb,EAAEQ,KAAKG,OAAOlB,QAChEmB,cAAeZ,EAAEQ,KAAKC,OAAO3b,GAC7B+b,cAAeb,EAAEQ,KAAKG,OAAO7b,GAC7Bgc,UAAWvE,WAAWyD,EAAEc,WACxBC,aAAcxE,WAAWyD,EAAEgB,SAC3BC,aAAc1E,WAAWyD,EAAEkB,aAtH5B,kBA0HI,CAAEzZ,KAAK,GAAD,oBAAMqY,GAAN,aAAiBqB,GAAjB,aAA4BE,GAA5B,aAAuCI,GAAvC,aAAkDE,GAAlD,aAA6DG,IAASlY,OAAO,EAAO8Q,SAAS,IA1HvG,2DA4HI,CACLjT,UAAM/B,EACNkE,OAAO,EACP8Q,SAAS,IA/HR,2D,wDCrPA,SAASsH,GAAUC,GACxB,IACE,OAAOC,sBAAWD,GAClB,SACA,OAAO,GAIX,IAAME,GAAuD,CAC3DrW,EAAG,GACHsW,EAAG,WACHC,EAAG,WACHC,EAAG,UACHC,MAAO,KAGF,SAASC,GACdpc,EACAqB,EACAwY,GAEA,IAAMwC,EAAM,kBAAcN,GAAmB/b,IAAY+b,GAAmB,GAAhE,gCAEZ,OAAQlC,GACN,IAAK,cACH,MAAM,GAAN,OAAUwC,EAAV,eAAuBhb,GAEzB,IAAK,QACH,MAAM,GAAN,OAAUgb,EAAV,kBAA0Bhb,GAE5B,IAAK,QACH,MAAM,GAAN,OAAUgb,EAAV,kBAA0Bhb,GAE5B,IAAK,UACL,QACE,MAAM,GAAN,OAAUgb,EAAV,oBAA4Bhb,IAK3B,IAAMib,GAAmB,kBAAM,IAAIC,MAAOC,WAG1C,SAASC,GAAetV,GAAqC,IAApBuV,EAAmB,uDAAX,EAChDxY,EAAS0X,GAAUzU,GACzB,IAAKjD,EACH,MAAMjE,MAAM,gCAAD,OAAiCkH,EAAjC,OAEb,MAAM,GAAN,OAAUjD,EAAOyY,UAAU,EAAGD,EAAQ,GAAtC,cAA8CxY,EAAOyY,UAAU,GAAKD,IAa1D,IAAIE,KAAS,EAAG,GA6BrB,SAASC,GAAaC,GAC3B,OAAOA,EAAOC,QAAQ,sBAAuB,QAOxC,SAASC,GAAeC,GAC7B,OAAQA,EAAM,KAAOC,YAAY,GAAK,IAGjC,SAASC,GAAiBtB,GAC/B,OAAiB,OAAVA,QAA4Bvc,IAAVuc,EC3FpB,SAASuB,KAGd,OAAOnV,aAAY,SAACC,GAAD,OAAqBA,EAAMmV,OAAOC,aAchD,SAASC,KACd,IAAMhV,EAAWC,cACjB,OAAOC,uBAAY,SAAC+U,GAAD,OAA8BjV,EAASyK,GAAa,CAAEwK,sBAAoB,CAACjV,IAGzF,SAASkV,GAAcjJ,GAC5B,IAAMkJ,EAAeN,KACfpK,EAAeuK,KAoBrB,OAjBS,OAAT/I,QAAS,IAATA,KAAW/R,KAAI,SAAC9C,GACT+d,EAAa/d,IAChBqT,EAAa,CAACrT,OAILmQ,mBAAQ,WACnB,GAAK0E,EAGL,OAAOA,EACJ/R,KAAI,SAAC9C,GAAO,IAAD,EACV,iBAAO+d,EAAa/d,UAApB,aAAO,EAAiB0B,QAEzBsc,OAAOR,MACT,CAAC3I,EAAWkJ,IA5CjB5I,KAAMC,OAAOC,MChBN,I,GAAM4I,GAAgB,SAACC,EAAkBC,EAAyBC,GAEvE,IAAMC,EAAgB7H,WAAW0H,GAAY1H,WAAW2H,GAClDG,EAAiB9H,WAAW2H,GAAmB3H,WAAW4H,GAC1DG,GAA0BF,EAAgBC,GAAkBA,EAAkB,IACpF,OAAIE,MAAMD,KAA2BE,SAASF,GACrC,CAACF,EAAe,GAElB,CAACA,EAAeE,IAQZG,GAAmB,SAACR,EAA8BC,GAC7D,GAAID,GAAYC,EAAiB,CAC/B,IAAMQ,GAAWnI,WAAW0H,GAAY1H,WAAW2H,IAAoB3H,WAAW2H,GAAoB,IACtG,GAAIM,SAASE,GAAS,OAAOA,EAE/B,OAAO,GCdIC,GAAapK,KAAH,8a,SAgCRqK,G,iFAAf,WACE1G,GADF,+BAAAnY,EAAA,+EAIkC0T,GAAOS,MAAsB,CACzDA,MAAOyK,GACPlK,UAAW,CACToK,QAAS3G,EAAO,GAChB4G,QAAS5G,EAAO,GAChB6G,UAAW7G,EAAO,MAT1B,mBAIYzW,EAJZ,EAIYA,MAJZ,EAIkBmC,MAJlB,0CAca,CACLA,OAAO,EACPnC,UAAM/B,IAhBd,YAkBe+B,EAlBf,0CAmBa,CACLA,KAAM,CACJiC,QAAS6S,WAAU,UAAC9U,EAAKiC,QAAQ,GAAGsb,mBAAjB,QAAgC,GACnDC,OAAQ1I,WAAU,oBAAC9U,EAAKwd,OAAO,UAAb,aAAC,EAAgBD,mBAAjB,QAAgC,GAClDE,OAAQ3I,WAAU,oBAAC9U,EAAKyd,OAAO,UAAb,aAAC,EAAgBF,mBAAjB,QAAgC,GAClDG,KAAM5I,WAAU,oBAAC9U,EAAK2d,QAAQ,UAAd,aAAC,EAAiBJ,mBAAlB,QAAiC,IAEnDpb,OAAO,IA1Bf,iCA6Ba,CACLnC,UAAM/B,EACNkE,OAAO,IA/Bf,iEAmCIxB,QAAQoV,IAAR,MAnCJ,kBAoCW,CACL/V,UAAM/B,EACNkE,OAAO,IAtCb,2D,sBA8CO,SAASyb,KAAuC,IAAD,EACxBpH,qBADwB,mBAC7CqH,EAD6C,KACrCC,EADqC,OAE1BtH,oBAAS,GAFiB,mBAE7CrU,EAF6C,KAEtCwU,EAFsC,OAI1BX,KAJ0B,qBAKdO,GAAwB,CALV,iBAK5CE,EAL4C,EAK5CA,OAAesH,EAL6B,EAKpC5b,MAEV6b,EAAkBvP,mBAAQ,WAC9B,GAAIgI,EACF,OAAOA,EAAOrV,KAAI,SAACgL,GAAD,OAAO0I,WAAW1I,EAAE6K,aAGvC,CAACR,IAgBJ,OAdA/b,qBAAU,WAAM,4CACd,8BAAA4D,EAAA,sEACgC6e,GAAea,GAD/C,gBACUhe,EADV,EACUA,KADV,EACgBmC,OACD4b,EACXpH,GAAS,GACA3W,GACT8d,EAAU9d,GALd,4CADc,sBAST6d,GAAW1b,IAAS6b,GATV,WAAD,wBAUZnd,KAED,CAACsB,EAAO0b,EAAQG,EAAiBD,IAE7BF,EC7GF,IAAMI,GAAc,SAACC,EAA2BlC,GACrD,IAAImC,EAAW,IACfnC,EAAO5a,KAAI,SAAC0E,GACV,OAAQqY,GAAW,WAAQrY,EAAR,SAGrB,IAAMwQ,EACJ,4DAFF6H,GAAe,IAEb,OAGCD,EAAK,0BAAsBA,EAAtB,WAHN,yQAkBF,OAAOpL,KAAIwD,IA0BN,SAAS8H,GACdjC,GASA,MAE0BnG,KAF1B,qBAIsCO,GAAwB,CAJ9D,iBAIQE,EAJR,EAIQA,OAAesH,EAJvB,EAIgB5b,MAJhB,SAKsCsU,QALtC,IAKsCA,IAAU,GALhD,mBAKO2G,EALP,KAKgBC,EALhB,KAKyBC,EALzB,KAMMe,EAAYT,KANlB,EAQiCU,oBAA4BL,QAAYhgB,EAAWke,IAA5ElJ,EARR,EAQQA,QAAS9Q,EARjB,EAQiBA,MAAOnC,EARxB,EAQwBA,KARxB,EAU6Dse,oBAC3DL,GAAYha,SAAQ,OAACmZ,QAAD,IAACA,OAAD,EAACA,EAASnG,QAASkF,IADxBoC,EAVjB,EAUQtL,QAA2BuL,EAVnC,EAU4Brc,MAAsBsc,EAVlD,EAU4Cze,KAV5C,EAc6Dse,oBAC3DL,GAAYha,SAAQ,OAACoZ,QAAD,IAACA,OAAD,EAACA,EAASpG,QAASkF,IADxBuC,EAdjB,EAcQzL,QAA2B0L,EAdnC,EAc4Bxc,MAAsByc,EAdlD,EAc4C5e,KAd5C,EAiBmEse,oBACjEL,GAAYha,SAAQ,OAACqZ,QAAD,IAACA,OAAD,EAACA,EAAWrG,QAASkF,IAD1B0C,EAjBjB,EAiBQ5L,QAA6B6L,EAjBrC,EAiB8B3c,MAAwB4c,EAjBtD,EAiBgD/e,KAI1Cgf,EAAW9L,QAAQ/Q,GAASqc,GAAWG,GAAWZ,GAAce,GAChEG,EAAa/L,QAAQD,GAAWsL,GAAaG,GAAaG,IAAgBpI,GAEhF,IAAK4H,EACH,MAAO,CACLpL,SAAS,EACT9Q,OAAO,EACPnC,UAAM/B,GAKV,GAAI+gB,GAAYC,EACd,MAAO,CACLhM,QAASgM,EACT9c,MAAO6c,EACPhf,UAAM/B,GAIV,IAAM4E,GAAa,OAAJ7C,QAAI,IAAJA,OAAA,EAAAA,EAAMgc,QACjBhc,EAAKgc,OAAOja,QAAO,SAAC0S,EAA2CyK,GAE7D,OADAzK,EAAMyK,EAAS7hB,IAAM6hB,EACdzK,IACN,IACH,GACE0K,GAAiB,OAANV,QAAM,IAANA,OAAA,EAAAA,EAAQzC,QACrByC,EAAOzC,OAAOja,QAAO,SAAC0S,EAA2CyK,GAE/D,OADAzK,EAAMyK,EAAS7hB,IAAM6hB,EACdzK,IACN,IACH,GACE2K,GAAiB,OAANR,QAAM,IAANA,OAAA,EAAAA,EAAQ5C,QACrB4C,EAAO5C,OAAOja,QAAO,SAAC0S,EAA2CyK,GAE/D,OADAzK,EAAMyK,EAAS7hB,IAAM6hB,EACdzK,IACN,IACH,GACE4K,GAAqB,OAARN,QAAQ,IAARA,OAAA,EAAAA,EAAU/C,QACzB+C,EAAS/C,OAAOja,QAAO,SAAC0S,EAA2CyK,GAEjE,OADAzK,EAAMyK,EAAS7hB,IAAM6hB,EACdzK,IACN,IACH,GAqEJ,MAAO,CACLxB,QAASgM,EACT9c,MAAO6c,EACPhf,KArEgBmc,EAAepa,QAAO,SAAC0S,EAAyC3O,GAChF,IAAM7D,EAAmCY,EAAOiD,GAC1C0X,EAAkC2B,EAASrZ,GAC3C2X,EAAkC2B,EAAStZ,GAC3C4X,EAAgC2B,EAAWvZ,GAEjC,+CAAZA,GACFnF,QAAQoV,IAAI9T,GAP8E,MAW1FA,GAAWub,GAAUC,EACjBlB,GAActa,EAAQ4S,UAAW2I,EAAO3I,UAAW4I,EAAO5I,WAC1D5S,EACA,CAAC6S,WAAW7S,EAAQ4S,WAAY,GAChC,CAAC,EAAG,GAfkF,mBAUrFA,EAVqF,KAU1EyK,EAV0E,KAgBtFC,EACJtd,GAAWyb,EACP5I,WAAW7S,EAAQ4S,WAAaC,WAAW4I,EAAK7I,WAChD5S,EACA6S,WAAW7S,EAAQ4S,WACnB,EACA2K,EAASvd,EAAU6S,WAAW7S,EAAQ8S,qBAAuB,EAC7D0K,EAAezC,GAAgB,OAAC/a,QAAD,IAACA,OAAD,EAACA,EAAS8S,oBAAV,OAA+ByI,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAQzI,qBACtE2K,EAAWzd,EAAU6S,WAAW7S,EAAQ0d,kBAAoB,EAC5DC,EAAW3d,EAAU6S,WAAW7S,EAAQ4d,YAAcxB,EAAUpc,QAAU,EAC1E6d,EAAiBtC,EAAS1I,WAAW0I,EAAOqC,YAAcxB,EAAUb,OAAS,EAC7EuC,EAAerC,EAAO5I,WAAW4I,EAAKmC,YAAcxB,EAAUX,KAAO,EACrEsC,EACJJ,GAAYE,EAAiB9C,GAAiB4C,EAASnd,WAAYqd,EAAerd,YAAc,EAC5Fwd,EACJL,GAAYG,EAAe/C,GAAiB4C,EAASnd,WAAYsd,EAAatd,YAAc,EACxFyd,EACJje,GAAWub,EACP1I,WAAW7S,EAAQie,SAAWpL,WAAW0I,EAAO0C,SAChDje,EACA6S,WAAW7S,EAAQie,SACnB,EACAC,EACJle,GAAWub,EACP1I,WAAW7S,EAAQke,SAAWrL,WAAW0I,EAAO2C,SAChDle,EACA6S,WAAW7S,EAAQke,SACnB,EAoBN,OAlBA1L,EAAM3O,GAAW,CACfsa,SAAUne,EACV6D,UACAoS,KAAMjW,EAAUgW,GAAgBnS,EAAS7D,EAAQiW,MAAQ,GACzDF,OAAQ/V,EAAU8V,GAAkBjS,EAAS7D,EAAQ+V,QAAU,GAC/DnD,YACAyK,kBACAC,gBACAW,UACAV,SACAW,UACAV,eACAC,WACAE,WACAI,iBACAC,sBAGKxL,IACN,KCpME,I,GAAM4L,GAAiB5iB,YAAoC,wBAGrD6iB,GAAc7iB,YAA0C,oBAExD8iB,GAAsB9iB,YACjC,4BAGW+iB,GAAyB/iB,YACpC,+BAGWgjB,GAAiBhjB,YAU3B,uBCpBHgW,KAAMC,OAAOC,MACbF,KAAMC,OAAOE,MACb,I,GAAMC,GAAe,MAEf6M,GAAa5N,KAAH,sUAwBT,SAAe6N,GAAtB,mC,8CAAO,WAAkC7a,GAAlC,iDAAAxH,EAAA,sDACD0B,EAIE,GACAgU,EAAiB,WACjBC,EAAeR,KAAME,MAAMO,OAE7B/R,GAAQ,EACRgS,EAAO,EACPC,GAAW,EAXV,mBAcKA,EAdL,kCAeoDpC,GAAOS,MAAoB,CAC9EA,MAAOiO,GACP1N,UAAW,CACTlN,QAASA,EACTuO,UAAWL,EACXG,QAEF3B,YAAa,gBAtBd,iBAea8B,EAfb,EAeOtU,KAAoBmC,EAf3B,EAe2BA,MAf3B,EAekC8Q,UAUjCkB,GAAQ,KACJG,EAAasM,aAAazlB,OAAS,KAAQgH,KAC7CiS,GAAW,GAETE,IACFtU,EAAOA,EAAKsT,OAAOgB,EAAasM,gBA9BnC,yEAmCHze,GAAQ,EAnCL,YAsCDnC,EAtCC,iBAsDH,IAfMwU,EAAoBxU,EAAK+B,QAAO,SAAC0S,EAA2CC,GAOhF,OALAD,EADoBxQ,UAAUyQ,EAAQC,KAAOd,IAAce,QAAQ,KAC9C,CACnBD,KAAMD,EAAQC,KACdE,UAAWC,WAAWJ,EAAQG,WAC9BE,oBAAqBD,WAAWJ,EAAQ8K,SAEnC/K,IACN,IAEGO,EAAaR,EAAkBvQ,SAASnJ,OAAOgB,KAAK0Y,GAAmB,KAGzES,EApDD,iBAoDaD,QApDb,IAoDaA,OApDb,EAoDaA,EAAYL,YApDzB,QAoDiCX,EAChCkB,EArDD,iBAqDaF,QArDb,IAqDaA,OArDb,EAqDaA,EAAYD,2BArDzB,QAqDgD,EAC5CE,EAAYhB,EAAeJ,IAC1BsB,EAAUF,EAAYpB,GACtBuB,EAAkBnR,UAAUkR,EAAUtB,IAAce,QAAQ,IAC7D9Z,OAAOgB,KAAK0Y,GAAmBa,SAASD,EAAgB3S,YAO3DyS,EAAYV,EAAkBY,GAAiBL,oBAN/CP,EAAkBY,GAAmB,CACnCT,KAAMQ,EACNN,UAAW,EACXE,oBAAqBG,GAKzBD,EAAYE,EAlEX,OAqEGG,EAAUxa,OAAOgB,KAAK0Y,GAAmBpT,KAAI,SAAC/F,GAClD,OAAOmZ,EAAkBvQ,SAAS5I,OAtEjC,kBAyEI,CACL2E,KAAMsV,EACNnT,OAAO,IA3EN,iCA8EI,CACLnC,UAAM/B,EACNkE,UAhFC,2D,sBChCP,I,MAAM0e,GAAoB/N,KAAH,irCAkIhB,SAAegO,GAAtB,mC,8CAAO,WACLhb,GADK,2BAAAxH,EAAA,sEAGkC0T,GAAOS,MAA0B,CACtEA,MAAOoO,GACP7N,UAAW,CACTlN,QAASA,GAEX0M,YAAa,gBARV,mBAGGxS,EAHH,EAGGA,KAAMmC,EAHT,EAGSA,MAAO8Q,EAHhB,EAGgBA,SAQjB9Q,EAXC,yCAYI,CACLnC,UAAM/B,EACNkE,OAAO,EACP8Q,SAAS,IAfR,WAmBDA,GAAYjT,EAnBX,0CAoBI,CACLA,UAAM/B,EACNkE,OAAO,EACP8Q,SAAS,IAvBR,eA2BC8N,EAAQ/gB,EAAK+gB,MAAM3f,KAAI,SAACmX,GAC5B,MAAO,CACLC,KAAMrB,GAAgBsB,KACtBC,KAAMH,EAAEI,YAAYtb,GACpB4X,UAAWsD,EAAEtD,UACb2D,OAAQL,EAAEM,OACVC,aAAcf,GAAkBQ,EAAEQ,KAAKC,OAAO3b,GAAIkb,EAAEQ,KAAKC,OAAOhB,QAChEiB,aAAclB,GAAkBQ,EAAEQ,KAAKG,OAAO7b,GAAIkb,EAAEQ,KAAKG,OAAOlB,QAChEmB,cAAeZ,EAAEQ,KAAKC,OAAO3b,GAC7B+b,cAAeb,EAAEQ,KAAKG,OAAO7b,GAC7Bgc,UAAWvE,WAAWyD,EAAEc,WACxBC,aAAcxE,WAAWyD,EAAEgB,SAC3BC,aAAc1E,WAAWyD,EAAEkB,aAGzBuH,EAAQhhB,EAAKghB,MAAM5f,KAAI,SAACmX,GAC5B,MAAO,CACLC,KAAMrB,GAAgB2C,KACtBpB,KAAMH,EAAEI,YAAYtb,GACpB4X,UAAWsD,EAAEtD,UACb2D,OAAQL,EAAEwB,MACVjB,aAAcf,GAAkBQ,EAAEQ,KAAKC,OAAO3b,GAAIkb,EAAEQ,KAAKC,OAAOhB,QAChEiB,aAAclB,GAAkBQ,EAAEQ,KAAKG,OAAO7b,GAAIkb,EAAEQ,KAAKG,OAAOlB,QAChEmB,cAAeZ,EAAEQ,KAAKC,OAAO3b,GAC7B+b,cAAeb,EAAEQ,KAAKG,OAAO7b,GAC7Bgc,UAAWvE,WAAWyD,EAAEc,WACxBC,aAAcxE,WAAWyD,EAAEgB,SAC3BC,aAAc1E,WAAWyD,EAAEkB,aAIzBwH,EAAQjhB,EAAKihB,MAAM7f,KAAI,SAACmX,GAC5B,MAAO,CACLC,KAAMrB,GAAgBiD,KACtB1B,KAAMH,EAAEI,YAAYtb,GACpB4X,UAAWsD,EAAEtD,UACb2D,OAAQL,EAAEM,OACVC,aAAcf,GAAkBQ,EAAEQ,KAAKC,OAAO3b,GAAIkb,EAAEQ,KAAKC,OAAOhB,QAChEiB,aAAclB,GAAkBQ,EAAEQ,KAAKG,OAAO7b,GAAIkb,EAAEQ,KAAKG,OAAOlB,QAChEmB,cAAeZ,EAAEQ,KAAKC,OAAO3b,GAC7B+b,cAAeb,EAAEQ,KAAKG,OAAO7b,GAC7Bgc,UAAWvE,WAAWyD,EAAEc,WACxBC,aAAcxE,WAAWyD,EAAEgB,SAC3BC,aAAc1E,WAAWyD,EAAEkB,aAtE1B,kBA0EE,CAAEzZ,KAAK,GAAD,oBAAM+gB,GAAN,aAAgBC,GAAhB,aAA0BC,IAAQ9e,OAAO,EAAO8Q,SAAS,IA1EjE,6C,sBC3HA,SAASiO,KAGd,OAAOta,aAAY,SAACC,GAAD,OAAqBA,EAAMsa,MAAMlF,aAQ/C,SAASmF,KACd,IAAMla,EAAWC,cACjB,OAAOC,uBAAY,SAACia,GAAD,OAA6Bna,EAASoZ,GAAY,CAAEe,qBAAmB,CAACna,IAGtF,SAASoa,GAAaD,GAC3B,IAAME,EAAcL,KACdZ,EAAcc,KAEdI,EAAqBH,EAActf,QAAO,SAAC0S,EAAiB3O,GAIhE,OAHKhL,OAAOgB,KAAKylB,GAAalM,SAASvP,IACrC2O,EAAM9R,KAAKmD,GAEN2O,IACN,IAiBH,OAfA/Z,qBAAU,WACJ8mB,GACFlB,EAAYkB,KAGb,CAAClB,EAAakB,IAGKH,EACnBjgB,KAAI,SAAC0E,GAAa,IAAD,EACVoZ,EAAQ,UAAGqC,EAAYzb,UAAf,aAAG,EAAsB9F,KACvC,cAAOkf,QAAP,IAAOA,SAAYjhB,KAEpBqe,OAAOR,IC1CL,I,SAAM2F,GAAe3O,KAAH,imBAuBZ4O,GAAc5O,KAAH,otBC/BxB,I,GAAM6O,GAAShZ,UAAOa,IAAV,2GAUCoY,IALejZ,kBAAOgZ,GAAPhZ,CAAH,sEAKCA,UAAOa,IAAV,sHAML,gBAAG+H,EAAH,EAAGA,IAAH,OAAsB,OAARA,EAAgB,MAAmB,OAARA,GAAgB,SAAoB,OAARA,GAAgB,QAAWA,KAC/F,gBAAGP,EAAH,EAAGA,QAAH,OAAiBA,GAAWA,M,UCfzC6Q,GAA6C,GCC5C,IAAMC,GAAkB,SAAChc,GAAD,8FACoDA,EADpD,cAGzBic,GAAapZ,mBDKJ,YAAkD,IAAlCqZ,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,IAAQtX,EAAmB,iCAC1C6L,mBAAiB,GAA5B0L,EADqD,oBAGxDC,EAA0BH,EAAKI,MAAK,SAACD,GAAD,OAAUN,GAASM,MAE7D,OAAIA,EAEA,kDACMxX,GADN,IAEEsX,IAAKA,EACLE,IAAKA,EACLE,QAAS,WACHF,IAAKN,GAASM,IAAO,GACzBD,GAAQ,SAACjnB,GAAD,OAAOA,EAAI,SAMpB,eAAC,KAAD,gBAAgB0P,MCxBNhC,CAAH,+KACL,qBAAGc,QACF,qBAAGA,QACI,qBAAGA,QAEA,qBAAGV,MAAkBI,SAChC,qBAAGJ,MAAkBO,SAGjB,SAASgZ,GAAT,GASX,IARFxc,EAQC,EARDA,QAQC,IAPD2D,YAOC,MAPM,OAON,EAND8Y,EAMC,EANDA,MACG5X,EAKF,2CACKqX,EAAiBvT,mBAAQ,WAC7B,IAAM+T,EAAcjI,GAAUzU,GAE9B,OAAI0c,EACK,CAACV,GAAgBU,IAEnB,KACN,CAAC1c,IAEJ,OAAO,eAACic,GAAD,cAAYtY,KAAMA,EAAMuY,KAAMA,EAAMC,IAAK,aAAcM,MAAOA,GAAW5X,I,mECjCrE8X,GAAqB,SAACC,GAAuD,IAA9BC,EAA6B,uDAApB,EAAGC,IAAiB,yDACvF,OAAY,IAARF,EAAkB,QACjBA,EACDA,EAAM,MAASC,GAAU,EACpB,UAGFE,KAAOH,GAAKI,eAAe,CAChCC,QAASH,EACTI,SAAUN,EAAM,IAAO,EAAIC,EAC3BM,cAAe,CACbC,QAAS,IACTC,QAAS,OAVI,KAgBNC,GAAe,SAACV,GAAyC,IAAhBC,EAAe,uDAAN,EAC7D,OAAY,IAARD,EAAkB,IACjBA,EACDA,EAAM,KACD,SAEFG,KAAOH,GAAKW,OAAO,CACxBN,SAAS,EACTC,SAAUN,EAAM,IAAO,EAAIC,EAC3BM,cAAe,CACbC,QAAS,IACTC,QAAS,OATI,KCnBbG,GAAU3a,UAAOa,IAAV,qHAIK,gBAAG+Z,EAAH,EAAGA,QAAH,SAAYC,SAAwBD,EAAU,EAAI,GAAG9gB,WAAa,QAU9EghB,GAAa9a,kBAAO2Z,GAAP3Z,CAAH,6CAGV+a,GAAc/a,kBAAO2Z,GAAP3Z,CAAH,oFAEJ,kBAAiB,KAAjB,EAAG4a,QAA+B,GAAG9gB,WAAa,QAGhD,SAASkhB,GAAT,GAAyG,IAA3EC,EAA0E,EAA1EA,SAAUC,EAAgE,EAAhEA,SAAgE,IAAtDpa,YAAsD,MAA/C,GAA+C,MAA3C+Z,cAA2C,SACrH,OACE,gBAACF,GAAD,CAASC,QAAS9Z,EAAM+Z,OAAQA,EAAhC,UACGI,GAAY,eAACH,GAAD,CAAY3d,QAAS8d,EAAUna,KAAMA,EAAKhH,WAAa,OACnEohB,GAAY,eAACH,GAAD,CAAa5d,QAAS+d,EAAUpa,KAAMA,EAAKhH,WAAa,KAAM8gB,QAAS9Z,OC3B1F,I,mDAAMqa,GAAOnb,kBAAOmI,OAAPnI,CAAH,+IACC,gBAAG5L,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,IAAS,UAGtB,qBAAGkU,WACJ,qBAAGC,UACI,qBAAGC,gBAEP2S,MAEFC,GAAYpb,kBAAOmb,GAAPnb,CAAH,kFACA,qBAAGI,MAAkB6D,OACrB,qBAAG7D,MAAkBM,OAG9B2a,GAAgBrb,kBAAOmb,GAAPnb,CAAH,wDACJ,qBAAGI,MAAkB8D,OAG9BoX,GAAWtb,kBAAOmb,GAAPnb,CAAH,wDACC,qBAAGI,MAAkB6D,OAG9BsX,GAAevb,kBAAOmb,GAAPnb,CAAH,wDACH,qBAAGI,MAAkB4D,OAuC9BwX,IApCcxb,kBAAOmb,GAAPnb,CAAH,wDACF,qBAAGI,MAAkB8D,OAGjBlE,kBAAOmb,GAAPnb,CAAH,iHAEZ,qBAAGI,MAAkBiF,WAIRrF,kBAAOmb,GAAPnb,CAAH,gHAEV,qBAAGI,MAAkBG,YAIRP,kBAAOmb,GAAPnb,CAAH,sHACC,qBAAGI,MAAkBsE,YAChC,qBAAGtE,MAAkBkF,SAKLtF,UAAOa,IAAV,gNAaCb,kBAAOmb,GAAPnb,CAAH,yJAGN,qBAAGI,MAAkB8D,OAC1B,qBAAG9D,MAAkBwC,U,0BCnEjB,SAAS6Y,KACtB,OAAOC,qBAAWC,gBCKpB,IAAMC,GAAO5b,kBAAO6b,UAAP7b,CAAH,8dAMG,gBAAGsI,EAAH,EAAGA,QAAH,OAAkBA,GAAoB,cACxC,gBAAGlU,EAAH,EAAGA,MAAH,OAAgBA,GAAgB,UAIxB,gBAAGoU,EAAH,EAAGA,aAAH,OAAsBA,GAAgBA,KAqB5CsT,GAAgB9b,kBAAO4b,GAAP5b,CAAH,2cACJ,gBAAGI,EAAH,EAAGA,MAAO2b,EAAV,EAAUA,QAAV,cAAwBA,QAAxB,IAAwBA,IAAW3b,EAAMG,YAGnC,gBAAGH,EAAH,EAAGA,MAAO2b,EAAV,EAAUA,QAAV,OAAwBtb,YAAO,IAAD,OAAOsb,QAAP,IAAOA,IAAW3b,EAAMG,aAC1D,gBAAGH,EAAH,EAAGA,MAAO2b,EAAV,EAAUA,QAAV,OAAwBtb,YAAO,IAAD,OAAOsb,QAAP,IAAOA,IAAW3b,EAAMG,aAGtD,gBAAGH,EAAH,EAAGA,MAAO2b,EAAV,EAAUA,QAAV,OAAwBtb,YAAO,IAAD,OAAOsb,QAAP,IAAOA,IAAW3b,EAAMG,aAGlD,gBAAGH,EAAH,EAAGA,MAAO2b,EAAV,EAAUA,QAAV,OAAwBtb,YAAO,GAAD,OAAMsb,QAAN,IAAMA,IAAW3b,EAAMG,aACzD,gBAAGH,EAAH,EAAGA,MAAO2b,EAAV,EAAUA,QAAV,OAAwBtb,YAAO,GAAD,OAAMsb,QAAN,IAAMA,IAAW3b,EAAMG,aAGrD,gBAAGH,EAAH,EAAGA,MAAO4b,EAAV,EAAUA,iBAAkB9a,EAA5B,EAA4BA,SAA5B,OAClB8a,EAAoB9a,EAAWd,EAAM8D,IAAM9D,EAAMG,SAAYH,EAAM8D,OAC5D,gBAAG9D,EAAH,EAAGA,MAAO4b,EAAV,EAAUA,iBAAkB9a,EAA5B,EAA4BA,SAA5B,OACP8a,EAAoB9a,EAAWd,EAAMsB,MAAQ,QAAWtB,EAAMsB,SAKrD,qBAAGsa,iBAA2C,MAAQ,OAgCxDC,IA5Bcjc,kBAAO4b,GAAP5b,CAAH,+fACF,qBAAGI,MAAkBsE,YAChC,qBAAGtE,MAAkBuE,gBAIJ,gBAAGvE,EAAH,EAAGA,MAAH,SAAUc,UAA4BT,YAAO,IAAML,EAAMsE,aAC7D,gBAAGtE,EAAH,EAAGA,MAAH,SAAUc,UAA4BT,YAAO,IAAML,EAAMsE,aAGzD,gBAAGtE,EAAH,EAAGA,MAAH,SAAUc,UAA4BT,YAAO,IAAML,EAAMsE,aAGrD,gBAAGtE,EAAH,EAAGA,MAAH,SAAUc,UAA4BT,YAAO,IAAML,EAAMsE,aAC7D,gBAAGtE,EAAH,EAAGA,MAAH,SAAUc,UAA4BT,YAAO,IAAML,EAAMsE,aAMvD,qBAAGtE,MAAkBsE,YAQrB1E,kBAAO4b,GAAP5b,CAAH,yUACD,qBAAGI,MAAkB8D,OAChC,qBAAG9D,MAAkBe,SAKR,gBAAGf,EAAH,EAAGA,MAAH,SAAUc,UAA4BT,YAAO,IAAML,EAAM+D,QAIzD,gBAAG/D,EAAH,EAAGA,MAAH,SAAUc,UAA4BT,YAAO,IAAML,EAAM+D,QAIzD,gBAAG/D,EAAH,EAAGA,MAAH,SAAUc,UAA4BT,YAAO,GAAKL,EAAM+D,SAKnE+X,GAAkBlc,kBAAO4b,GAAP5b,CAAH,4dACN,qBAAGI,MAAkBqE,YAChC,qBAAGrE,MAAkBG,YAInB,gBAAG+H,EAAH,EAAGA,QAAH,OAAkBA,GAAoB,UAGvB,qBAAGlI,MAAkBqE,YACzB,qBAAGrE,MAAkBoE,YAGrB,qBAAGpE,MAAkBoE,YAGjB,qBAAGpE,MAAkBqE,YACzB,qBAAGrE,MAAkBoE,YAqDhC2X,IA1Canc,kBAAO4b,GAAP5b,CAAH,6WACD,qBAAGI,MAAkBG,YAIf,gBAAGH,EAAH,EAAGA,MAAH,OAAeK,YAAO,IAAML,EAAMG,aACtC,gBAAGH,EAAH,EAAGA,MAAH,OAAeK,YAAO,IAAML,EAAMG,aAGlC,gBAAGH,EAAH,EAAGA,MAAH,OAAeK,YAAO,IAAML,EAAMG,aAG9B,gBAAGH,EAAH,EAAGA,MAAH,OAAeK,YAAO,GAAKL,EAAMG,aACrC,gBAAGH,EAAH,EAAGA,MAAH,OAAeK,YAAO,GAAKL,EAAMG,aAGjC,qBAAGH,MAAkBG,YAMZP,kBAAO8b,GAAP9b,CAAH,yZAKR,qBAAGI,MAAkB8D,OAeblE,kBAAO4b,GAAP5b,CAAH,6TACL,qBAAGI,MAAkB6D,OAEhC,qBAAG7D,MAAkBwC,SAGJ,qBAAGxC,MAAkB+D,OAGrB,qBAAG/D,MAAkB+D,OAGrB,qBAAG/D,MAAkB+D,QAQtBnE,kBAAO4b,GAAP5b,CAAH,kWAEb,qBAAGI,MAAkBG,YAoBLP,kBAAO4b,GAAP5b,CAAH,8XAEF,qBAAGI,MAAkBM,MAKfD,YAAO,IAAM,WAGbA,YAAO,GAAK,WAGZA,YAAO,GAAK,YAQXT,kBAAO4b,GAAP5b,CAAH,8JACJ,gBAAGI,EAAH,EAAGA,MAAH,OAAegc,YAAQ,GAAKhc,EAAM8E,WAC7C,qBAAG9E,MAAkB8E,UACV,qBAAG9E,MAAkB8E,UAQlBlF,kBAAO4b,GAAP5b,CAAH,yaACA,qBAAGI,MAAkBE,QACrB,qBAAGF,MAAkBE,QAGf,gBAAGF,EAAH,EAAGA,MAAH,OAAeK,YAAO,IAAML,EAAME,SACtC,gBAAGF,EAAH,EAAGA,MAAH,OAAeK,YAAO,IAAML,EAAME,SAGlC,gBAAGF,EAAH,EAAGA,MAAH,OAAeK,YAAO,IAAML,EAAME,SAG9B,gBAAGF,EAAH,EAAGA,MAAH,OAAeK,YAAO,GAAKL,EAAME,SACrC,gBAAGF,EAAH,EAAGA,MAAH,OAAeK,YAAO,GAAKL,EAAME,SAMjC,qBAAGF,MAAkBE,QACrB,qBAAGF,MAAkBE,QAiEtBN,kBAAOmc,GAAPnc,CAAH,0EAEF,qBAAGI,MAAkBG,YAGxBP,UAAOa,IAAV,sLAIU,qBAAGT,MAAkBG,YAMnBP,UAAOa,IAAV,kEA8BrB,IAAMwb,GAAYrc,UAAOa,IAAV,gLAWFyb,GAAY,SAAC,GAIgD,IAAD,IAHvE/nB,YAGuE,aAFvEuM,YAEuE,MAFhE,OAEgE,EADpEkB,EACoE,gCACjE5B,EAAQqb,KACd,OACE,eAACY,GAAD,6BAAera,GAAf,aACE,eAAC,KAAD,CAAMtO,OAAQ0M,EAAMe,MAAO5M,KAAMA,EAAO6L,EAAMe,MAAQ,cAAeL,KAAMA,Q,IAKhDd,kBAAO4b,GAAP5b,CAAH,oNAMR,gBAAGlC,EAAH,EAAGA,OAAQsC,EAAX,EAAWA,MAAX,OAAwBtC,EAASsC,EAAM6D,IAAM7D,EAAMM,OAC9D,gBAAG5C,EAAH,EAAGA,OAAQsC,EAAX,EAAWA,MAAX,OAAwBtC,EAASsC,EAAMwC,MAAQxC,EAAMe,S,kCC7Z1Dob,GAAmBvc,UAAOa,IAAV,2QAGN,SAAC1M,GAAD,OAAYA,EAAMqoB,KAAO,UAAY,YACxC,SAACroB,GAAD,OAAYA,EAAMqoB,KAAO,EAAI,KAG1B,qBAAGpc,MAAkB6D,OACf,qBAAG7D,MAAkB8D,OACf,gBAAG9D,EAAH,EAAGA,MAAH,OAAeqc,YAAe,GAAKrc,EAAM+F,YAC1D,qBAAG/F,MAAkBe,SAI1Bub,GAAmB1c,UAAOa,IAAV,wDAIhB8b,GAAQ3c,UAAOa,IAAV,uvBAYa,qBAAGT,MAAkB8D,OAE3B,qBAAG9D,MAAkB6D,OA4CxB,SAAS2Y,GAAT,GAAiF,IAAD,IAA7DC,EAA6D,EAA7DA,QAASL,EAAoD,EAApDA,KAAMhX,EAA8C,EAA9CA,SAA8C,IAApCsX,iBAAoC,MAAxB,OAAwB,IAC7CjP,mBAAgC,MADa,mBACtFkP,EADsF,KACpEC,EADoE,OAEnDnP,mBAAgC,MAFmB,mBAEtFoP,EAFsF,KAEvEC,EAFuE,OAGrDrP,mBAAgC,MAHqB,mBAGtFsP,EAHsF,KAGxEC,EAHwE,OAItDC,aAAUN,EAAkBE,EAAe,CAChFH,YACAQ,SAAU,QACVC,UAAW,CACT,CAAEhO,KAAM,SAAUiO,QAAS,CAAEC,OAAQ,CAAC,EAAG,KACzC,CAAElO,KAAM,QAASiO,QAAS,CAAEE,QAASP,OALjCQ,EAJqF,EAIrFA,OAAQC,EAJ6E,EAI7EA,OAAQC,EAJqE,EAIrEA,WAaxB,OCnGa,SAAqBnkB,EAAsBokB,GAAuC,IAAjBC,IAAgB,yDACxFC,EAAgB1W,mBAGtBvV,qBAAU,WACRisB,EAAc1kB,QAAUI,IACvB,CAACA,IAGJ3H,qBAAU,WACR,SAASksB,IACP,IAAM3kB,EAAU0kB,EAAc1kB,QAC9BA,GAAWA,IAGb,GAAc,OAAVwkB,EAAgB,CACdC,GAASE,IACb,IAAMvpB,EAAK8B,YAAYynB,EAAMH,GAC7B,OAAO,kBAAMpnB,cAAchC,OAG5B,CAACopB,EAAOC,ID4EXG,CAHuBzf,uBAAY,WACjCmf,GAAUA,MACT,CAACA,IACwBpB,EAAO,IAAM,MAGvC,uCACE,eAACE,GAAD,CAAkBjoB,IAAKuoB,EAAvB,SAAoDxX,IACpD,eAAC,KAAD,UACE,gBAAC+W,GAAD,2BAAkBC,KAAMA,EAAM/nB,IAAKyoB,EAAyBtD,MAAO+D,EAAOQ,QAAYN,EAAWM,QAAjG,cACGtB,EACD,eAACF,GAAD,cACEyB,UAAS,oCAAWP,EAAWM,cAAtB,aAAW,EAAoB,gCAA/B,QAA2D,IACpE1pB,IAAK2oB,EACLxD,MAAO+D,EAAOU,OACVR,EAAWQ,iBE3G3B,I,GAAMC,GAAmBte,UAAOa,IAAV,mHAWP,SAAS0d,GAAT,GAAmD,IAAhCC,EAA+B,EAA/BA,KAASxc,EAAsB,yBAC/D,OAAO,eAAC4a,GAAD,cAASC,QAAS,eAACyB,GAAD,UAAmBE,KAA8Bxc,ICZ5E,I,oFAAMsE,GAActG,UAAOa,IAAV,2NAQA,qBAAGga,QAAuB,SAChC,gBAAGza,EAAH,EAAGA,MAAOqe,EAAV,EAAUA,KAAMjY,EAAhB,EAAgBA,MAAhB,OAA6BiY,EAAOre,EAAMa,MAAT,OAAiBuF,QAAjB,IAAiBA,IAASpG,EAAMwC,SAC7D,gBAAGvB,EAAH,EAAGA,SAAH,cAAkBA,QAAlB,IAAkBA,IAAY,aAO5B,qBAAGqd,YAA+B,UAsDpCC,GAlDS,SAAC,GAiBlB,IAhBLH,EAgBI,EAhBJA,KAgBI,IAfJI,qBAeI,MAfY,GAeZ,MAdJ/D,cAcI,aAbJ6D,kBAaI,SAZJrd,EAYI,EAZJA,SACAmF,EAWI,EAXJA,MACAiY,EAUI,EAVJA,KACGzc,EASC,2FAC8B6L,oBAAS,GADvC,mBACGgR,EADH,KACcC,EADd,KAGJ,OAAKN,EAIDA,EAAKhsB,OAASosB,EAEd,eAACL,GAAD,CAASC,KAAMA,EAAMhC,KAAMqC,EAA3B,SACE,eAAC,GAAD,2BACEE,aAAc,kBAAMD,GAAa,IACjCE,aAAc,kBAAMF,GAAa,IACjCjE,OAAQA,EACR6D,WAAYA,EACZD,OAAQA,EACRjY,MAAOA,EACPnF,SAAUA,GACNW,GARN,aAUG,IAAMwc,EAAKrR,MAAM,EAAGyR,EAAgB,GAAK,WAOhD,eAAC,GAAD,2BAAapY,MAAOA,EAAOqU,OAAQA,EAAQ6D,WAAYA,EAAYD,OAAQA,EAAMpd,SAAUA,GAAcW,GAAzG,aACGwc,KAxBI,2BC1BLS,GAAYjf,UAAOa,IAAV,qFAMT8Z,GAAU3a,kBAAOkI,GAAPlI,CAAH,2LACS,qBAAGI,MAAkB0D,SAQvC,qBAAG1D,MAAkB0C,WAAWC,WAA/B,QAAD,6CAKEmc,GAAclf,UAAOmf,MAAV,wYAUN,qBAAG/e,MAAkBwC,SAGnB,qBAAGxC,MAAkBsB,SAW5B0F,GAAOpH,UAAOa,IAAV,ofAYM,qBAAGT,MAAkB4D,OAIxB,qBAAGob,MAAmB,UACb,qBAAGhf,MAAkB2E,SAEvC,qBAAG3E,MAAkB0C,WAAWC,WAA/B,QAAD,wIASEsc,GAAWrf,UAAOa,IAAV,iLAWRye,GAAiBtf,UAAOa,IAAV,kJAKhB,qBAAGT,MAAkB0C,WAAWI,UAA/B,QAAD,4DAKEqc,GAAQvf,UAAOa,IAAV,wFAEW,qBAAGT,MAAkBM,OAIrC8e,GAAYxf,UAAOa,IAAV,uHACJ,qBAAGT,MAAkBa,SACnB,oBAAGme,KAAH,sBAA8B,UAOrCK,GAAezf,UAAOa,IAAV,wFAOZ6e,GAAe1f,UAAOa,IAAV,0UAUI,gBAAGT,EAAH,EAAGA,MAAH,SAAUuf,QAAyBvf,EAAM2E,MAAQ,iBAC5D,gBAAG3E,EAAH,EAAGA,MAAH,SAAUuf,QAAyBvf,EAAMI,MAAQJ,EAAM2E,SA4PnD6a,GArPA,SAAC,GAAuD,IAAlD5d,EAAiD,oBAC9D6d,EAAUC,cAEVrrB,EAAM6S,iBAAyB,MAC/ByY,EAAUzY,iBAAuB,MACjC0Y,EAAU1Y,iBAAuB,MAEjC2Y,EAAaxhB,uBAAY,WAClB,MAAPhK,GAA+B,OAAhBA,EAAI6E,SACrB7E,EAAI6E,QAAQ4mB,UAEb,IAXiE,EAatCrS,oBAAkB,GAboB,mBAa7DsS,EAb6D,KAapDC,EAboD,OAcpCvS,oBAAS,GAd2B,mBAc7DwS,EAd6D,KAcnDC,EAdmD,OAe1CzS,mBAAS,IAfiC,mBAe7DgE,EAf6D,KAetD0O,EAfsD,Ob/B/D,SACL1O,GAMA,IAAM2O,EAAYpN,KACZqN,EAAWlI,KAFjB,EAIkC1K,qBAJlC,mBAIO6S,EAJP,KAIkBC,EAJlB,OAKgC9S,qBALhC,mBAKO0I,EALP,KAKiBqK,EALjB,KAQA7uB,qBAAU,WAAM,4CACd,gCAAA4D,EAAA,+EAEyB0T,GAAOS,MAAgB,CAC1CA,MAAOgP,GACPzO,UAAW,CACTwH,MAAOA,EAAQA,EAAMgP,cAAgB,GACrCnsB,GAAImd,KANZ,cAEUwB,EAFV,gBASwBhK,GAAOS,MAAe,CACxCA,MAAOiP,GACP1O,UAAW,CACTgJ,OAAM,UAAEA,EAAOhc,KAAKypB,gBAAd,aAAE,EAAsBroB,KAAI,SAAC2V,GAAD,OAAOA,EAAE1Z,MAC3CA,GAAImd,KAbZ,OASU2G,EATV,OAiBQnF,EAAOhc,MACTspB,EAAatN,EAAOhc,MAElBmhB,EAAMnhB,MACRupB,EAAYpI,EAAMnhB,MArBxB,kDAwBIW,QAAQoV,IAAR,MAxBJ,2DADc,sBA4BVyE,GAASA,EAAMrf,OAAS,GA5Bb,WAAD,wBA6BZ0F,KAED,CAAC2Z,IAEJ,IAAMkP,EAAmBjb,mBAAQ,WAC/B,OAAI4a,EACI,GAAN,oBAAWA,EAAUM,WAArB,aAAmCN,EAAUO,QAA7C,aAAwDP,EAAUI,WAE7D,KACN,CAACJ,IAEEQ,EAAkBpb,mBAAQ,WAC9B,OAAIyQ,EACI,GAAN,oBAAWA,EAASyK,WAApB,aAAkCzK,EAAS4K,KAA3C,aAAmD5K,EAAS6K,MAEvD,KACN,CAAC7K,IArDJ,EAwD4Dd,GAAqBsL,EAAiBtoB,KAAI,SAAC2V,GAAD,OAAOA,EAAE1Z,OAAjG2sB,EAxDd,EAwDQhqB,KAA+BiqB,EAxDvC,EAwD8BhX,QACxBiX,EAAgB5I,GAAauI,EAAgBzoB,KAAI,SAACoS,GAAD,OAAOA,EAAEnW,OAC1D8sB,EAAkB1b,mBAAQ,kBAAOub,EAAiBlvB,OAAO2a,OAAOuU,GAAkB,KAAK,CAACA,IAExFI,EAAY3b,mBAAQ,WACxB,OAAO0b,EAAgB7N,QAAO,SAACvF,GAAD,OAAQjc,OAAOgB,KAAKqtB,GAAW9T,SAAS0B,EAAEjR,cACvE,CAACqjB,EAAWgB,IAETE,EAAiB5b,mBAAQ,WAC7B,MAAM,GAAN,oBACK2b,GADL,aAEKtvB,OAAO2a,OAAO0T,GACd/nB,KAAI,SAAC2V,GAAD,OAAOA,EAAE/W,QACbsc,OAAOR,QAEX,CAACqN,EAAWiB,IAETE,EAAuB7b,mBAAQ,WACnC,OAAO4b,EAAe/N,QAAO,SAACvF,GAc5B,OAbqBjc,OAAOgB,KAAKib,GAAG3V,KAAI,SAACmpB,GACvC,IAAMhQ,EAAkC,OAAtBC,EAAM1E,MAAM,EAAG,GACjC,MAAsB,YAAlByU,GAA+BhQ,EAC1BxD,EAAEwT,GAAeC,MAAM,IAAIC,OAAOjP,GAAahB,GAAQ,MAE1C,WAAlB+P,GAA+BhQ,EAGb,SAAlBgQ,IAA6BhQ,GACxBxD,EAAEwT,GAAeC,MAAM,IAAIC,OAAOjP,GAAahB,GAAQ,MAHvDzD,EAAEwT,GAAeC,MAAM,IAAIC,OAAOjP,GAAahB,GAAQ,SAO9CkQ,MAAK,SAACnS,GAAD,OAAOA,UAEjC,CAAC8R,EAAgB7P,IAEdmQ,EAAWlc,mBAAQ,WACvB,OAAOyb,EAAc5N,QAAO,SAAC9I,GAAD,OAAQ1Y,OAAOgB,KAAKstB,GAAU/T,SAAS7B,EAAE1N,cACpE,CAACsjB,EAAUc,IAERU,EAAgBnc,mBAAQ,WAC5B,MAAM,GAAN,oBACKkc,GADL,aAEK7vB,OAAO2a,OAAO2T,GACdhoB,KAAI,SAACoS,GAAD,OAAOA,EAAExT,QACbsc,OAAOR,QAEX,CAACsN,EAAUuB,IAqBd,MAAO,CACL3O,OAAQsO,EACRnJ,MArB0B1S,mBAAQ,WAClC,OAAOmc,EAActO,QAAO,SAACvF,GAc3B,OAbqBjc,OAAOgB,KAAKib,GAAG3V,KAAI,SAAC/F,GACvC,IAAMkf,EAAkC,OAAtBC,EAAM1E,MAAM,EAAG,GACjC,MAAY,YAARza,GAAqBkf,EAChBxD,EAAE1b,GAAKmvB,MAAM,IAAIC,OAAOjP,GAAahB,GAAQ,QAEzC,WAARnf,GAA4B,WAARA,GAAsBkf,KAE3CxD,EAAE1b,GAAK6c,KAAKsS,MAAM,IAAIC,OAAOjP,GAAahB,GAAQ,OAClDzD,EAAE1b,GAAK2c,OAAO6S,oBAAoBL,MAAM,IAAIC,OAAOjP,GAAahB,EAAMqQ,qBAAsB,UAK9EH,MAAK,SAACnS,GAAD,OAAOA,UAEjC,CAACqS,EAAepQ,IAKjBvH,QAASgX,GarFea,CAAsBtQ,GAAxCwB,EAjB4D,EAiB5DA,OAAQmF,EAjBoD,EAiBpDA,MAEhBzmB,qBAAU,WAENquB,EADY,KAAVvO,KAKH,CAACA,IAzBgE,MA2B9BhE,mBAAS,GA3BqB,mBA2B7DuU,EA3B6D,KA2BhDC,EA3BgD,OA4BhCxU,mBAAS,GA5BuB,mBA4B7DyU,EA5B6D,KA4BjDC,EA5BiD,KA8B9DtgB,EAAc,SAAC2F,GACbmY,EAAQzmB,SAAWymB,EAAQzmB,QAAQuO,SAASD,EAAEvV,SAAcoC,EAAI6E,SAAW7E,EAAI6E,QAAQuO,SAASD,EAAEvV,UACtGkwB,EAAc,GACdF,EAAe,GACf/B,GAAY,KAIhBvuB,qBAAU,WAER,OADA+V,SAASC,iBAAiB,QAAS9F,GAC5B,WACL6F,SAASE,oBAAoB,QAAS/F,OAzC0B,MA8C/BzC,KA9C+B,mBA8C7DC,EA9C6D,KA8ChDN,EA9CgD,OA+CjCQ,KA/CiC,mBA+C7DC,EA/C6D,KA+CjDR,EA/CiD,KAiD9DojB,EAAY,SAACC,GACjBnC,GAAY,GACZiC,EAAc,GACdF,EAAe,GACfxC,EAAQ7lB,KAAKyoB,IAITC,EAAqBjP,GAAchU,GACnCkjB,EAAoBhK,GAAa/Y,GA1D6B,EA6D1BiO,oBAAS,GA7DiB,mBA6D7D+U,EA7D6D,KA6D9CC,EA7D8C,KA8D9DC,EAAgBhd,mBACpB,kBAAO8c,EAAa,OAAGF,QAAH,IAAGA,IAAsB,GAAKrP,EAAO0P,MAAK,SAACC,EAAIC,GAAL,OAAaD,EAAG9W,UAAY+W,EAAG/W,WAAa,EAAI,OAC9G,CAAC0W,EAAevP,EAAQqP,IAEpBQ,EAAcpd,mBAClB,kBAAO8c,EAAa,OAAGD,QAAH,IAAGA,IAAqB,GAAKnK,EAAMuK,MAAK,SAACI,EAAIC,GAAL,OAAaD,EAAGjX,UAAYkX,EAAGlX,WAAa,EAAI,OAC5G,CAACsM,EAAOoK,EAAeD,IAGzB,OACE,gBAAC,KAAD,CAASU,QAAQ,YAAYC,UAAWrD,EAAxC,UACGI,EAAW,eAAChB,GAAD,IAAe,KAC3B,gBAACJ,GAAD,WACE,gBAAC,GAAD,6BAAajd,GAAb,cACE,eAACkd,GAAD,CACErP,KAAK,OACLgC,MAAOA,EACP0R,SAAU,SAAC3b,GACT2Y,EAAS3Y,EAAEvV,OAAOwf,QAEpB2R,YAAY,yBACZ/uB,IAAKA,EACLgvB,QAAS,WACPrD,GAAW,GACXE,GAAY,IAEdoD,OAAQ,kBAAMtD,GAAW,OAEzBD,GAAW,eAAC1Z,GAAD,CAAWkd,GAAG,MAAd,yBAEf,eAAC,GAAD,CAAMvE,MAAOiB,EAAU5rB,IAAKsrB,EAA5B,SACE,gBAAC9G,GAAD,CAAYrQ,IAAI,KAAhB,UACE,eAACqQ,GAAD,CAAYrQ,IAAI,KAAhB,SACE,gBAACC,GAAD,WACE,eAAC6W,GAAD,CAAcC,SAAUiD,EAAengB,QAAS,kBAAMogB,GAAiB,IAAvE,oBAGA,eAACnD,GAAD,CAAcC,QAASiD,EAAengB,QAAS,kBAAMogB,GAAiB,IAAtE,4BAKJ,gBAACvD,GAAD,WACE,eAAC7Y,GAAD,qBACA,eAACxD,GAAD,UACE,eAACwD,GAAD,CAAWmd,UAAU,MAAMviB,SAAS,OAApC,0BAIF,eAAC4B,GAAD,UACE,eAACwD,GAAD,CAAWmd,UAAU,MAAMviB,SAAS,OAApC,mBAIF,eAAC4B,GAAD,UACE,eAACwD,GAAD,CAAWmd,UAAU,MAAMviB,SAAS,OAApC,wBAKHyhB,EACEnP,QAAO,SAACvF,GAAD,OAAQlR,GAAWwP,SAAS0B,EAAEjR,YACrCgQ,MAAM,EAAGiV,GACT3pB,KAAI,SAAC2V,EAAG9b,GACP,OACE,eAACmtB,GAAD,CAAchd,QAAS,kBAAM+f,EAAU,WAAapU,EAAEjR,UAAtD,SACE,gBAACmiB,GAAD,WACE,gBAACzW,GAAD,WACE,eAAC8Q,GAAD,CAAcxc,QAASiR,EAAEjR,UACzB,gBAACsJ,GAAD,CAAYod,GAAG,OAAf,UACE,eAAC,GAAD,CAAiBrF,KAAI,UAAKpQ,EAAEmB,KAAP,aAAgBnB,EAAEiB,OAAlB,OAAgC,OAEvD,eAAC,GAAD,CACE3a,GAAG,iBACHoM,KAAM,OACN8Y,MAAO,CAAE5Y,WAAY,OACrBzM,KAAMkL,EAAYiN,SAAS0B,EAAEjR,SAC7BsF,QAAS,SAACmF,GACRA,EAAEkc,kBACF3kB,EAAciP,EAAEjR,eAItB,eAAC8F,GAAD,UACE,eAACwD,GAAD,CAAYmd,UAAU,MAAtB,SAA6B9J,GAAmB1L,EAAElC,eAEpD,eAACjJ,GAAD,UACE,eAACwD,GAAD,CAAYmd,UAAU,MAAtB,SAA6B9J,GAAmB1L,EAAEyI,YAEpD,eAAC5T,GAAD,UACE,eAACwD,GAAD,CAAYmd,UAAU,MAAtB,SAA6B9J,GAAmB1L,EAAE6I,kBAzBa3kB,MA+BjD,IAAzBwwB,EAActwB,OACb,eAACiU,GAAD,UAAYmc,EAAgB,gCAAkC,eAC5D,KACJ,eAACpD,GAAD,CACE/c,QAAS,WACP4f,EAAeD,EAAc,IAE/BhD,OAAQ0D,EAActwB,OAAS,GAAKswB,EAActwB,QAAU4vB,GAC5D3tB,IAAKurB,EALP,yBASA,eAACT,GAAD,IACA,gBAACD,GAAD,WACE,eAAC7Y,GAAD,oBACA,eAACxD,GAAD,UACE,eAACwD,GAAD,CAAWmd,UAAU,MAAMviB,SAAS,OAApC,0BAIF,eAAC4B,GAAD,UACE,eAACwD,GAAD,CAAWmd,UAAU,MAAMviB,SAAS,OAApC,mBAIF,eAAC4B,GAAD,UACE,eAACwD,GAAD,CAAWmd,UAAU,MAAMviB,SAAS,OAApC,wBAKH6hB,EACEvP,QAAO,SAAC9I,GAAD,OAAQzN,GAAUsP,SAAS7B,EAAE1N,YACpCgQ,MAAM,EAAGmV,GACT7pB,KAAI,SAACoS,EAAGvY,GACP,OACE,eAACmtB,GAAD,CAAchd,QAAS,kBAAM+f,EAAU,UAAY3X,EAAE1N,UAArD,SACE,gBAACmiB,GAAD,WACE,gBAACzW,GAAD,WACE,eAACmS,GAAD,CAAoBC,SAAUpQ,EAAEwF,OAAOlT,QAAS+d,SAAUrQ,EAAE0F,OAAOpT,UACnE,eAACsJ,GAAD,CAAYod,GAAG,OAAOjK,MAAO,CAAEmK,WAAY,UAA3C,SACE,eAAC,GAAD,CAAiBnF,cAAe,GAAIJ,KAAI,UAAK3T,EAAEwF,OAAOhB,OAAd,cAA0BxE,EAAE0F,OAAOlB,YAE7E,eAACmM,GAAD,CAAWqI,GAAG,OAAd,SAAsB7Q,GAAenI,EAAEmZ,WACvC,eAAC,GAAD,CACEtvB,GAAG,iBACHoM,KAAM,OACN8Y,MAAO,CAAE5Y,WAAY,QACrBzM,KAAMqL,EAAW8M,SAAS7B,EAAE1N,SAC5BsF,QAAS,SAACmF,GACRA,EAAEkc,kBACF1kB,EAAayL,EAAE1N,eAIrB,eAAC8F,GAAD,UACE,eAACwD,GAAD,CAAYmd,UAAU,MAAtB,SAA6B9J,GAAmBjP,EAAEqB,eAEpD,eAACjJ,GAAD,UACE,eAACwD,GAAD,CAAYmd,UAAU,MAAtB,SAA6B9J,GAAmBjP,EAAEgM,YAEpD,eAAC5T,GAAD,UACE,eAACwD,GAAD,CAAYmd,UAAU,MAAtB,SAA6B9J,GAAmBjP,EAAEoZ,mBAzBjC3xB,IAD6CA,MAgClD,IAAvB4wB,EAAY1wB,OACX,eAACiU,GAAD,UAAYmc,EAAgB,+BAAiC,eAC3D,KACJ,eAACpD,GAAD,CACE/c,QAAS,WACP8f,EAAcD,EAAa,IAE7BlD,OAAQ8D,EAAY1wB,OAAS,GAAK0wB,EAAY1wB,QAAU8vB,GACxD7tB,IAAKurB,EALP,qCCtWNkE,GAAclkB,UAAOa,IAAV,+bAeK,qBAAGT,MAAkB4D,OAEvC,qBAAG5D,MAAkB0C,WAAWC,WAA/B,QAAD,mIAOA,qBAAG3C,MAAkB0C,WAAWM,eAA/B,QAAD,0DAKE+gB,GAAiBnkB,UAAOa,IAAV,qIAMhB,qBAAGT,MAAkB0C,WAAWC,WAA/B,QAAD,4EAqBEqhB,GAAoBpkB,UAAOa,IAAV,wEAKjBwjB,GAAYrkB,kBAAO6I,GAAP7I,CAAH,sCACX,qBAAGI,MAAkB0C,WAAWC,WAA/B,QAAD,4CAKEuhB,GAActkB,kBAAOkI,GAAPlI,CAAH,kEAEb,qBAAGI,MAAkB0C,WAAWC,WAA/B,QAAD,yFA8CEwhB,GAAQvkB,kBAAOwkB,IAAPxkB,CAAH,oMASP,qBAAGI,MAAkB0C,WAAWI,UAA/B,QAAD,sDAKEuhB,GAAUzkB,UAAOa,IAAV,kHAOP6jB,GAAkB,SAElBC,GAAgB3kB,kBAAOwkB,KAAStkB,MAAM,CAC1CwkB,oBADoB1kB,CAAH,kZAGf,qBAAGI,MAAkBiG,iBAMd,qBAAGjG,MAAkBsB,QAO1BgjB,IAEkB,qBAAGtkB,MAAkB6D,OAChC,qBAAG7D,MAAkBwC,SAKrB,gBAAGxC,EAAH,EAAGA,MAAH,OAAeK,YAAO,GAAKL,EAAMwC,UAId5C,UAAOC,OAAV,scASP,qBAAGG,MAAkB8D,OASnB,qBAAG9D,MAAkB+D,OAO/B,qBAAG/D,MAAkBwC,SAWpB,SAASgiB,KAOtB,OACE,gBAACV,GAAD,WACE,gBAACG,GAAD,WACE,eAACE,GAAD,CAAO9B,GAAG,IAAV,SACE,eAACgC,GAAD,UACE,sBAAKrwB,MAAO,OAAQolB,IAAKqL,EAAUvL,IAAI,aAG3C,gBAACgL,GAAD,WACE,eAACK,GAAD,CAAejwB,GAAE,gBAAmB+tB,GAAI,IAAKqC,SAAU,SAACjD,EAAD,SAAsC,MAAtC,EAAUhwB,UAAjE,sBAMA,eAAC8yB,GAAD,CAAejwB,GAAE,iBAAoB+tB,GAAI,SAAzC,mBAGA,eAACkC,GAAD,CAAejwB,GAAE,iBAAoB+tB,GAAI,UAAzC,0BAQJ,gBAAC0B,GAAD,WACE,eAAC,GAAD,IAgBA,eAACnhB,GAAD,UACE,eAACohB,GAAD,UAIE,eAAChd,GAAD,c,oBClRN2d,GAAa/kB,UAAOa,IAAV,8MAGM,qBAAGT,MAAkBa,SAK9B,qBAAG6jB,SAA2B,OAAS,UAGvCE,GAAchlB,kBAAOY,KAAPZ,CAAH,qEAMT,SAASilB,KACtB,IAAM1lB,ExCoHD,WACL,IAAMhB,EAAWC,cACjB,OAAOC,uBAAY,kBAAMF,EAASgB,QAAqB,CAAChB,IwCtH/B2mB,GACnBC,EAAiBtlB,KAEvB,OAAOulB,WACL,gBAACL,GAAD,CAAYD,SAAUK,EAAtB,UACE,uBAAKvL,MAAO,CAAEyL,QAAS,QAAvB,UACE,eAAC,KAAD,CAAezL,MAAO,CAAE7Y,YAAa,GAAKD,KAAM,KADlD,wBAEE,uBAAM8Y,MAAO,CAAEtR,QAAS,QAAS+c,QAAS,SAAU3e,WAAY,QAAhE,gCAEF,eAACse,GAAD,CAAalkB,KAAM,GAAI2B,QAASlD,OAEH,oBAA7BiD,OAAO5Q,SAAS0zB,SAClB,gBAACP,GAAD,CAAYD,SAAUK,EAAtB,UACE,uBAAKvL,MAAO,CAAEyL,QAAS,QAAvB,UACE,eAAC,KAAD,CAAezL,MAAO,CAAE7Y,YAAa,GAAKD,KAAM,KADlD,+BAEE,uBAAM8Y,MAAO,CAAEtR,QAAS,QAAS+c,QAAS,SAAU3e,WAAY,QAAhE,6BAFF,gCAKA,eAACse,GAAD,CAAalkB,KAAM,GAAI2B,QAASlD,OAEhC,K,2BC1COgmB,GAIR,CACHC,QAAS1wB,YAAa,gCACtB2wB,UAAW3wB,YAAa,kCACxB4wB,SAAU5wB,YAAa,kCAGZ6wB,GAAU7wB,YAAqB,iBAC/B8wB,GAAa9wB,YAAqB,oBAGlC+wB,GAAa/wB,YAAqB,oBAClCgxB,GAAchxB,YAAqB,qBAGnCixB,GAAmBjxB,YAAqB,0BAClBA,YAAsB,6BCpB1C,SAASkxB,GAAiBC,GACvC,MAAM,IAAN,OAAWA,EAAQC,MAAnB,YAA4BD,EAAQE,MAApC,YAA6CF,EAAQG,OCYhD,IAAMC,GAAcrmB,UAAOsmB,GAAV,uEAKT,SAASC,GAAT,GAYX,IAXFC,EAWC,EAXDA,OACAC,EAUC,EAVDA,QACAC,EASC,EATDA,QACAC,EAQC,EARDA,QACAC,EAOC,EAPDA,KAQM3xB,EAAcyJ,KACdmoB,EAAkBpoB,uBAAY,kBAAMxJ,EAAYuxB,KAAS,CAACA,EAAQvxB,IAClEsJ,EAAWC,cAEXsoB,EAAqBroB,uBAAY,WACjCmoB,IACJ50B,IAAQkQ,MAAM,CACZ6kB,SAAU,QACVC,OAAQ,yBACR1kB,MAAOmkB,IAETloB,EAASwnB,GAAiBU,IAC1BI,OACC,CAACD,EAAMroB,EAAUkoB,EAASI,IAd5B,EAgB8E/gB,mBAAQ,WACrF,OAAOmhB,aAAeP,EAAQrT,OAAQsT,EAAQtT,UAC7C,CAACsT,EAAQtT,OAAQqT,EAAQrT,SAFb6T,EAhBd,EAgBOC,MAA6BC,EAhBpC,EAgB2BC,QAAiCC,EAhB5D,EAgBmDC,QAG9CC,EAAmB1hB,mBACvB,kBACE3T,OAAOgB,KAAKi0B,GAAehuB,QAAO,SAACC,EAAMrD,GAAP,OAAwBqD,EAAOlH,OAAOgB,KAAKi0B,EAAcpxB,IAAUxD,SAAQ,KAC/G,CAAC40B,IAGH,OACE,eAACze,GAAD,UACE,eAACsQ,GAAD,CAAYW,MAAO,CAAE6N,KAAM,KAAO7e,IAAI,MAAtC,SACGge,EACC,gBAACngB,GAAD,CAAWC,WAAY,IAAvB,6BACwBggB,EAAQnX,KADhC,wBACgE,IAC9D,kCAASyW,GAAiBW,EAAQV,WAFpC,OAKA,uCACE,iCACE,gBAAC,KAAD,yDACmDS,EAAQnX,KAD3D,MAEGyW,GAAiBU,EAAQT,SAF5B,OAE0CD,GAAiBW,EAAQV,SAFnE,QAIA,gBAACI,GAAD,WACGa,EAAY10B,OAAS,EACpB,gCACG00B,EAAYzuB,KAAI,SAACivB,EAAOp1B,GAAR,OACf,gBAAC,IAAMq1B,SAAP,WACE,yBAAQ1zB,MAAOyzB,EAAMvqB,QAArB,SAA+BuqB,EAAMrY,SACpC/c,IAAM40B,EAAY10B,OAAS,EAAI,KAAO,OAFzC,UAAwBk1B,EAAM1xB,QAA9B,YAAyC0xB,EAAMvqB,aAI7C,IANN,WASE,KACHmqB,EAAc90B,OAAS,EACtB,gCACG80B,EAAc7uB,KAAI,SAACivB,EAAOp1B,GAAR,OACjB,gBAAC,IAAMq1B,SAAP,WACE,yBAAQ1zB,MAAOyzB,EAAMvqB,QAArB,SAA+BuqB,EAAMrY,SACpC/c,IAAMg1B,EAAc90B,OAAS,EAAI,KAAO,OAF3C,UAAwBk1B,EAAM1xB,QAA9B,YAAyC0xB,EAAMvqB,aAI7C,IANN,aASE,KACHqqB,EAAmB,EAAI,gCAAKA,EAAL,qBAA6C,WAGzE,gBAAC7e,GAAD,WACE,sBAAKiR,MAAO,CAAEgO,SAAU,EAAG7mB,YAAa,IAAxC,SACE,eAACmb,GAAD,CAAiBzZ,QAASqkB,EAA1B,6BAEF,sBAAKlN,MAAO,CAAEgO,SAAU,GAAxB,SACE,eAAC1L,GAAD,CAAiBzZ,QAASokB,EAA1B,iC,uCC7FVgB,GAAY7nB,kBAAO2I,GAAP3I,CAAH,oDAIA,SAAS8nB,GAAT,GAQX,IAPF/X,EAOC,EAPDA,KACAgY,EAMC,EANDA,QACAC,EAKC,EALDA,QAMQhyB,EAAY0H,KAAZ1H,QAEFoK,EAAQsb,qBAAWC,gBAEzB,OACE,gBAACkM,GAAD,WACE,sBAAKjO,MAAO,CAAEqO,aAAc,IAA5B,SACGF,EAAU,eAAC,KAAD,CAAavhB,MAAOpG,EAAM8E,OAAQpE,KAAM,KAAS,eAAC,KAAD,CAAa0F,MAAOpG,EAAME,KAAMQ,KAAM,OAEpG,gBAACmY,GAAD,CAAYrQ,IAAI,MAAhB,UACE,eAACnC,GAAD,CAAWC,WAAY,IAAvB,gBAA6BshB,QAA7B,IAA6BA,IAAW,SAAWjY,EAAK5C,MAAM,EAAG,GAAK,MAAQ4C,EAAK5C,MAAM,GAAI,MAC5FnX,GACC,eAAC6L,GAAD,CAAcC,KAAMsQ,GAAiBpc,EAAS+Z,EAAM,eAApD,qCCzBH,I,eAAMiV,GAAchlB,kBAAOY,KAAPZ,CAAH,4HASXkoB,GAAQloB,UAAOa,IAAV,0OAII,qBAAGT,MAAkBM,OAOvC,qBAAGN,MAAkB0C,WAAWI,UAA/B,QAAD,gHAOEilB,GAAQnoB,UAAOa,IAAV,6IAMW,qBAAGT,MAAkB8D,OAGrCkkB,GAAgBC,aAASF,IAEhB,SAASG,GAAT,GAQX,IAPFC,EAOC,EAPDA,cACA1L,EAMC,EANDA,QACA2J,EAKC,EALDA,OAMMvxB,EAAcyJ,KACdmoB,EAAkBpoB,uBAAY,kBAAMxJ,EAAYuxB,KAAS,CAACA,EAAQvxB,IACxElD,qBAAU,WACR,GAAsB,OAAlBw2B,EAAJ,CAEA,IAAMC,EAAUvuB,YAAW,WACzB4sB,MACC0B,GAEH,OAAO,WACLE,aAAaD,OAEd,CAACD,EAAe1B,IAEnB,IAEI6B,EAFEtoB,EAAQsb,qBAAWC,gBAGzB,GAAI,QAASkB,EAAS,CAAC,IAAD,EAGhBA,EADF8L,IAAO5Y,EAFW,EAEXA,KAAMgY,EAFK,EAELA,QAASC,EAFJ,EAEIA,QAExBU,EAAe,eAACZ,GAAD,CAAkB/X,KAAMA,EAAMgY,QAASA,EAASC,QAASA,SACnE,GAAI,eAAgBnL,EAAS,CAAC,IAAD,EAG9BA,EADF+L,WAAcnC,EAFkB,EAElBA,QAASC,EAFS,EAETA,QAASC,EAFA,EAEAA,QAASC,EAFT,EAESA,KAE3C8B,EAAe,eAACnC,GAAD,CAAiBC,OAAQA,EAAQC,QAASA,EAASC,QAASA,EAASC,QAASA,EAASC,KAAMA,IAG9G,IAAMiC,EAAaC,aAAU,CAC3BxsB,KAAM,CAAElI,MAAO,QACfquB,GAAI,CAAEruB,MAAO,MACb20B,OAAQ,CAAEC,SAAQ,OAAET,QAAF,IAAEA,SAAiBjzB,KAGvC,OACE,gBAAC4yB,GAAD,WACE,eAAC,GAAD,CAAa1hB,MAAOpG,EAAMe,MAAOsB,QAASokB,IACzC6B,EACkB,OAAlBH,EAAyB,eAACH,GAAD,CAAexO,MAAOiP,IAAiB,QCzFvE,IAAMI,GAAqBjpB,UAAOa,IAAV,6JAGZ,qBAAGxM,UACH,qBAAGA,OAAuB,UAAY,KAC/B,qBAAGA,OAAuB,OAAS,KAGlD,qBAAG+L,MAAkB0C,WAAWI,UAA/B,QAAD,gDAKEgmB,GAAmBlpB,UAAOa,IAAV,4NAYhBsoB,GAAmBnpB,kBAAOiZ,GAAPjZ,CAAH,wJAEb,qBAAGopB,aAAmC,QAAU,UAMrD,qBAAGhpB,MAAkB0C,WAAWI,UAA/B,QAAD,+CAKW,SAASmmB,KAEtB,IAAMC,EhDkBD,WACL,IAAMC,EAAOtrB,aAAY,SAACC,GAAD,OAAqBA,EAAMC,YAAYqrB,aAChE,OAAO1jB,mBAAQ,kBAAMyjB,EAAK5V,QAAO,SAACjb,GAAD,OAAUA,EAAK8jB,UAAO,CAAC+M,IgDpBnCE,GAEfC,EAAmB7pB,KAEzB,OACE,uCACE,eAACspB,GAAD,CAAkBvgB,IAAI,OAAOwgB,aAAcM,EAA3C,SACGJ,EAAa7wB,KAAI,SAACC,GAAD,OAChB,eAAC4vB,GAAD,CAA0BzL,QAASnkB,EAAKmkB,QAAS2J,OAAQ9tB,EAAKhG,IAAK61B,cAAe7vB,EAAK6vB,eAAvE7vB,EAAKhG,UAGzB,eAACu2B,GAAD,CAAoB50B,QAAoB,OAAZi1B,QAAY,IAAZA,OAAA,EAAAA,EAAc92B,QAAS,EAAI,cAAgB,EAAvE,SACE,eAAC02B,GAAD,UACGI,EACEnc,MAAM,GACNwc,UACAlxB,KAAI,SAACC,GAAD,OACH,eAAC4vB,GAAD,CAA0BzL,QAASnkB,EAAKmkB,QAAS2J,OAAQ9tB,EAAKhG,IAAK61B,cAAe7vB,EAAK6vB,eAAvE7vB,EAAKhG,e,cCzDpB,SAASk3B,GAAT,GAAwF,IAAxC93B,EAAuC,EAAnDF,SAAYE,OACvDyM,EAAWC,cAsBjB,OApBAzM,qBAAU,WACR,GAAKD,KACDA,EAAOU,OAAS,GAApB,CAEA,IAKM4N,EALSypB,iBAAM/3B,EAAQ,CAC3Bg4B,aAAa,EACbC,mBAAmB,IAGA3pB,MAEA,kBAAVA,IAEiB,UAAxBA,EAAM4pB,cACRzrB,EAASS,GAAmB,CAAE0G,cAAc,KACX,SAAxBtF,EAAM4pB,eACfzrB,EAASS,GAAmB,CAAE0G,cAAc,SAE7C,CAACnH,EAAUzM,IAEP,K,yDCrBTgZ,KAAMC,OAAOC,MAEb,I,GAEM2P,GAAU3a,kBAAOmb,GAAPnb,CAAH,mNAFU,KAQD,qBAAGI,MAAkB4D,OAgG5BimB,GA1ED,SAAC,GAaQ,IAZrB5yB,EAYoB,EAZpBA,KAYoB,IAXpBmP,aAWoB,MAXZ,UAWY,EAVpBqL,EAUoB,EAVpBA,MACAvP,EASoB,EATpBA,MACAie,EAQoB,EARpBA,SACA2J,EAOoB,EAPpBA,SACAC,EAMoB,EANpBA,QACAC,EAKoB,EALpBA,SACAC,EAIoB,EAJpBA,WACAC,EAGoB,EAHpBA,YAGoB,IAFpBC,iBAEoB,MA3CC,IA2CD,EADjBvoB,EACiB,mIACd5B,EAAQqb,KACR+O,EAAc3Y,EAEpB,OACE,gBAAC,GAAD,2BAAS0Y,UAAWA,GAAevoB,GAAnC,cACE,gBAACyG,GAAD,kBACG0hB,QADH,IACGA,IAAW,KADd,OAEGC,QAFH,IAEGA,IAAY,QAEf,eAACK,GAAA,EAAD,CAAqBr2B,MAAM,OAAOC,OAAO,OAAzC,SACE,gBAACq2B,GAAA,EAAD,CACEt2B,MAAO,IACPC,OAAQ,IACRgD,KAAMA,EACNwjB,OAAQ,CACN8P,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,GAEV9L,aAAc,WACZkL,GAAYA,OAAS50B,GACrBirB,GAAYA,OAASjrB,IAZzB,UAeE,gCACE,kCAAgBZ,GAAG,WAAWq2B,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAtD,UACE,uBAAMzN,OAAO,KAAK0N,UAAW1qB,YAAO,IAAM+F,GAAQ4kB,YAAa,KAC/D,uBAAM3N,OAAO,OAAO0N,UAAW3kB,EAAO4kB,YAAa,SAGvD,eAACC,GAAA,EAAD,CACEC,QAAQ,OACRC,UAAU,EACVC,UAAU,EACVC,cAAe,SAAC9c,GAAD,OAAU7D,KAAM6D,GAAM+L,OAAO,OAC5CgR,WAAY,KAEd,eAAC,KAAD,CACEC,OAAQ,CAAEj4B,OAAQ0M,EAAM6D,KACxB2nB,aAAc,CAAEvG,QAAS,QACzBwG,UAAW,SAACha,EAAetC,EAAcpb,GACnCosB,GAAYiK,IAAgBr2B,EAAM23B,QAAQja,OAC5C0O,EAASpsB,EAAM23B,QAAQja,OAEzB,IAAMka,EAAgBjhB,KAAM3W,EAAM23B,QAAQnd,MAAM+L,OAAO,eACnDwP,GAAY5nB,IAAUypB,GAAe7B,EAAS6B,MAGtD,eAACC,GAAA,EAAD,CAAMV,QAAQ,QAAQzb,KAAK,WAAWnc,OAAQ8S,EAAOjS,KAAK,iBAAiBZ,YAAa,SAG5F,gBAAC8U,GAAD,kBACG4hB,QADH,IACGA,IAAc,KADjB,OAEGC,QAFH,IAEGA,IAAe,aCxGX2B,GAAqBn3B,YAA6C,+BAClEoU,GAAkBpU,YAA4C,4BAC9DqU,GAAqBrU,YAA8C,+BCAzE,SAASo3B,KACd,IAAMC,EAAyCluB,aAAY,SAACC,GAAD,OAAqBA,EAAMkuB,SAAS/0B,QAEzFkH,EAAWC,cAMjB,MAAO,CAAC2tB,EALsD1tB,uBAC5D,SAAC0tB,GAAD,OAAgC5tB,EAAS0tB,GAAmB,CAAEE,oBAC9D,CAAC5tB,KAME,SAAS8tB,KACd,IAAMC,EAAwCruB,aAAY,SAACC,GAAD,OAAqBA,EAAMkuB,SAASE,aACxF/tB,EAAWC,cAKjB,MAAO,CAAC8tB,EAJkD7tB,uBACxD,SAAC6tB,GAAD,OAA+B/tB,EAAS2K,GAAgB,CAAEojB,iBAC1D,CAAC/tB,KAKE,SAASguB,KACd,IAAMC,EAA0CvuB,aAAY,SAACC,GAAD,OAAqBA,EAAMkuB,SAASI,gBAC1FjuB,EAAWC,cAKjB,MAAO,CAACguB,EAJuD/tB,uBAC7D,SAAC+tB,GAAD,OAAiCjuB,EAAS4K,GAAmB,CAAEqjB,oBAC/D,CAACjuB,KC9BL,IAAMoc,GAAU3a,kBAAOyG,GAAPzG,CAAH,qFACE,qBAAGqB,YACD,qBAAGqF,cACT,gBAAGtG,EAAH,EAAGA,MAAH,SAAUqsB,SAA2BrsB,EAAME,KAAOF,EAAM8E,UAYpD,SAAS1H,GAAT,GAQA,IAPbqU,EAOY,EAPZA,MAOY,IANZ6a,gBAMY,MAND,EAMC,MALZrrB,gBAKY,MALD,OAKC,MAJZqF,kBAIY,MAJC,IAID,MAHZimB,YAGY,aAFZC,cAEY,SADT5qB,EACS,6EACZ,QAAc1M,IAAVuc,GAAiC,OAAVA,EACzB,OACE,eAACpL,GAAD,CAAWC,WAAYA,EAAYrF,SAAUA,EAA7C,eAMJ,IAAMwrB,EAAY1gB,WAAW0F,EAAM5F,QAAQygB,IAE3C,OAAIE,EAEA,gBAAC,GAAD,6BAAa5qB,GAAb,IAAmB0E,WAAYA,EAAYrF,SAAUA,EAAUorB,UAAU,EAAOK,SAAS,EAAzF,UACGC,KAAKC,IAAInb,GAAO5F,QAAQygB,GAD3B,QAOF,gBAAC,GAAD,6BAAa1qB,GAAb,IAAmB0E,WAAYA,EAAYrF,SAAUA,EAAUorB,SAAUI,EAAY,EAAGC,QAAuB,IAAdD,EAAjG,UACGF,GAAQ,IACRE,EAAY,GAAK,SACjBA,EAAY,GAAK,SACjBE,KAAKC,IAAInb,GAAO5F,QAAQygB,GAJ3B,IAIuCC,GAAQ,QCnDpC,I,2BAAA,OAA0B,oCCInCjqB,GAASf,oBAAH,wHASNsrB,GAAYjtB,UAAOktB,IAAV,mIACGxqB,IACN,qBAAG5B,QACJ,qBAAGA,QAEA,gBAAGpN,EAAH,EAAGA,OAAQ0M,EAAX,EAAWA,MAAX,cAAuB1M,QAAvB,IAAuBA,IAAU0M,EAAMG,YAQtC,SAAS4sB,GAAT,GAQX,IAAD,IAPDrsB,YAOC,MAPM,OAON,EANDpN,EAMC,EANDA,OACGsO,EAKF,kCACD,OACE,eAACirB,GAAD,2BAAW34B,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA6BsM,KAAMA,EAAMpN,OAAQA,GAAYsO,GAA9G,aACE,uBACEvO,EAAE,6HACFE,YAAY,MACZC,cAAc,QACdC,eAAe,aAMvB,I,0CAAMu5B,GAAQzrB,oBAAH,gIAMLgZ,GAAU3a,UAAOa,IAAV,+LAKS,gBAAGT,EAAH,EAAGA,MAAH,SAAU7L,KAAmB,QAAU6L,EAAM4D,OAG/D,SAAC7P,GAAD,OACAA,EAAMI,OAASJ,EAAME,OACjBsP,cADJ,gEAIIA,cAJJ,mEASE0pB,GAAcrtB,UAAOa,IAAV,wGACFusB,IAMFE,GAAc,SAAC,GAAiC,IAA/B/4B,EAA8B,EAA9BA,KAC5B,OACE,eAAC,GAAD,CAASA,KAAMA,EAAO,EAAI,EAA1B,SACE,eAAC84B,GAAD,UACE,sBAAK7T,IAAK+T,GAAIjU,IAAI,sBAMpBkU,GAAmB7rB,oBAAH,gIAST8rB,GAAcztB,UAAOa,IAAV,inBAQP2sB,IAIT,qBAAGptB,MAAkBM,OACrB,qBAAGN,MAAkB6D,OACrB,qBAAG7D,MAAkBM,OC3GhBgtB,GAAQ1tB,kBAAOyG,GAAPzG,CAAH,sPAIG,qBAAGiN,IAAiB,WAAa,gBAQzC0gB,GAAgB3tB,kBAAO0tB,GAAP1tB,CAAH,wMCZb4tB,GAAc5tB,UAAOa,IAAV,mKASX8b,GAAQ3c,UAAOa,IAAV,+IACP,qBAAGT,MAAkBG,YACnB,SAACpM,GAAD,OAAYA,EAAM05B,MAAQ,GAAM,KAQhCtO,GAAQvf,UAAOa,IAAV,wFAEI,qBAAGT,MAAkBM,OAQ9BotB,IAJY9tB,UAAO6C,KAAV,6CACX,gBAAGzO,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,IAAS,MAGV4L,UAAO6C,KAAV,sECfhB8X,GAAU3a,kBAAOub,GAAPvb,CAAH,8CAIPsf,GAAiBtf,UAAOa,IAAV,6oBAgCdktB,GAAc/tB,kBAAOoB,IAAPpB,CAAH,kHAQXguB,GAAiBhuB,kBAAO2Z,GAAP3Z,CAAH,kHAOdiuB,GAAU,SAAC,GAAmE,IAAjEvN,EAAgE,EAAhEA,UAAWwN,EAAqD,EAArDA,MACtB9tB,EAAQqb,KACd,OACE,eAACsS,GAAD,CAAatL,GAAI,UAAY/B,EAAUvjB,QAAvC,SACE,gBAAC,GAAD,WACE,eAACuwB,GAAD,UAAQQ,EAAQ,IAChB,gBAACR,GAAD,WACE,eAAC7kB,GAAD,UACE,eAACmlB,GAAD,CAAgB7wB,QAASujB,EAAUvjB,YAErC,eAACkG,GAAD,CAAgBuW,MAAO,CAAE5Y,WAAY,OAArC,SACE,eAAC0sB,GAAD,CAAO7J,GAAG,MAAV,SAAiBnD,EAAUrR,WAE7B,eAAClM,GAAD,CAAgByW,MAAO,CAAE5Y,WAAY,QAArC,SACE,gBAAC6H,GAAD,WACE,eAAC,GAAD,CAAiB2V,KAAMkC,EAAUnR,OACjC,gBAACme,GAAD,CAAO7J,GAAG,MAAMrd,MAAOpG,EAAMsB,MAA7B,cACIgf,EAAUrR,OADd,eAMN,eAACqe,GAAD,CAAOzgB,IAAK,EAAGvG,WAAY,IAA3B,SACGoT,GAAmB4G,EAAUzJ,YAEhC,eAACyW,GAAD,CAAOzgB,IAAK,EAAGvG,WAAY,IAA3B,SACE,eAAClJ,GAAD,CAASqU,MAAO6O,EAAUrJ,eAAgB3Q,WAAY,QAExD,eAACgnB,GAAD,CAAOzgB,IAAK,EAAGvG,WAAY,IAA3B,SACGoT,GAAmB4G,EAAUxU,aAEhC,eAACwhB,GAAD,CAAOzgB,IAAK,EAAGvG,WAAY,IAA3B,SACGoT,GAAmB4G,EAAU7J,gBAOlCsX,GACE,OADFA,GAEO,YAFPA,GAGI,SAHJA,GAIM,WAJNA,GAKY,iBAMH,SAASC,GAAT,GAMX,IALFC,EAKC,EALDA,WAKC,IAJDC,gBAIC,MARe,GAQf,EAEKluB,EAAQqb,KAFb,EAKiC5N,mBAASsgB,IAL1C,mBAKMI,EALN,KAKiBC,EALjB,OAMyC3gB,oBAAkB,GAN3D,mBAMM4gB,EANN,KAMqBC,EANrB,OASuB7gB,mBAAS,GAThC,mBASM8gB,EATN,KASYC,EATZ,OAU6B/gB,mBAAS,GAVtC,mBAUMghB,EAVN,KAUeC,EAVf,KAWD/8B,qBAAU,WACR,IAAIg9B,EAAa,EACbV,IACEA,EAAW77B,OAAS87B,IAAa,IACnCS,EAAa,GAEfD,EAAW/B,KAAKiC,MAAMX,EAAW77B,OAAS87B,GAAYS,MAEvD,CAACT,EAAUD,IAEd,IAAMY,EAAenpB,mBAAQ,WAC3B,OAAOuoB,EACHA,EACG1a,QAAO,SAACub,GAAD,QAASA,IAAMhyB,GAAWwP,SAASwiB,EAAE/xB,YAC5C4lB,MAAK,SAACptB,EAAG8N,GACR,OAAI9N,GAAK8N,EACA9N,EAAE44B,GAAgC9qB,EAAE8qB,GACZ,GAA1BE,GAAiB,EAAI,IACM,GAA3BA,GAAiB,EAAI,IAElB,KAGXthB,MAAMmhB,GAAYK,EAAO,GAAIA,EAAOL,GACvC,KACH,CAACD,EAAYC,EAAUK,EAAMF,EAAeF,IAEzCY,EAAa1wB,uBACjB,SAAC2wB,GACCZ,EAAaY,GACbV,EAAiBH,IAAca,IAAmBX,KAEpD,CAACA,EAAeF,IAGZlQ,EAAQ5f,uBACZ,SAAC4wB,GACC,OAAOd,IAAcc,EAAUZ,EAAsB,SAAN,SAAa,KAE9D,CAACA,EAAeF,IAGlB,OAAKF,EAKH,eAAC,GAAD,UACGY,EAAaz8B,OAAS,EACrB,gBAACymB,GAAD,CAAYrQ,IAAI,OAAhB,UACE,gBAAC,GAAD,WACE,eAAC8kB,GAAD,CAAOlnB,MAAOpG,EAAMe,MAApB,eACA,gBAACwsB,GAAD,CAAennB,MAAOpG,EAAMe,MAAOsB,QAAS,kBAAM0sB,EAAWhB,KAA7D,kBACQ9P,EAAM8P,OAEd,gBAACR,GAAD,CAAennB,MAAOpG,EAAMe,MAAO8L,IAAK,EAAGxK,QAAS,kBAAM0sB,EAAWhB,KAArE,mBACS9P,EAAM8P,OAEf,gBAACR,GAAD,CAAennB,MAAOpG,EAAMe,MAAO8L,IAAK,EAAGxK,QAAS,kBAAM0sB,EAAWhB,KAArE,0BACgB9P,EAAM8P,OAKtB,gBAACR,GAAD,CAAennB,MAAOpG,EAAMe,MAAO8L,IAAK,EAAGxK,QAAS,kBAAM0sB,EAAWhB,KAArE,wBACc9P,EAAM8P,OAEpB,gBAACR,GAAD,CAAennB,MAAOpG,EAAMe,MAAO8L,IAAK,EAAGxK,QAAS,kBAAM0sB,EAAWhB,KAArE,iBACO9P,EAAM8P,UAIf,eAAC,GAAD,IACCc,EAAax2B,KAAI,SAACpB,EAAM/E,GACvB,OAAI+E,EAEA,gBAAC,IAAMswB,SAAP,WACE,eAAC,GAAD,CAASuG,MAhGT,IAgGiBS,EAAO,GAAiBr8B,EAAGouB,UAAWrpB,IACvD,eAAC,GAAD,MAFmB/E,GAMlB,QAET,gBAACs7B,GAAD,WACE,sBACEnrB,QAAS,WACPmsB,EAAiB,IAATD,EAAaA,EAAOA,EAAO,IAFvC,SAKE,eAAC,GAAD,CAAOd,MAAgB,IAATc,EAAd,sBAEF,eAACloB,GAAD,UAAY,QAAUkoB,EAAO,OAASE,IACtC,sBACEpsB,QAAS,WACPmsB,EAAQD,IAASE,EAAUF,EAAOA,EAAO,IAF7C,SAKE,eAAC,GAAD,CAAOd,MAAOc,IAASE,EAAvB,4BAKN,gBAACpB,GAAD,WACE,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,8BAxEC,eAACN,GAAD,IClKX,I,SAAMxS,GAAU3a,kBAAOub,GAAPvb,CAAH,8CAIPsf,GAAiBtf,UAAOa,IAAV,imBA6BdktB,GAAc/tB,kBAAOoB,IAAPpB,CAAH,kHAQXmuB,GACK,UADLA,GAEO,YAFPA,GAGI,SAHJA,GAIW,gBAGXF,GAAU,SAAC,GAAgE,IAA9D1X,EAA6D,EAA7DA,SAAU2X,EAAmD,EAAnDA,MAC3B,OACE,eAAC,GAAD,CAAazL,GAAI,UAAYlM,EAASpZ,QAAtC,SACE,gBAAC,GAAD,WACE,eAACuwB,GAAD,CAAOhnB,WAAY,IAAnB,SAAyBwnB,EAAQ,IACjC,eAACR,GAAD,CAAOhnB,WAAY,IAAnB,SACE,gBAACmC,GAAD,WACE,eAACmS,GAAD,CAAoBC,SAAU1E,EAASlG,OAAOlT,QAAS+d,SAAU3E,EAAShG,OAAOpT,UACjF,gBAACsJ,GAAD,CAAYod,GAAG,MAAf,UACGtN,EAASlG,OAAOhB,OADnB,IAC4BkH,EAAShG,OAAOlB,UAE5C,eAACmM,GAAD,CAAWqI,GAAG,OAAOxiB,SAAS,OAA9B,SACG2R,GAAeuD,EAASyN,gBAI/B,eAAC0J,GAAD,CAAOzgB,IAAK,EAAGvG,WAAY,IAA3B,SACGoT,GAAmBvD,EAASM,UAE/B,eAAC6W,GAAD,CAAOzgB,IAAK,EAAGvG,WAAY,IAA3B,SACGoT,GAAmBvD,EAASrK,aAE/B,eAACwhB,GAAD,CAAOzgB,IAAK,EAAGvG,WAAY,IAA3B,SACGoT,GAAmBvD,EAASK,uBASxB,SAAS0Y,GAAT,GAAuG,IAAlFC,EAAiF,EAAjFA,UAAiF,IAAtEjB,gBAAsE,MAFnG,GAEmG,EAE7GluB,EAAQqb,KAFqG,EAKjF5N,mBAASsgB,IALwE,mBAK5GI,EAL4G,KAKjGC,EALiG,OAMzE3gB,oBAAkB,GANuD,mBAM5G4gB,EAN4G,KAM7FC,EAN6F,OAS3F7gB,mBAAS,GATkF,mBAS5G8gB,EAT4G,KAStGC,EATsG,OAUrF/gB,mBAAS,GAV4E,mBAU5GghB,EAV4G,KAUnGC,EAVmG,KAWnH/8B,qBAAU,WACR,IAAIg9B,EAAa,EACbQ,EAAU/8B,OAAS87B,IAAa,IAClCS,EAAa,GAEfD,EAAW/B,KAAKiC,MAAMO,EAAU/8B,OAAS87B,GAAYS,KACpD,CAACT,EAAUiB,IAEd,IAAMC,EAAc1pB,mBAAQ,WAC1B,OAAOypB,EACHA,EACG5b,QAAO,SAACub,GAAD,QAASA,IAAM9xB,GAAUsP,SAASwiB,EAAE/xB,YAC3C4lB,MAAK,SAACptB,EAAG8N,GACR,OAAI9N,GAAK8N,EACA9N,EAAE44B,GAA+B9qB,EAAE8qB,GACX,GAA1BE,GAAiB,EAAI,IACM,GAA3BA,GAAiB,EAAI,IAElB,KAGXthB,MAAMmhB,GAAYK,EAAO,GAAIA,EAAOL,GACvC,KACH,CAACA,EAAUK,EAAMY,EAAWd,EAAeF,IAExCY,EAAa1wB,uBACjB,SAAC2wB,GACCZ,EAAaY,GACbV,EAAiBH,IAAca,IAAmBX,KAEpD,CAACA,EAAeF,IAGZlQ,EAAQ5f,uBACZ,SAAC4wB,GACC,OAAOd,IAAcc,EAAUZ,EAAsB,SAAN,SAAa,KAE9D,CAACA,EAAeF,IAGlB,OAAKgB,EAKH,eAAC,GAAD,UACGC,EAAYh9B,OAAS,EACpB,gBAACymB,GAAD,CAAYrQ,IAAI,OAAhB,UACE,gBAAC,GAAD,WACE,eAAC8kB,GAAD,CAAOlnB,MAAOpG,EAAMe,MAApB,eACA,gBAACwsB,GAAD,CAAennB,MAAOpG,EAAMe,MAAOsB,QAAS,kBAAM0sB,EAAWhB,KAA7D,kBACQ9P,EAAM8P,OAEd,gBAACR,GAAD,CAAennB,MAAOpG,EAAMe,MAAO8L,IAAK,EAAGxK,QAAS,kBAAM0sB,EAAWhB,KAArE,iBACO9P,EAAM8P,OAEb,gBAACR,GAAD,CAAennB,MAAOpG,EAAMe,MAAO8L,IAAK,EAAGxK,QAAS,kBAAM0sB,EAAWhB,KAArE,wBACc9P,EAAM8P,OAEpB,gBAACR,GAAD,CAAennB,MAAOpG,EAAMe,MAAO8L,IAAK,EAAGxK,QAAS,kBAAM0sB,EAAWhB,KAArE,uBACa9P,EAAM8P,UAGrB,eAAC,GAAD,IACCqB,EAAY/2B,KAAI,SAAC8d,EAAUjkB,GAC1B,OAAIikB,EAEA,gBAAC,IAAMoR,SAAP,WACE,eAAC,GAAD,CAASuG,MAjFT,IAiFiBS,EAAO,GAAiBr8B,EAAGikB,SAAUA,IACtD,eAAC,GAAD,MAFmBjkB,GAMlB,QAET,gBAACs7B,GAAD,WACE,sBACEnrB,QAAS,WACPmsB,EAAiB,IAATD,EAAaA,EAAOA,EAAO,IAFvC,SAKE,eAAC,GAAD,CAAOd,MAAgB,IAATc,EAAd,sBAEF,eAACloB,GAAD,UAAY,QAAUkoB,EAAO,OAASE,IACtC,sBACEpsB,QAAS,WACPmsB,EAAQD,IAASE,EAAUF,EAAOA,EAAO,IAF7C,SAKE,eAAC,GAAD,CAAOd,MAAOc,IAASE,EAAvB,4BAKN,gBAACpB,GAAD,WACE,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,8BAjEC,eAACN,GAAD,ICnJJ,IAAMsC,GAAczvB,UAAOa,IAAV,6CAIX6uB,GAAmB1vB,UAAOa,IAAV,oPASb,gBAAGR,EAAH,EAAGA,gBAAH,oDAC2BA,EAD3B,wCAKHsvB,GAAyB3vB,UAAOa,IAAV,oPASnB,gBAAGR,EAAH,EAAGA,gBAAH,oDAC2BA,EAD3B,wCC3BT,SAASuvB,GAAWrkB,GAA8C,IAAhCmP,EAA+B,uDAAtB,aAChD,OAAO5P,KAAMS,KAAKA,GAAMmP,OAAOA,GAG1B,I,GAAMmV,GAAa,SAACtkB,GACzB,IAAMukB,EAAMhlB,OACNwB,EAAYxB,KAAMS,KAAKjQ,SAASiQ,IAEhCwkB,EAAYD,EAAIE,KAAK1jB,EAAW,UAChC2jB,EAAYH,EAAIE,KAAK1jB,EAAW,UAChC4jB,EAAUJ,EAAIE,KAAK1jB,EAAW,QAC9B6jB,EAASL,EAAIE,KAAK1jB,EAAW,OAEnC,OAAI4jB,GAAW,GACP,GAAN,OAAUC,EAAV,YAA+B,IAAXA,EAAe,MAAQ,OAA3C,QACSF,GAAa,GAChB,GAAN,OAAUC,EAAV,YAAiC,IAAZA,EAAgB,OAAS,QAA9C,QACSH,GAAa,GAChB,GAAN,OAAUE,EAAV,YAAqC,IAAdA,EAAkB,SAAW,UAApD,QAEM,GAAN,OAAUF,EAAV,YAAqC,IAAdA,EAAkB,SAAW,UAApD,S,oBCdJjlB,KAAMC,OAAOC,MAEb,I,eAEM2P,GAAU3a,kBAAOmb,GAAPnb,CAAH,mNAFU,KAQD,qBAAGI,MAAkB4D,OAsBrCosB,GAAY,SAAC,GAYZ,IAXLlB,EAWI,EAXJA,EACAmB,EAUI,EAVJA,EACAj8B,EASI,EATJA,MACAC,EAQI,EARJA,OACAE,EAOI,EAPJA,KAQA,OACE,6BACE,uBAAM26B,EAAGA,EAAGmB,EAAGA,EAAG97B,KAAMA,EAAMH,MAAOA,EAAOC,OAAQA,EAAQi8B,GAAG,SA+EtDrG,GA1ED,SAAC,GAaQ,IAZrB5yB,EAYoB,EAZpBA,KAYoB,IAXpBmP,aAWoB,MAXZ,UAWY,EAVpB+Z,EAUoB,EAVpBA,SACA2J,EASoB,EATpBA,SACArY,EAQoB,EARpBA,MACAvP,EAOoB,EAPpBA,MACA6nB,EAMoB,EANpBA,QACAC,EAKoB,EALpBA,SACAC,EAIoB,EAJpBA,WACAC,EAGoB,EAHpBA,YAGoB,IAFpBC,iBAEoB,MA/DC,IA+DD,EADjBvoB,EACiB,mIACd5B,EAAQqb,KACR+O,EAAc3Y,EAEpB,OACE,gBAAC,GAAD,2BAAS0Y,UAAWA,GAAevoB,GAAnC,cACE,gBAACyG,GAAD,kBACG0hB,QADH,IACGA,IAAW,KADd,OAEGC,QAFH,IAEGA,IAAY,QAEf,eAACK,GAAA,EAAD,CAAqBr2B,MAAM,OAAOC,OAAO,OAAzC,SACE,gBAACk8B,GAAA,EAAD,CACEn8B,MAAO,IACPC,OAAQ,IACRgD,KAAMA,EACNwjB,OAAQ,CACN8P,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,GAEV9L,aAAc,WACZkL,GAAYA,OAAS50B,GACrBirB,GAAYA,OAASjrB,IAZzB,UAeE,eAAC+1B,GAAA,EAAD,CACEC,QAAQ,OACRC,UAAU,EACVC,UAAU,EACVC,cAAe,SAAC9c,GAAD,OAAU7D,KAAM6D,GAAM+L,OAAO,OAC5CgR,WAAY,KAEd,eAAC,KAAD,CACEC,OAAQ,CAAEp3B,KAAM6L,EAAM6D,KACtB2nB,aAAc,CAAEvG,QAAS,QACzBwG,UAAW,SAACha,EAAetC,EAAcpb,GACnCosB,GAAYiK,IAAgBr2B,EAAM23B,QAAQja,OAC5C0O,EAASpsB,EAAM23B,QAAQja,OAEzB,IAAMka,EAAgBjhB,KAAM3W,EAAM23B,QAAQnd,MAAM+L,OAAO,eACnDwP,GAAY5nB,IAAUypB,GAAe7B,EAAS6B,MAGtD,eAACyE,GAAA,EAAD,CACElF,QAAQ,QACR/2B,KAAMiS,EACNiqB,MAAO,SAACt8B,GACN,OAAO,eAAC,GAAD,CAAWE,OAAQF,EAAME,OAAQD,MAAOD,EAAMC,MAAO86B,EAAG/6B,EAAM+6B,EAAGmB,EAAGl8B,EAAMk8B,EAAG97B,KAAMiS,YAKlG,gBAACiC,GAAD,kBACG4hB,QADH,IACGA,IAAc,KADjB,OAEGC,QAFH,IAEGA,IAAe,aChHlB3P,GAAU3a,kBAAOub,GAAPvb,CAAH,8CAIPsf,GAAiBtf,UAAOa,IAAV,62BA4Cd6vB,GAAW1wB,UAAOC,OAAV,0SAEG,qBAAGnC,OAAuB,IAAM,OAMtC,gBAAGA,EAAH,EAAGA,OAAQsC,EAAX,EAAWA,MAAX,OAAwBtC,EAASsC,EAAMwC,MAAQxC,EAAMsB,SAO1DysB,GACO,YADPA,GAEO,YAFPA,GAGI,SAHJA,GAIU,eAJVA,GAKU,eAGVF,GAAU,SAAC,GAA0E,IAAxEje,EAAuE,EAAvEA,YAAaxJ,EAA0D,EAA1DA,MACxBmqB,EAAO5D,KAAKC,IAAIhd,EAAYW,cAC5BigB,EAAO7D,KAAKC,IAAIhd,EAAYa,cAC5BggB,EAAoB7gB,EAAYW,aAAe,EAAIX,EAAYG,aAAeH,EAAYM,aAC1FwgB,EAAmB9gB,EAAYa,aAAe,EAAIb,EAAYG,aAAeH,EAAYM,aAEzFlQ,EAAQqb,KAEd,OACE,gBAAC,GAAD,WACE,eAAC5Z,GAAD,CAAcC,KAAMsQ,GAAiB,EAAGpC,EAAYD,KAAM,eAA1D,SACE,eAAC2d,GAAD,CAAOlnB,MAAK,OAAEA,QAAF,IAAEA,IAASpG,EAAMa,MAAOyF,WAAY,IAAhD,SACGsJ,EAAYH,OAASrB,GAAgBsB,KAArC,cACUE,EAAYG,aADtB,gBAC0CH,EAAYM,cACnDN,EAAYH,OAASrB,GAAgBiD,KAArC,eACQqf,EADR,gBACgCD,GADhC,iBAEU7gB,EAAYG,aAFtB,gBAE0CH,EAAYM,kBAG9D,eAACod,GAAD,CAAOzgB,IAAK,EAAGvG,WAAY,IAA3B,SACGoT,GAAmB9J,EAAYU,aAElC,eAACgd,GAAD,CAAOzgB,IAAK,EAAGvG,WAAY,IAA3B,SACE,eAAC,GAAD,CAAiB8X,KAAI,UAAK/D,GAAakW,GAAlB,aAA4B3gB,EAAYG,cAAgByO,cAAe,OAE9F,eAAC8O,GAAD,CAAOzgB,IAAK,EAAGvG,WAAY,IAA3B,SACE,eAAC,GAAD,CAAiB8X,KAAI,UAAK/D,GAAamW,GAAlB,aAA4B5gB,EAAYM,cAAgBsO,cAAe,OAE9F,eAAC8O,GAAD,CAAOzgB,IAAK,EAAGvG,WAAY,IAA3B,SACE,eAAC7E,GAAD,CAAcC,KAAMsQ,GAAiB,EAAGpC,EAAYC,OAAQ,WAAY2J,MAAO,CAAEpT,MAAK,OAAEA,QAAF,IAAEA,IAASpG,EAAMa,OAAvG,SACGwR,GAAezC,EAAYC,YAGhC,eAACyd,GAAD,CAAOzgB,IAAK,EAAGvG,WAAY,IAA3B,SACGmpB,GAAW7f,EAAY1D,iBAMjB,SAASykB,GAAT,GAQX,IAPFvE,EAOC,EAPDA,aAOC,IAND8B,gBAMC,MANU,GAMV,EALD9nB,EAKC,EALDA,MAOMpG,EAAQqb,KAFb,EAKiC5N,mBAASsgB,IAL1C,mBAKMI,EALN,KAKiBC,EALjB,OAMyC3gB,oBAAkB,GAN3D,mBAMM4gB,EANN,KAMqBC,EANrB,OASuB7gB,mBAAS,GAThC,mBASM8gB,EATN,KASYC,EATZ,OAU6B/gB,mBAAS,GAVtC,mBAUMghB,EAVN,KAUeC,EAVf,KAYD/8B,qBAAU,WACR,IAAIg9B,EAAa,EACbvC,EAAah6B,OAAS87B,IAAa,IACrCS,EAAa,GAEfD,EAAW/B,KAAKiC,MAAMxC,EAAah6B,OAAS87B,GAAYS,KACvD,CAACT,EAAU9B,IAlBb,MAqB+B3e,wBAAsCvY,GArBrE,mBAqBM07B,EArBN,KAqBgBC,EArBhB,KAuBKC,EAAqBprB,mBAAQ,WACjC,OAAO0mB,EACHA,EACGrf,QACA4V,MAAK,SAACptB,EAAG8N,GACR,OAAI9N,GAAK8N,EACA9N,EAAE44B,GAAkC9qB,EAAE8qB,GACd,GAA1BE,GAAiB,EAAI,IACM,GAA3BA,GAAiB,EAAI,IAElB,KAGX9a,QAAO,SAACub,GACP,YAAoB55B,IAAb07B,GAA0B9B,EAAErf,OAASmhB,KAE7C7jB,MAAMmhB,GAAYK,EAAO,GAAIA,EAAOL,GACvC,KACH,CAAC9B,EAAc8B,EAAUK,EAAMJ,EAAWE,EAAeuC,IAEtD7B,EAAa1wB,uBACjB,SAAC2wB,GACCZ,EAAaY,GACbV,EAAiBH,IAAca,IAAmBX,KAEpD,CAACA,EAAeF,IAGZlQ,EAAQ5f,uBACZ,SAAC4wB,GACC,OAAOd,IAAcc,EAAUZ,EAAsB,SAAN,SAAa,KAE9D,CAACA,EAAeF,IAGlB,OAAK/B,EAKH,eAAC,GAAD,UACE,gBAACvT,GAAD,CAAYrQ,IAAI,OAAhB,UACE,gBAAC,GAAD,WACE,gBAACC,GAAD,WACE,eAAC6nB,GAAD,CACEjuB,QAAS,WACPwuB,OAAY37B,IAEdwI,YAAqBxI,IAAb07B,EAJV,iBAQA,eAACN,GAAD,CACEjuB,QAAS,WACPwuB,EAAYziB,GAAgBiD,OAE9B3T,OAAQkzB,IAAaxiB,GAAgBiD,KAJvC,mBAQA,eAACif,GAAD,CACEjuB,QAAS,WACPwuB,EAAYziB,GAAgBsB,OAE9BhS,OAAQkzB,IAAaxiB,GAAgBsB,KAJvC,kBAQA,eAAC4gB,GAAD,CACEjuB,QAAS,WACPwuB,EAAYziB,GAAgB2C,OAE9BrT,OAAQkzB,IAAaxiB,GAAgB2C,KAJvC,wBASF,gBAACwc,GAAD,CAAennB,MAAOpG,EAAMe,MAAOsB,QAAS,kBAAM0sB,EAAWhB,KAAuBlhB,IAAK,EAAzF,yBACeoR,EAAM8P,OAErB,gBAACR,GAAD,CAAennB,MAAOpG,EAAMe,MAAO8L,IAAK,EAAGxK,QAAS,kBAAM0sB,EAAWhB,KAArE,0BACgB9P,EAAM8P,OAEtB,gBAACR,GAAD,CAAennB,MAAOpG,EAAMe,MAAO8L,IAAK,EAAGxK,QAAS,kBAAM0sB,EAAWhB,KAArE,0BACgB9P,EAAM8P,OAEtB,gBAACR,GAAD,CAAennB,MAAOpG,EAAMe,MAAO8L,IAAK,EAAGxK,QAAS,kBAAM0sB,EAAWhB,KAArE,qBACW9P,EAAM8P,OAEjB,gBAACR,GAAD,CAAennB,MAAOpG,EAAMe,MAAO8L,IAAK,EAAGxK,QAAS,kBAAM0sB,EAAWhB,KAArE,kBACQ9P,EAAM8P,UAGhB,eAAC,GAAD,IAEC+C,EAAmBz4B,KAAI,SAAC2V,EAAG9b,GAC1B,OAAI8b,EAEA,gBAAC,IAAMuZ,SAAP,WACE,eAAC,GAAD,CAAS3X,YAAa5B,EAAG5H,MAAOA,IAChC,eAAC,GAAD,MAFmBlU,GAMlB,QAEsB,IAA9B4+B,EAAmB1+B,OAAe,eAACiU,GAAD,mCAAyCnR,EAC5E,gBAACs4B,GAAD,WACE,sBACEnrB,QAAS,WACPmsB,EAAiB,IAATD,EAAaA,EAAOA,EAAO,IAFvC,SAKE,eAAC,GAAD,CAAOd,MAAgB,IAATc,EAAd,sBAEF,eAACloB,GAAD,UAAY,QAAUkoB,EAAO,OAASE,IACtC,sBACEpsB,QAAS,WACPmsB,EAAQD,IAASE,EAAUF,EAAOA,EAAO,IAF7C,SAKE,eAAC,GAAD,CAAOd,MAAOc,IAASE,EAAvB,8BArFD,eAAC1B,GAAD,IC1KX,I,SAAMgE,GAAenxB,UAAOa,IAAV,uDAGd,qBAAGT,MAAkB0C,WAAWI,UAA/B,QAAD,6CAKW,SAASkuB,KACtBr/B,qBAAU,WACRyQ,OAAO6uB,SAAS,EAAG,KAClB,IAEH,IAAMjxB,EAAQqb,KALe,EAONyQ,KAAhBC,EAPsB,sBAQTE,KAAbC,EARsB,sBASNC,KAAhBC,EATsB,sBAWS3e,qBAXT,mBAWtByjB,EAXsB,KAWTC,EAXS,OAYe1jB,qBAZf,mBAYtB2jB,EAZsB,KAYNC,EAZM,OAaK5jB,qBAbL,mBAatB6jB,EAbsB,KAaXC,EAbW,OAcO9jB,qBAdP,mBActB+jB,EAdsB,KAcVC,EAdU,KAiBvBjZ,EAAcL,KACdgX,EAAYzpB,mBAAQ,WACxB,OAAO3T,OAAO2a,OAAO8L,GAClBngB,KAAI,SAACoS,GAAD,OAAOA,EAAExT,QACbsc,OAAOR,MACT,CAACyF,IAGJ7mB,qBAAU,YACHu/B,GAAenF,GAClBoF,EAAepF,EAAajgB,aAE7B,CAACigB,EAAcmF,IAClBv/B,qBAAU,YACHy/B,GAAkBrF,GACrBsF,EAAkBtF,EAAatV,UAEhC,CAAC2a,EAAgBrF,IAEpB,IAAM2F,EAAmBhsB,mBAAQ,WAC/B,OAAIwmB,EACKA,EAAU7zB,KAAI,SAACs5B,GACpB,MAAO,CACLpjB,KAAMihB,GAAWmC,EAAI/lB,MACrB6F,MAAOkgB,EAAIlb,WAIR,KAER,CAACyV,IAEE0F,EAAsBlsB,mBAAQ,WAClC,OAAIwmB,EACKA,EAAU7zB,KAAI,SAACs5B,GACpB,MAAO,CACLpjB,KAAMihB,GAAWmC,EAAI/lB,MACrB6F,MAAOkgB,EAAI7lB,cAIR,KAER,CAACogB,IAEE9L,EAAYpN,KAEZoO,EAAkB1b,mBAAQ,WAC9B,OAAO3T,OAAO2a,OAAO0T,GAClB/nB,KAAI,SAAC2V,GAAD,OAAOA,EAAE/W,QACbsc,OAAOR,MACT,CAACqN,IAEJ,OACE,gBAACiP,GAAD,WACE,eAACE,GAAD,CAAwBtvB,gBAAiB,YACzC,gBAAC4Y,GAAD,CAAYrQ,IAAI,OAAhB,UACE,eAACnC,GAAD,iCACA,gBAACqC,GAAD,WACE,eAACqoB,GAAD,UACE,eAAC,GAAD,CACE95B,KAAMy6B,EACNz9B,OAAQ,IACRk2B,UAAW,IACX/jB,MAAOpG,EAAM2E,MACb8M,MAAO2f,EACPlvB,MAAOovB,EACPnR,SAAUkR,EACVvH,SAAUyH,EACVxH,QACE,gBAAClR,GAAD,CAAYrQ,IAAI,MAAhB,UACE,eAACnC,GAAD,CAAmBpF,SAAS,OAA5B,iBACA,eAACoF,GAAD,CAAkBpF,SAAS,OAA3B,SACE,gBAACysB,GAAD,WAAYhU,GAAmB0X,EAAgB,GAAG,GAAlD,SAEF,eAAC/qB,GAAD,CAAWpF,SAAS,OAAOhN,OAAO,OAAlC,SACGq9B,EACC,eAAC5D,GAAD,UAAY4D,IAEZ,eAAC5D,GAAD,UAAYhjB,KAAME,MAAM0P,OAAO,0BAO3C,eAACyW,GAAD,UACE,eAAC,GAAD,CACE98B,OAAQ,IACRk2B,UAAW,IACXlzB,KAAM26B,EACNxrB,MAAOpG,EAAMa,MACbsf,SAAUgR,EACVrH,SAAU2H,EACVhgB,MAAOyf,EACPhvB,MAAOsvB,EACPzH,QACE,gBAAClR,GAAD,CAAYrQ,IAAI,MAAhB,UACE,eAACnC,GAAD,CAAmBpF,SAAS,OAA5B,wBACA,eAACoF,GAAD,CAAkBpF,SAAS,OAA3B,SACE,gBAACysB,GAAD,eAAahU,GAAmBwX,EAAa,QAE/C,eAAC7qB,GAAD,CAAWpF,SAAS,OAAOhN,OAAO,OAAlC,SACGu9B,EACC,eAAC9D,GAAD,UAAY8D,IAEZ,eAAC9D,GAAD,UAAYhjB,KAAME,MAAM0P,OAAO,6BAQ7C,eAACzX,GAAD,UACE,eAACsY,GAAD,UACE,eAAC9S,GAAD,UACE,gBAACI,GAAD,WACE,gBAACA,GAAD,CAAUopB,GAAG,OAAb,UACE,eAACxrB,GAAD,CAAWwrB,GAAG,MAAd,0BACA,eAACxrB,GAAD,CAAYwrB,GAAG,MAAf,SAAsBnY,GAAkB,OAACqS,QAAD,IAACA,OAAD,EAACA,EAAcjgB,aACvD,eAAC1O,GAAD,CAASqU,MAAK,OAAEsa,QAAF,IAAEA,OAAF,EAAEA,EAAcxV,gBAAiBgW,MAAM,OAEvD,gBAAC9jB,GAAD,CAAUopB,GAAG,OAAb,UACE,eAACxrB,GAAD,CAAWwrB,GAAG,MAAd,wBACA,eAACxrB,GAAD,CAAYwrB,GAAG,MAAf,SAAsBnY,GAAkB,OAACqS,QAAD,IAACA,OAAD,EAACA,EAAc3U,WACvD,eAACha,GAAD,CAASqU,MAAK,OAAEsa,QAAF,IAAEA,OAAF,EAAEA,EAAc+F,UAAWvF,MAAM,OAEjD,eAAC3pB,GAAD,UACE,gBAAC6F,GAAD,CAAUopB,GAAG,OAAb,UACE,eAACxrB,GAAD,CAAWwrB,GAAG,MAAd,mBACA,eAACxrB,GAAD,CAAYwrB,GAAG,MAAf,SAAsBnY,GAAkB,OAACqS,QAAD,IAACA,OAAD,EAACA,EAActV,UACvD,eAACpQ,GAAD,IACA,eAACjJ,GAAD,CAASqU,MAAK,OAAEsa,QAAF,IAAEA,OAAF,EAAEA,EAAcrV,aAAc6V,MAAM,kBAO9D,gBAAClkB,GAAD,WACE,eAAChC,GAAD,yBACA,eAAC1G,GAAD,CAAoB0iB,GAAG,UAAvB,wBAEF,eAAC2L,GAAD,CAAYC,WAAY7M,IACxB,gBAAC/Y,GAAD,WACE,eAAChC,GAAD,wBACA,eAAC1G,GAAD,CAAoB0iB,GAAG,SAAvB,wBAEF,eAAC6M,GAAD,CAAWC,UAAWA,IACtB,eAAC9mB,GAAD,UACE,eAAChC,GAAD,6BAED+lB,EAAe,eAAC,GAAD,CAAmBA,aAAcA,IAAmB,WCxM7D,SAAS2F,KACtB,OAAO,yBCQM,SAASC,KACtBrgC,qBAAU,WACRyQ,OAAO6uB,SAAS,EAAG,KAClB,IAGH,IAAMzY,EAAcL,KACdgX,EAAYzpB,mBAAQ,WACxB,OAAO3T,OAAO2a,OAAO8L,GAClBngB,KAAI,SAACoS,GAAD,OAAOA,EAAExT,QACbsc,OAAOR,MACT,CAACyF,IAX6B,EAaZjZ,KACf0yB,EAAiB1Z,GAdU,qBAgBjC,OACE,eAAC8W,GAAD,UACE,gBAACxW,GAAD,CAAYrQ,IAAI,KAAhB,UACE,eAACnC,GAAD,6BACC4rB,EAAe7/B,OAAS,EACvB,eAAC88B,GAAD,CAAWC,UAAW8C,IAEtB,eAAC9W,GAAD,UACE,eAAC9U,GAAD,6CAWJ,eAACA,GAAD,wBACA,eAAC6oB,GAAD,CAAWC,UAAWA,SClC9B,I,eAAM+C,GAActyB,kBAAOD,GAAPC,CAAH,sIAUXuyB,GAAiBvyB,kBAAOiZ,GAAPjZ,CAAH,4BAEPwyB,GAAgBxyB,UAAOa,IAAV,yLAYpB4xB,GAAW,SAAC,GAA6C,IAA3C/R,EAA0C,EAA1CA,UAClB,OACE,eAAC4R,GAAD,CAAa7P,GAAI,UAAY/B,EAAUvjB,QAAvC,SACE,eAACme,GAAD,CAAUhT,QAAQ,OAAlB,SACE,gBAACO,GAAD,WACE,eAAC8Q,GAAD,CAAcxc,QAASujB,EAAUvjB,QAAS2D,KAAK,SAC/C,gBAACmY,GAAD,CAAYrQ,IAAI,MAAMgR,MAAO,CAAE5Y,WAAY,QAA3C,UACE,eAACyF,GAAD,CAAYpF,SAAS,OAArB,SACE,eAAC,GAAD,CAAiBmd,KAAMkC,EAAUrR,WAEnC,gBAAC3G,GAAD,WACE,eAACjC,GAAD,CAAYpF,SAAS,OAAO4wB,GAAG,MAAMS,WAAW,OAAhD,SACG5Y,GAAmB4G,EAAUzJ,YAEhC,eAACzZ,GAAD,CAAS6D,SAAS,OAAOwQ,MAAO6O,EAAUrJ,+BASzC,SAASsb,KACtB,IAAMnS,EAAYpN,KAEZwf,EAAmB9sB,mBAAQ,WAC/B,OAAO3T,OAAO2a,OAAO0T,GAClBuC,MAAK,cAA+B,IAAtBptB,EAAqB,EAA3B0B,KAAmBoM,EAAQ,EAAdpM,KACpB,OAAO1B,GAAK8N,EAAKspB,KAAKC,IAAL,OAASr3B,QAAT,IAASA,OAAT,EAASA,EAAG0hB,gBAAkB0V,KAAKC,IAAL,OAASvpB,QAAT,IAASA,OAAT,EAASA,EAAG4T,iBAAmB,EAAI,GAAM,KAEzFlK,MAAM,EAAG4f,KAAK8F,IAAI,GAAI1gC,OAAO2a,OAAO0T,GAAWhuB,WACjD,CAACguB,IAEEsS,EAAcxrB,iBAAuB,MAXJ,EAYDuG,oBAAS,GAZR,mBAYhCklB,EAZgC,KAYnBC,EAZmB,KAkCvC,OAlBAjhC,qBAAU,YACHghC,GAAeD,GAAeA,EAAYx5B,UAC7C9C,aAAY,WACNs8B,EAAYx5B,SAAWw5B,EAAYx5B,QAAQ25B,aAAeH,EAAYx5B,QAAQ45B,aAChFJ,EAAYx5B,QAAQ+3B,SAASyB,EAAYx5B,QAAQ25B,WAAa,EAAG,KAElE,IACHD,GAAe,MAEhB,CAACF,EAAaC,IAUf,eAACR,GAAD,CAAgB3pB,IAAI,KAApB,SACE,eAAC4pB,GAAD,CAAe/9B,IAAKq+B,EAApB,SACGF,EAAiBn6B,KAAI,SAAC06B,GAAD,aACpBA,EAAM97B,KAAO,eAAC,GAAD,CAAwDqpB,UAAWyS,EAAM97B,MAA1D,6BAAoB87B,EAAM97B,YAA1B,aAAoB,EAAY8F,UAAqC,YCvF5F,SAASi2B,KACtBrhC,qBAAU,WACRyQ,OAAO6uB,SAAS,EAAG,KAClB,IAEH,IAAM7Q,EAAYpN,KAEZoO,EAAkB1b,mBAAQ,WAC9B,OAAO3T,OAAO2a,OAAO0T,GAClB/nB,KAAI,SAAC2V,GAAD,OAAOA,EAAE/W,QACbsc,OAAOR,MACT,CAACqN,IAXmC,EAajBhhB,KAAfC,EAbgC,oBAcjC4zB,EAAkB5f,GAAchU,GAEtC,OACE,eAACgwB,GAAD,UACE,gBAACxW,GAAD,CAAYrQ,IAAI,KAAhB,UACE,eAACnC,GAAD,6BACChH,EAAYjN,OAAS,EACpB,eAAC47B,GAAD,CAAYC,WAAYgF,IAExB,eAAC9X,GAAD,UACE,eAAC9U,GAAD,8CAGJ,eAACxD,GAAD,UACE,eAACsY,GAAD,CAAc3B,MAAO,CAAE0Z,WAAY,QAAnC,SACE,gBAACra,GAAD,CAAYrQ,IAAI,KAAhB,UACE,eAACnC,GAAD,CAAmBpF,SAAS,OAA5B,wBACA,eAACsxB,GAAD,WAIN,eAAClsB,GAAD,yBACA,eAAC2nB,GAAD,CAAYC,WAAY7M,SCvChC,I,SAAM+R,GAAgBvzB,UAAOa,IAAV,0RAOG,qBAAGT,MAAkB6D,OAEhC,qBAAG7D,MAAkB8E,UAM5B,qBAAG9E,MAAkB0C,WAAWC,WAA/B,QAAD,+CAIEywB,GAAmBxzB,UAAOa,IAAV,wNASA,qBAAGT,MAAkB8E,UAGrCuuB,GAAY9xB,oBAAH,wHASTgB,GAAU3C,UAAOa,IAAV,sZACE4yB,IAKY,qBAAGrzB,MAAkB8E,UAUjC,SAASwuB,KACtB,IAAMtzB,EAAQqb,KADkB,EAGf9c,KAAV3F,EAHyB,sBAKE6U,oBAAS,GALX,mBAKzB8lB,EALyB,KAKdC,EALc,KAO1BC,EAAc76B,EAAO8F,YAgB3B,OAdA/M,qBACE,WACE,IAAM+hC,EAAS75B,YAAW,kBAAM25B,GAAa,KAAO,KAGpD,OAAO,WACLA,GAAa,GACbnL,aAAaqL,MAGjB,CAAC96B,IAKD,eAAC6I,GAAD,CAAcC,KAAM+xB,EAAczhB,GAAiB,MAAOyhB,EAAY/5B,WAAY,SAAW,GAA7F,SACE,gBAACy5B,GAAD,WACE,gBAAC9sB,GAAD,CAAYwrB,GAAG,MAAMzrB,MAAOpG,EAAMsB,MAAlC,iCACuB,OAEvB,eAAC+E,GAAD,CAAYmT,MAAO,CAAEma,QAASJ,EAAY,MAAQ,OAAlD,SAA4DE,IAC5D,eAACL,GAAD,WAAoBG,GAAa,eAAC,GAAD,WCtFzC,IAAMhZ,GAAU3a,UAAOa,IAAV,+FAES,qBAAGT,MAAkB0D,SAIrCkwB,GAAOh0B,kBAAOyG,GAAPzG,CAAH,kDAIJsB,GAAatB,kBAAO6B,GAAP7B,CAAH,iEAEL,qBAAGI,MAAkBwC,SA2BjBqxB,GAxBA,WACb,IAAMve,EAAYT,KAClB,OACE,eAAC,GAAD,UACE,gBAACxM,GAAD,WACE,eAACirB,GAAD,IACA,eAAC/qB,GAAD,CAASC,IAAI,MAAb,SACE,gBAACC,GAAD,WACE,eAACmrB,GAAD,0BACA,eAACA,GAAD,CAAMttB,WAAW,MAAMmd,GAAG,MAA1B,SACG/J,GAAkB,OAACpE,QAAD,IAACA,OAAD,EAACA,EAAWpc,gBAIrC,gBAACqP,GAAD,CAASC,IAAI,MAAMgR,MAAO,CAAEsa,eAAgB,YAA5C,UACE,eAAC,GAAD,CAAYpyB,KAAK,iCAAjB,0BACA,eAAC,GAAD,CAAYA,KAAK,4BAAjB,kBACA,eAAC,GAAD,CAAYA,KAAK,2BAAjB,0B,6EChCV,WAAiC4lB,GAAjC,eAAA/xB,EAAA,yDACM+xB,EAAM1xB,UAAYZ,KAAQI,SAA6B,+CAAlBkyB,EAAMvqB,QADjD,yCAEW9G,QAAQC,QAAQ,YAF3B,cAKQqB,EALR,kGAK0G+vB,EAAMvqB,QALhH,+BAOSg3B,KAAQ73B,KAAK3E,GACjBy8B,aACAt9B,MAAK,SAACu9B,GACL,UAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAASF,QAAS,CAGpB,IAFA,IAAIG,EAAcD,EAAQF,QAAQI,IAC9BC,EAAUD,aAAID,EAAa,QACxBE,EAAU,GACfF,EAAcG,YAAM,KAAOH,GAC3BE,EAAUD,aAAID,EAAa,QAE7B,OAAOA,EAET,OAAO,QAERz6B,OAAM,kBAAM,SArBjB,4C,sBAsCO,SAAS66B,GAASv3B,GAAmB,IAAD,EACf0Q,mBAAS,WADM,mBAClCrH,EADkC,KAC3BmuB,EAD2B,KAGnCC,EAAmBhjB,GAAUzU,GAE7BuqB,EAAQ5hB,mBAAQ,WACpB,OAAO8uB,EAAmB,IAAIj4B,KAAM,EAAGi4B,EAAkB,QAAKt/B,IAC7D,CAACs/B,IAmBJ,OAjBAC,2BAAgB,WACd,IAAIC,GAAQ,EAUZ,OARIpN,G,4CACFqN,CAAkBrN,GAAO5wB,MAAK,SAACk+B,GACxBF,GAAwB,OAAfE,GACZL,EAASK,MAKR,WACLF,GAAQ,EACRH,EAAS,cAEV,CAACjN,IAEGlhB,E,0BCrEaxG,UAAO6C,KAAV,+WAGH,gBAAGzC,EAAH,EAAGA,MAAO0kB,EAAV,EAAUA,SAAUmQ,EAApB,EAAoBA,WAApB,OAAsCnQ,EAAYmQ,EAAa70B,EAAMG,SAAWH,EAAMO,MAAS,UACpG,gBAAGP,EAAH,EAAGA,MAAO0kB,EAAV,EAAUA,SAAUmQ,EAApB,EAAoBA,WAApB,OAAsCnQ,EAAYmQ,EAAa70B,EAAMI,MAAQJ,EAAMe,MAASf,EAAMsB,SAM7F,gBAAGtB,EAAH,EAAGA,MAAO0kB,EAAV,EAAUA,SAAUmQ,EAApB,EAAoBA,WAApB,OAAsCnQ,EAAYmQ,EAAa70B,EAAMG,SAAWH,EAAMO,MAAS,UACpG,gBAAGP,EAAH,EAAGA,MAAO0kB,EAAV,EAAUA,SAAUmQ,EAApB,EAAoBA,WAApB,OAAsCnQ,GAAYmQ,EAAa70B,EAAMI,MAAuBJ,EAAMe,SAE5F,qBAAG8zB,WAA+B,MAAQ,SAExC,qBAAGA,WAA+B,OAAS,aAC5C,gBAAG70B,EAAH,EAAGA,MAAO0kB,EAAV,EAAUA,SAAUmQ,EAApB,EAAoBA,WAApB,OACZnQ,EAAYmQ,EAAa70B,EAAMG,SAAWH,EAAMsB,MAAS,UAClD,gBAAGtB,EAAH,EAAGA,MAAO0kB,EAAV,EAAUA,SAAUmQ,EAApB,EAAoBA,WAApB,OAAsCnQ,EAAYmQ,EAAa70B,EAAMI,MAAQJ,EAAMe,MAASf,EAAMsB,SAI1F1B,UAAOC,OAAV,yLAGF,qBAAGG,MAAkB8D,OA2B9B,I,GAAMgxB,GAAgBl1B,UAAOC,OAAV,0NAGf,gBAAG7L,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,IAAS,UAEnB,qBAAGgM,MAAkB6D,OAEzB,kBAAe,aAAf,EAAG7D,MAAiC6D,OAGrC,qBAAG7D,MAAkBe,SAInBg0B,GAAoBn1B,UAAO6C,KAAV,yWAQd,gBAAGzC,EAAH,EAAGA,MAAH,SAAU0kB,SAA2B1kB,EAAM0D,MAAQ,UACxD,gBAAG1D,EAAH,EAAGA,MAAH,SAAU0kB,SAA2B1kB,EAAMwC,MAAQxC,EAAMe,SACrD,gBAAGE,EAAH,EAAGA,SAAH,cAAkBA,QAAlB,IAAkBA,IAAY,UAKhC,gBAAGjB,EAAH,EAAGA,MAAH,SAAU0kB,SAA2B1kB,EAAMe,MAAQf,EAAMsB,S,UC3EtEoJ,KAAMC,OAAOC,MAEb,I,YCsDKoqB,GDtDCza,GAAU3a,kBAAOmb,GAAPnb,CAAH,0KAIS,qBAAGI,MAAkB4D,OAyK5BqxB,GAnJK,SAAC,GAYE,IAXrBh+B,EAWoB,EAXpBA,KAWoB,IAVpBmP,aAUoB,MAVZ,UAUY,EATpB+Z,EASoB,EATpBA,SACA2J,EAQoB,EARpBA,SACAC,EAOoB,EAPpBA,QACAC,EAMoB,EANpBA,SACAC,EAKoB,EALpBA,WACAC,EAIoB,EAJpBA,YAIoB,IAHpBj2B,cAGoB,MA3BC,IA2BD,MAFpBk2B,iBAEoB,MA3BC,IA2BD,EADjBvoB,EACiB,4HACd5B,EAAQqb,KACR6Z,EAAYl1B,EAAMsB,MAClB6zB,EAAWjuB,iBAAuB,MAHpB,EAIauG,qBAJb,mBAIb2nB,EAJa,KAICC,EAJD,KAMdC,EAAej3B,uBAAY,WAAO,IAAD,EACjC+2B,IAAY,OAAID,QAAJ,IAAIA,GAAJ,UAAIA,EAAUj8B,eAAd,aAAI,EAAmBq8B,iBACrCH,EAAaI,OAAOL,EAASj8B,QAAQq8B,cAAcE,YAAc,GAAIxhC,GACrEmhC,EAAaM,YAAYC,aACzBP,EAAaM,YAAYE,iBAAiB,GAAG,MAE9C,CAACR,EAAcD,EAAUlhC,IAGtB4hC,EAA6B,kBAAXzzB,OAyGxB,OAxGAzQ,qBAAU,WACR,GAAKkkC,EAIL,OADAzzB,OAAOuF,iBAAiB,SAAU2tB,GAC3B,kBAAMlzB,OAAOwF,oBAAoB,SAAU0tB,MACjD,CAACO,EAAUV,EAAUG,IAGxB3jC,qBAAU,WAAO,IAAD,EACd,IAAKyjC,GAAgBn+B,IAAS,OAACk+B,QAAD,IAACA,GAAD,UAACA,EAAUj8B,eAAX,aAAC,EAAmBq8B,eAAe,CAC/D,IAAMO,EAAQC,aAAYZ,EAASj8B,QAAS,CAC1CjF,OAAQA,EACRD,MAAOmhC,EAASj8B,QAAQq8B,cAAcE,YAAc,GACpDO,OAAQ,CACN/1B,gBAAiB,cACjBi1B,UAAW,UACXe,WAAY,aAEdC,gBAAiB,CACfC,aAAc,CACZ5L,IAAK,GACLG,OAAQ,IAEV0L,eAAe,GAEjBV,UAAW,CACTU,eAAe,EACfC,gBAAgB,EAChBC,kBAAmB,SAACC,GAClB,OAAO7rB,KAAMS,KAAKorB,GAAUjc,OAAO,kBAGvCkc,UAAW,CACTC,SAAS,GAEXC,KAAM,CACJC,UAAW,CACTF,SAAS,GAEXG,UAAW,CACTH,SAAS,IAGbI,UAAW,CACTC,SAAU,CACRL,SAAS,EACTM,cAAc,GAEhBC,KAAM,EACNC,SAAU,CACRR,SAAS,EACTM,cAAc,EACdvd,MAAO,EACPxlB,MAAO,EACPoS,MAAO,UACP8wB,qBAAsB9wB,MAK5B0vB,EAAMJ,YAAYC,aAClBN,EAASS,MAEV,CAAC1vB,EAAOgvB,EAAcn+B,EAAMhD,EAAQksB,EAAU+U,EAAWl1B,IAE5DrO,qBAAU,WACR,GAAIyjC,GAAgBn+B,EAAM,CACxB,IAAMkgC,EAAS/B,EAAagC,qBAAqB,CAC/CC,QAAS,QACTC,UAAW,MACXC,gBAAiB,MACjBC,cAAe,QACfC,cAAe,MACfC,YAAa,UAGfP,EAAOQ,QAAQ1gC,GAGfm+B,EAAawC,wBAAuB,SAAUC,GAC5C,IACU,OAAR1C,QAAQ,IAARA,OAAA,EAAAA,EAAUj8B,gBACChE,IAAV2iC,QACgB3iC,IAAf2iC,EAAMtpB,MACLspB,GAASA,EAAMC,OAASD,EAAMC,MAAMhJ,EAAI,GACxC+I,GAASA,EAAMC,OAASD,EAAMC,MAAMhJ,EAAIqG,EAASj8B,QAAQu8B,aACzDoC,GAASA,EAAMC,OAASD,EAAMC,MAAM7H,EAAI,GACxC4H,GAASA,EAAMC,OAASD,EAAMC,MAAM7H,EAAIh8B,GAG3CksB,GAAYA,OAASjrB,GACrB40B,GAAYA,OAAS50B,QAChB,GAAIiiC,GAAUU,EAAO,CAC1B,IAAM3rB,EAAY2rB,EAAMtpB,KAClBA,EAAO7D,KAAMS,KAAKe,GAAWtB,MAAM0P,OAAO,sBAAwB,SAClExgB,EAAS+9B,EAAME,aAAaC,IAAIb,GACtChX,GAAYA,EAAQ,OAACrmB,QAAD,IAACA,OAAD,EAACA,EAAQoE,MAC7B4rB,GAAYA,EAASvb,UAI1B,CAAC6mB,EAAchvB,EAAOnP,EAAMhD,EAAQksB,EAAU2J,EAAU9pB,EAAM4D,MAG/D,gBAAC,GAAD,CAASumB,UAAWA,EAApB,UACE,gBAAC9hB,GAAD,kBACG0hB,QADH,IACGA,IAAW,KADd,OAEGC,QAFH,IAEGA,IAAY,QAEf,mCAAK31B,IAAK8gC,EAAU7gC,GAAI,gBAAoBsN,IAC5C,gBAACyG,GAAD,kBACG4hB,QADH,IACGA,IAAc,KADjB,OAEGC,QAFH,IAEGA,IAAe,YC3IlB+N,GAAYr4B,kBAAOyG,GAAPzG,CAAH,uEAKTs4B,GAAgBt4B,UAAOa,IAAV,gPAYbiI,GAAgB9I,kBAAOyI,GAAPzI,CAAH,sCACf,qBAAGI,MAAkB0C,WAAWI,UAA/B,QAAD,6H,SAQCkyB,O,aAAAA,I,aAAAA,I,kBAAAA,Q,KAQU,SAASmD,GAAT,GAI+B,IAAD,IAF/Bp7B,EAE+B,EAH3C0kB,MACEloB,OAAUwD,QAKNkD,EAAkBq0B,GAFxBv3B,EAAUA,EAAQ6sB,eAGZ5pB,EAAQqb,KAEd1pB,qBAAU,WACRyQ,OAAO6uB,SAAS,EAAG,KAClB,IAEH,IAAM3Q,EvDhBD,SAAsBvjB,GAAqD,IAAD,EACzEuW,EAAeN,KACfpK,EAAeuK,KAGrB,GAAKpW,GAAYyU,qBAAUzU,GAU3B,OALKuW,EAAavW,IAChB6L,EAAa,CAAC7L,IAIhB,UAAOuW,EAAavW,UAApB,aAAO,EAAuB9F,KuDCZmhC,CAAar7B,GACzBs7B,EvDMD,SAA0Bt7B,GAC/B,IAAMoB,EAAWC,cAEXi6B,EADQx6B,aAAY,SAACC,GAAD,OAAqBA,EAAMmV,OAAOC,UAAUnW,MAC1Cub,cAH0C,EAI5C7K,oBAAS,GAJmC,mBAI/DrU,EAJ+D,KAIxDwU,EAJwD,KAsBtE,OAhBAjc,qBAAU,WAAM,4CACd,kCAAA4D,EAAA,sEAC8CyU,GAAmBjN,GADjE,gBACUmN,EADV,EACUA,QAAS9Q,EADnB,EACmBA,MAAOgR,EAD1B,EAC0BA,UACnBF,GAAY9Q,IAASgR,GACxBjM,EAAS0K,GAAiB,CAAEyvB,aAAcv7B,EAASub,cAAelO,KAEhEhR,GACFwU,EAASxU,GANb,4CADc,sBAUTi/B,GAAkBj/B,GAVR,WAAD,wBAWZtB,KAED,CAACiF,EAASoB,EAAU/E,EAAOi/B,IAGvBA,EuD5BeE,CAAiBx7B,GACjCoyB,EAAY5W,GAAY,OAAC8f,QAAD,IAACA,IAAiB,IAC1CjM,EvD8GD,SAA8BrvB,GACnC,IAAMoB,EAAWC,cAEXguB,EADQvuB,aAAY,SAACC,GAAD,OAAqBA,EAAMmV,OAAOC,UAAUnW,MAC3CqvB,aAHoD,EAIrD3e,oBAAS,GAJ4C,mBAIxErU,EAJwE,KAIjEwU,EAJiE,KAqB/E,OAfAjc,qBAAU,WAAM,4CACd,gCAAA4D,EAAA,sEACgC8Z,GAAuBtS,GADvD,gBACU3D,EADV,EACUA,MAAOnC,EADjB,EACiBA,KACXmC,EACFwU,GAAS,GACA3W,GACTkH,EAAS4K,GAAmB,CAAEuvB,aAAcv7B,EAASqvB,aAAcn1B,KALvE,4CADc,sBASTm1B,GAAiBhzB,GATP,WAAD,wBAUZtB,KAED,CAACiF,EAASoB,EAAU/E,EAAOgzB,IAGvBA,EuDnIcoM,CAAqBz7B,GACpCmvB,EvDiCD,SAA2BnvB,GAChC,IAAMoB,EAAWC,cAEX8tB,EADQruB,aAAY,SAACC,GAAD,OAAqBA,EAAMmV,OAAOC,UAAUnW,MAC9CmvB,UAHwD,EAItDze,oBAAS,GAJ6C,mBAIzErU,EAJyE,KAIlEwU,EAJkE,KAsBhF,OAhBAjc,qBAAU,WAAM,4CACd,gCAAA4D,EAAA,sEACgCyV,GAAoBjO,GADpD,gBACU3D,EADV,EACUA,MAAOnC,EADjB,EACiBA,MACVmC,GAASnC,GACZkH,EAAS2K,GAAgB,CAAEwvB,aAAcv7B,EAASmvB,UAAWj1B,KAE3DmC,GACFwU,EAASxU,GANb,4CADc,sBAUT8yB,GAAc9yB,GAVJ,WAAD,wBAWZtB,KAED,CAACiF,EAASoB,EAAU/E,EAAO8yB,IAGvBA,EuDvDWuM,CAAkB17B,GAG9B20B,EAAmBhsB,mBAAQ,WAC/B,OAAIwmB,EACKA,EAAU7zB,KAAI,SAACs5B,GACpB,MAAO,CACLpjB,KAAMihB,GAAWmC,EAAI/lB,MACrB6F,MAAOkgB,EAAI3lB,wBAIR,KAER,CAACkgB,IACE0F,EAAsBlsB,mBAAQ,WAClC,OAAIwmB,EACKA,EAAU7zB,KAAI,SAACs5B,GACpB,MAAO,CACLpjB,KAAMihB,GAAWmC,EAAI/lB,MACrB6F,MAAOkgB,EAAI7lB,cAIR,KAER,CAACogB,IAxCuC,EA2CnBze,mBAASunB,GAAU0D,OA3CA,mBA2CpCC,EA3CoC,KA2C9BC,EA3C8B,OA4CLnrB,qBA5CK,mBA4CpCorB,EA5CoC,KA4CvBC,EA5CuB,OA6CPrrB,qBA7CO,mBA6CpCsrB,EA7CoC,KA6CxBC,EA7CwB,OA8CtBvrB,mBC9Gf,QD8GCwrB,EA9CoC,oBAiDrCzqB,EvD4BD,SACLzR,EACA5G,EACA8iC,GAEA,IAAM96B,EAAWC,cACXkpB,EAAQzpB,aAAY,SAACC,GAAD,OAAqBA,EAAMmV,OAAOC,UAAUnW,MAChEyR,EAAY8Y,EAAM9Y,UAAUrY,GAHH,EAILsX,oBAAS,GAJJ,mBAIxBrU,EAJwB,KAIjBwU,EAJiB,KAOzBsrB,EAAyB5R,EAAM9Y,UAAU2qB,uBAEzCluB,EADiBP,OACeyC,SAAS,EAAG8rB,GAAY7rB,QAAQ,QAAQjC,OAyB9E,OAvBAxZ,qBAAU,WAAM,4CACd,gCAAA4D,EAAA,sEAC+C+Y,GAAoBvR,EAAS5G,EAAU8U,GADtF,gBACUhU,EADV,EACUA,KAAamiC,EADvB,EACgBhgC,MACVnC,GACFkH,EACE6K,GAAgB,CACdsvB,aAAcv7B,EACds8B,gBAAiBljC,EACjBqY,UAAWvX,EACXkiC,uBAAwBluB,KAI1BmuB,GACFxrB,GAAS,GAbb,4CADc,sBAiBTY,GAAcpV,GAjBJ,WAAD,wBAkBZtB,KAED,CAACiF,EAASoB,EAAU/E,EAAOjD,EAAU+iC,EAAwB1qB,EAAWvD,EAAgBguB,IAGpFzqB,EuDlEW8qB,CAAkBv8B,ECvHN,KDuHiCk8B,GACzDM,EAAoB7zB,mBAAQ,WAChC,GAAI8I,GAAa8R,GAAa9R,EAAUpc,OAAS,EAAG,CAClD,IAAMonC,EAAWznC,OAAOC,OAAO,GAAIwc,GAQnC,OAPAgrB,EAAS5/B,KAAK,CACZ2U,KAAM2D,KAAqB,IAC3BhU,KAAMsQ,EAAUA,EAAUpc,OAAS,GAAGyc,MACtCA,MAAK,OAAEyR,QAAF,IAAEA,OAAF,EAAEA,EAAWzJ,SAClB/H,KAAI,OAAEwR,QAAF,IAAEA,OAAF,EAAEA,EAAWzJ,SACjB9H,IAAKP,EAAUA,EAAUpc,OAAS,GAAGyc,QAEhC2qB,KAIR,CAAChrB,EAAW8R,IAhE4B,EAmENlhB,KAnEM,mBAmEpCC,EAnEoC,KAmEvBN,EAnEuB,KAqE3C,OACE,gBAACswB,GAAD,WACE,eAACC,GAAD,CAAkBrvB,gBAAiBA,IAClCqgB,EACEA,EAAUjJ,OAQT,gBAACwB,GAAD,CAAYrQ,IAAI,KAAhB,UACE,gBAACqQ,GAAD,CAAYrQ,IAAI,OAAhB,UACE,gBAACH,GAAD,WACE,gBAACE,GAAD,CAASC,IAAI,MAAb,UACE,eAAC7I,GAAD,CAAoB0iB,GAAI,IAAxB,SACE,eAAChc,GAAD,wBAEF,eAAC1G,GAAD,CAAoB0iB,GAAI,UAAxB,SACE,eAAChc,GAAD,yBAEF,eAACA,GAAD,kBACA,eAACA,GAAD,qBAAiBia,EAAUrR,OAA3B,OACA,eAAC,GAAD,CAAoBvN,KAAMsQ,GAAiB,EAAGjV,EAAS,WAAvD,SACE,eAACsJ,GAAD,sBAAiBgM,GAAetV,GAAhC,aAGJ,gBAAC0L,GAAD,CAAUD,IAAI,OAAOR,MAAM,SAA3B,UACE,eAAC,GAAD,CAAW7T,KAAMkL,EAAYiN,SAASvP,GAAUsF,QAAS,kBAAMtD,EAAchC,MAC7E,eAAC,GAAD,CAAoB2E,KAAMsQ,GAAiB,EAAGjV,EAAS,WAAvD,SACE,eAAC,KAAD,CAAczJ,OAAQ0M,EAAMe,MAAOL,KAAM,OAAQ8Y,MAAO,CAAE5Y,WAAY,kBAI5E,gBAAC,GAAD,CAAeoH,MAAM,WAArB,UACE,gBAAC6Q,GAAD,CAAYrQ,IAAI,KAAhB,UACE,gBAACC,GAAD,CAAUD,IAAI,MAAd,UACE,eAAC+Q,GAAD,CAAcxc,QAASA,IACvB,eAACsJ,GAAD,CAAYod,GAAI,OAAQxiB,SAAS,OAAjC,SACGqf,EAAUnR,OAEb,gBAAC9I,GAAD,CAAWod,GAAI,OAAQxiB,SAAS,OAAhC,cACIqf,EAAUrR,OADd,UAIF,gBAAC3G,GAAD,CAASkR,MAAO,CAAEigB,UAAW,OAA7B,UACE,gBAACxB,GAAD,CAAWpG,GAAG,OAAd,cAAuBnY,GAAmB4G,EAAUzJ,aADtD,IAEG,eAACzZ,GAAD,CAASqU,MAAO6O,EAAUrJ,iBAF7B,UAKF,gBAACxO,GAAD,WACE,eAAC,GAAD,CAAoB/G,KAAI,wCAAmC3E,GAA3D,SACE,eAAC8e,GAAD,CAAY7nB,MAAM,QAAQ69B,GAAG,OAAO59B,OAAQ,OAAQulB,MAAO,CAAEvlB,OAAQ,QAArE,SACE,gBAACoU,GAAD,WACE,eAAC,KAAD,CAAU3H,KAAM,KAChB,sBAAK8Y,MAAO,CAAEyL,QAAS,OAAQyU,WAAY,UAA3C,kCAIN,eAAC,GAAD,CAAoBh4B,KAAI,iDAA4C3E,GAApE,SACE,eAAC2e,GAAD,CAAe1nB,MAAM,QAAQ2nB,QAAS1b,EAAiBuZ,MAAO,CAAEvlB,OAAQ,QAAxE,8BAOR,gBAACikC,GAAD,WACE,eAAC/c,GAAD,UACE,gBAACtC,GAAD,CAAYrQ,IAAI,KAAhB,UACE,gBAACqQ,GAAD,CAAYrQ,IAAI,MAAhB,UACE,eAACnC,GAAD,CAAWC,WAAY,IAAvB,iBACA,eAACD,GAAD,CAAYpF,SAAS,OAArB,SAA6ByY,GAAmB4G,EAAU7J,UAC1D,eAACrZ,GAAD,CAASqU,MAAO6O,EAAU5J,kBAE5B,gBAACmC,GAAD,CAAYrQ,IAAI,MAAhB,UACE,eAACnC,GAAD,CAAWC,WAAY,IAAvB,6BACA,eAACD,GAAD,CAAYpF,SAAS,OAArB,SAA6ByY,GAAmB4G,EAAUxU,aAC1D,eAAC1O,GAAD,CAASqU,MAAO6O,EAAU/J,qBAE5B,gBAACsC,GAAD,CAAYrQ,IAAI,MAAhB,UACE,eAACnC,GAAD,CAAWC,WAAY,IAAvB,4BACA,eAACD,GAAD,CAAYpF,SAAS,OAArB,SAA6ByY,GAAmB4G,EAAU9J,oBAE5D,gBAACqC,GAAD,CAAYrQ,IAAI,MAAhB,UACE,eAACnC,GAAD,CAAWC,WAAY,IAAvB,sBACA,eAACD,GAAD,CAAYpF,SAAS,OAArB,SAA6ByY,GAAmB4G,EAAUlJ,mBAIhE,gBAAC+D,GAAD,WACE,gBAAC9S,GAAD,CAAYL,MAAM,aAAlB,UACE,gBAAC6Q,GAAD,WACE,eAACpQ,GAAD,UACE,eAACpC,GAAD,CAAYpF,SAAS,OAAOhN,OAAO,OAAnC,SACE,eAACy5B,GAAD,UACGmL,EACGnf,GAAmBmf,EAAa,GAChCF,IAAS3D,GAAU2E,IACnBjgB,GAAkB,UAACkY,EAAoBA,EAAoBx/B,OAAS,UAAlD,aAAC,EAAqDqf,OACxEknB,IAAS3D,GAAU4E,IACnBlgB,GAAkB,UAACgY,EAAiBA,EAAiBt/B,OAAS,UAA5C,aAAC,EAA+Cqf,OAClEiI,GAAmB4G,EAAUzJ,SAAU,SAIjD,eAACxQ,GAAD,CAAWpS,OAAO,OAAOgN,SAAS,OAAlC,SACG83B,EACC,eAACrL,GAAD,UAAYqL,IAEZ,eAACrL,GAAD,UAAYhjB,KAAME,MAAM0P,OAAO,sBAIrC,gBAACwa,GAAD,CAAe9gC,MAAM,QAArB,UACE,eAAC+gC,GAAD,CACErQ,SAAUiU,IAAS3D,GAAU2E,IAC7B14B,SAAS,OACToB,QAAS,kBAAOs2B,IAAS3D,GAAU2E,IAAMf,EAAQ5D,GAAU4E,KAAOhB,EAAQ5D,GAAU2E,MAHtF,oBAOA,eAAC5E,GAAD,CACErQ,SAAUiU,IAAS3D,GAAU4E,IAC7B34B,SAAS,OACToB,QAAS,kBAAOs2B,IAAS3D,GAAU4E,IAAMhB,EAAQ5D,GAAU0D,OAASE,EAAQ5D,GAAU4E,MAHxF,iBAOA,eAAC7E,GAAD,CACErQ,SAAUiU,IAAS3D,GAAU0D,MAC7Bz3B,SAAS,OACToB,QAAS,kBAAMu2B,EAAQ5D,GAAU0D,QAHnC,yBASHC,IAAS3D,GAAU4E,IAClB,eAAC,GAAD,CACE3iC,KAAMy6B,EACNtrB,MAAOnG,EACPkqB,UAAW,IACX1Y,MAAOonB,EACP32B,MAAO62B,EACP5Y,SAAU2Y,EACVhP,SAAUkP,IAEVL,IAAS3D,GAAU2E,IACrB,eAAC,GAAD,CACE1iC,KAAM26B,EACNxrB,MAAOnG,EACPkqB,UAAW,IACX1Y,MAAOonB,EACP32B,MAAO62B,EACP5Y,SAAU2Y,EACVhP,SAAUkP,IAEVL,IAAS3D,GAAU0D,MACrBa,EACE,eAAC,GAAD,CACEtiC,KAAMsiC,EACNpZ,SAAU2Y,EACVhP,SAAUkP,EACV5yB,MAAOnG,IAGT,eAAC,GAAD,CAAa9L,MAAM,IAEnB,WAgCR,eAACkS,GAAD,oBACA,eAAC8U,GAAD,UACE,eAAC+T,GAAD,CAAWC,UAAWA,MAExB,eAAC9oB,GAAD,2BACA,eAAC8U,GAAD,UACGiR,EACC,eAACuE,GAAD,CAAkBvE,aAAcA,EAAchmB,MAAOnG,IAErD,eAAC,GAAD,CAAa9L,MAAM,SA9MzB,gBAAC8mB,GAAD,CAAezB,MAAO,CAAEgK,UAAW,UAAnC,qEAEE,eAAC,GAAD,CAAoBhK,MAAO,CAAE5Y,WAAY,OAASc,KAAI,wCAAmC3E,GAAzF,sBAkNJ,eAACgwB,GAAD,OEtWD,SAAS8M,GAAqB9lC,GAAkD,IAGvEgJ,EAEVhJ,EAHF0tB,MACEloB,OAAUwD,QAId,OAAKyU,qBAAUzU,GAGR,eAACo7B,GAAD,gBAAepkC,IAFb,eAAC,IAAD,CAAUsuB,GAAE,M,8CCJjByX,GAA2B,SAAClW,GAChC,OAAQA,GACN,IAAK,QACH,OAAO,IACT,IAAK,OACH,OAAO,GACT,IAAK,MACH,OAAO,GACT,QACE,MAAM/tB,MAAM,6BAAD,OAA8B+tB,EAA9B,kBAgDXmW,GAAqB,uCAAG,WAC5BC,EACAC,EACAC,GAH4B,6BAAA3kC,EAAA,sDAKtB4kC,EAAYpwB,KALU,8dA0BxBqwB,EAA2B,GAC3BC,EAAiC,GACjCjvB,EAAO,EA5BiB,uBA8BanC,GAAOS,MAA8B,CAC1EA,MAAOywB,EACP1wB,YAAa,eACbQ,UAAW,CACT+vB,cACAC,oBACAC,oBACA9uB,UArCsB,mBA8BlBnU,EA9BkB,EA8BlBA,KAAMmC,EA9BY,EA8BZA,QAAO8Q,EA9BK,EA8BLA,SA9BK,4DA+CtB9Q,EA/CsB,0CAgDjB,CAAEA,MAAO+Q,QAAQ/Q,GAAQ8Q,UAASowB,MAAOD,IAhDxB,QAmD1BD,EAAmBnjC,EAAKqjC,MACxBD,EAAyBA,EAAuB9vB,OAAO6vB,GACvDhvB,GAAQ,IArDkB,WAsDnBgvB,EAAiBhoC,OAAS,EAtDP,iDAwDrB,CAAEkoC,MAAOD,EAAwBnwB,SAAS,EAAO9Q,OAAO,IAxDnC,4CAAH,0DAkErBmhC,GAAYxwB,KAAH,0TAqBFywB,GAA0B,uCAAG,WACxCR,GADwC,2FAAAzkC,EAAA,6DAExCklC,EAFwC,+BAjJR,IAiJQ,SAQWxxB,GAAOS,MAAkB,CAC1EA,MAAO6wB,GACPtwB,UAAW,CACT+vB,iBAXoC,mBAQ1BU,EAR0B,EAQhCzjC,KAAkBmC,EARc,EAQdA,QAAO8Q,EARO,EAQPA,WAOlB9Q,GAAUshC,EAfe,yCAgB/B,CACLxwB,UACA9Q,MAAO+Q,QAAQ/Q,GACfnC,UAAM/B,IAnB8B,gBA+BpCwlC,EAPF1qB,KACQ2qB,EAzB8B,EAyBpC9c,KACA+F,EA1BoC,EA0BpCA,QACAgX,EA3BoC,EA2BpCA,UA3BoC,IA4BpC3qB,OAAcG,EA5BsB,EA4B1B9b,GAA6BumC,EA5BH,EA4BPvO,SA5BO,IA6BpCnc,OAAcE,EA7BsB,EA6B1B/b,GAA6BwmC,EA7BH,EA6BPxO,SAI3ByO,EAAqB7/B,SAASy/B,GAC9BK,EAAclB,GAAyBlW,GAIvCqX,EAAgBtO,KAAKiC,MAAMmM,EAAqBC,GAAeA,EAI/Df,EAAoBgB,EAAgBR,EAAsBO,EAC1Dd,EAAoBe,EAAgBR,EAAsBO,EA3CxB,UA6CHjB,GAAsBC,EAAaC,EAAmBC,GA7CnD,aA6ClCgB,EA7CkC,QA8Cb9hC,QAAS8hC,EAAuBhxB,QA9CnB,0CA+C/B,CACL9Q,MAAO8hC,EAAuB9hC,MAC9B8Q,QAASgxB,EAAuBhxB,UAjDI,eAqDzBixB,EAAqBD,EAA5BZ,MAEFc,EAA2BC,KAAMF,EAAkB,WAEnDlrB,EAAS,IAAI1T,KAAM,EAAG6T,EAAelV,SAAS2/B,IAC9C1qB,EAAS,IAAI5T,KAAM,EAAG8T,EAAenV,SAAS4/B,KAQhDQ,EAAwBL,GACAM,KAASC,WACnCF,EAAwBC,KAASC,UAE/BF,EAAwBC,KAASE,WACnCH,EAAwBC,KAASE,UAG7BC,EAAqC,CACzCC,gBAAiBz+B,KAAKC,OAAOy9B,GAC7BgB,QAASX,EACTY,aAAc3+B,KAAKC,OAAO,GAC1B2+B,OAAQC,aAAY9rB,EAAQE,EAAQmrB,GAAuBzvB,QAhOpC,GAiOvBmwB,OAAQD,aAAY5rB,EAAQF,EAAQqrB,GAAuBzvB,QAjOpC,GAkOvBowB,eAAgB/+B,KAAKC,OAAO,KAMxB++B,EAAad,EAAyBH,MAE1CS,EAAoBO,eAAiB/+B,KAAKC,OAAO++B,EAAWD,gBAC5DP,EAAoBG,aAAe3+B,KAAKC,OAAO++B,EAAWL,eAzFpB,SA4FnCM,OA5FmC,aA4FnCA,IA5FmC,gBA4FnCA,MA5FmC,KAsKlCC,GApEAC,EAA0B,SAC9BX,EACAV,EACAP,EACA6B,GASA,IAPA,IAAIC,EAAoC,gBACnCb,GAKDc,EAAkC,GAC7BtqC,EAAI,EAAGA,EAAIuoC,EAAqBvoC,IAAK,CAC5C,IAAMuqC,EACJH,GAAaH,EAAUO,IACnBH,EAAsBX,QAAUZ,EAChCuB,EAAsBX,QAAUZ,EAEtC,GAAIyB,EAAiBlB,KAASC,UAAYiB,EAAiBlB,KAASE,SAClE,MAGF,IAAMkB,EAAsC,CAC1ChB,gBAAiBY,EAAsBZ,gBACvCC,QAASa,EACTZ,aAAc3+B,KAAKC,OAAO,GAC1B2+B,OAAQC,aAAY9rB,EAAQE,EAAQssB,GAAgB5wB,QA/QjC,GAgRnBmwB,OAAQD,aAAY5rB,EAAQF,EAAQwsB,GAAgB5wB,QAhRjC,GAiRnBowB,eAAgB/+B,KAAKC,OAAO,IAKxBy/B,EAAyBxB,EAAyBqB,EAAe/iC,YACnEkjC,IACFD,EAAqBV,eAAiB/+B,KAAKC,OAAOy/B,EAAuBX,gBACzEU,EAAqBd,aAAe3+B,KAAKC,OAAOy/B,EAAuBf,eAOrES,GAAaH,EAAUO,KAAOE,EAChCD,EAAqBhB,gBAAkBz+B,KAAK2/B,IAC1CN,EAAsBZ,gBACtBz+B,KAAKC,OAAOy/B,EAAuBf,eAE5BS,GAAaH,EAAUW,MAAQ5/B,KAAK6/B,SAASR,EAAsBV,aAAc3+B,KAAKC,OAAO,MAEtGw/B,EAAqBhB,gBAAkBz+B,KAAKiQ,SAC1CovB,EAAsBZ,gBACtBY,EAAsBV,eAI1BW,EAAe5iC,KAAK+iC,GACpBJ,EAAwBI,EAO1B,OAJIL,GAAaH,EAAUW,OACzBN,EAAiBA,EAAejT,WAG3BiT,IAIPd,EACAV,EACAP,EACA0B,EAAUO,KAGNM,EAAiCX,EACrCX,EACAV,EACAP,EACA0B,EAAUW,MAGNG,EAAiBD,EAAczyB,OAAOmxB,GAAqBnxB,OAAO6xB,GApLhC,kBAsLjC,CACLnlC,KAAM,CACJgmC,iBACArZ,UACAoX,cACAC,mBA3LoC,4CAAH,sD,oBChJjC1gB,GAAU3a,UAAOa,IAAV,iKAMS,qBAAGT,MAAkB6D,OAepC,SAASq5B,GAAT,GAAoF,IAAvDjmC,EAAsD,EAAtDA,KAAMkmC,EAAgD,EAAhDA,WAAYhnB,EAAoC,EAApCA,SAC9CnW,EAAQqb,KACR+hB,EAAYD,EACZE,EAAS,OAAGpmC,QAAH,IAAGA,OAAH,EAAGA,EAAOmmC,EAAUtP,OACnC,UAAIuP,QAAJ,IAAIA,OAAJ,EAAIA,EAAWC,UAAW,CACxB,IAAMxB,EAASuB,EAAUvB,OACnBE,EAASqB,EAAUrB,OACzB,OACE,6BACE,gCAAelN,EAAGsO,EAAUtO,EAAI,GAAImB,EAAG,IAAKj8B,MAAO,OAAQC,OAAQ,IAAnE,SACE,eAAC,GAAD,UACE,gBAAC4kB,GAAD,CAAYrQ,IAAI,MAAhB,UACE,gBAACC,GAAD,CAAUT,MAAM,SAAhB,UACE,eAAC3B,GAAD,CAAWwrB,GAAG,MAAd,2BACA,sBACErY,MAAO,CACLigB,UAAW,MACXxlC,OAAQ,MACRD,MAAO,MACPoU,aAAc,MACdnI,gBAAiBD,EAAM2E,YAI7B,eAAC0B,GAAD,sBAAkB8P,EAASlG,OAAOhB,OAAlC,cAA8C3U,OAAOwhC,GAAQyB,oBAAeroC,EAAW,CACrFsoC,yBAA0B,IAD5B,YAEMrnB,EAAShG,OAAOlB,UACtB,eAAC5I,GAAD,sBAAkB8P,EAAShG,OAAOlB,OAAlC,cAA8C3U,OAAO0hC,GAAQuB,oBAAeroC,EAAW,CACrFsoC,yBAA0B,IAD5B,YAEMrnB,EAASlG,OAAOhB,mBAOlC,OAAO,KCxDT,IAAMwuB,GAAiB79B,kBAAOob,GAAPpb,CAAH,sHAmEL89B,I,qBAAAA,GArDR,YAAoF,IAAD,gCAA1DP,EAA0D,EAA1DA,WAAYhnB,EAA8C,EAA9CA,SAAUwnB,EAAoC,EAApCA,aAC9C39B,EAAQqb,KACRygB,EAAM,OAAGqB,QAAH,IAAGA,GAAH,UAAGA,EAAYzR,eAAf,iBAAG,EAAsB,UAAzB,aAAG,EAA0BA,QAAQoQ,OAC3CE,EAAM,OAAGmB,QAAH,IAAGA,GAAH,UAAGA,EAAYzR,eAAf,iBAAG,EAAsB,UAAzB,aAAG,EAA0BA,QAAQsQ,OAC3C4B,EAAS,OAAGT,QAAH,IAAGA,GAAH,UAAGA,EAAYzR,eAAf,iBAAG,EAAsB,UAAzB,aAAG,EAA0BA,QAAQkS,UAC9CC,EAAS,OAAGV,QAAH,IAAGA,GAAH,UAAGA,EAAYzR,eAAf,iBAAG,EAAsB,UAAzB,aAAG,EAA0BA,QAAQmS,UAEpD,OACE,eAACJ,GAAD,UACE,gBAAC5kB,GAAD,CAAYrQ,IAAI,KAAhB,UACE,eAACnC,GAAD,CAAWD,MAAOpG,EAAMsB,MAAxB,wBACA,gBAAC+G,GAAD,WACE,gBAAChC,GAAD,kBAAa8P,QAAb,IAAaA,GAAb,UAAaA,EAAUlG,cAAvB,aAAa,EAAkBhB,OAA/B,cACA,gBAAC5I,GAAD,WACGy1B,EACGxhC,OAAOwhC,GAAQyB,oBAAeroC,EAAW,CACvCsoC,yBAA0B,IAE5B,GAAI,IALV,OAMGrnB,QANH,IAMGA,GANH,UAMGA,EAAUhG,cANb,aAMG,EAAkBlB,aAGvB,gBAAC5G,GAAD,WACE,gBAAChC,GAAD,kBAAa8P,QAAb,IAAaA,GAAb,UAAaA,EAAUhG,cAAvB,aAAa,EAAkBlB,OAA/B,cACA,gBAAC5I,GAAD,WACG21B,EACG1hC,OAAO0hC,GAAQuB,oBAAeroC,EAAW,CACvCsoC,yBAA0B,IAE5B,GAAI,IALV,OAMGrnB,QANH,IAMGA,GANH,UAMGA,EAAUlG,cANb,aAMG,EAAkBhB,aAGtB0uB,GAAgB7B,GAAU6B,EAAe3B,EACxC,gBAAC3zB,GAAD,WACE,gBAAChC,GAAD,kBAAa8P,QAAb,IAAaA,GAAb,UAAaA,EAAUlG,cAAvB,aAAa,EAAkBhB,OAA/B,eACA,gBAAC5I,GAAD,WACGu3B,EAAYvjB,GAAaujB,GAAa,GADzC,WAC8CznB,QAD9C,IAC8CA,GAD9C,UAC8CA,EAAUlG,cADxD,aAC8C,EAAkBhB,aAIlE,gBAAC5G,GAAD,WACE,gBAAChC,GAAD,kBAAa8P,QAAb,IAAaA,GAAb,UAAaA,EAAUhG,cAAvB,aAAa,EAAkBlB,OAA/B,eACA,gBAAC5I,GAAD,WACGw3B,EAAYxjB,GAAawjB,GAAa,GADzC,WAC8C1nB,QAD9C,IAC8CA,GAD9C,UAC8CA,EAAUhG,cADxD,aAC8C,EAAkBlB,mBCpDtEsL,GAAU3a,UAAOa,IAAV,uFAMPq9B,GAAkBl+B,UAAOa,IAAV,6MAWfs9B,GAAen+B,UAAOa,IAAV,iWAUL,qBAAGK,SAA2B,GAAM,MAC3B,gBAAGd,EAAH,EAAGA,MAAH,SAAUc,SAA2Bd,EAAM8D,IAAM9D,EAAM6D,OA+BvEm6B,GAAgB,GAEhBC,GAAe,CACnBxT,KAAM,EACND,MAAO0T,IACPC,YAAa,GACbC,aAAc,IAGD,SAASC,GAAT,GAAuD,IAA/BthC,EAA8B,EAA9BA,QAC/BiD,EAAQqb,KAGRlF,EAAqBoC,GAAa,CAACxb,IAAU,GAC7CuhC,EAAoB9sB,GAAU2E,EAASlG,OAAOlT,SAC9CwhC,EAAoB/sB,GAAU2E,EAAShG,OAAOpT,SAC9C6mB,EAAO,OAAGzN,QAAH,IAAGA,OAAH,EAAGA,EAAUyN,QAGpB3T,EAASvK,mBAAQ,WACrB,OAAOyQ,GAAYmoB,GAAqBC,EACpC,IAAIhiC,KAAM,EAAG+hC,EAAmBnoB,EAASlG,OAAOqc,eAChDp3B,IACH,CAACopC,EAAmBC,EAAmBpoB,IACpChG,EAASzK,mBAAQ,WACrB,OAAOyQ,GAAYooB,GAAqBA,EACpC,IAAIhiC,KAAM,EAAGgiC,EAAmBpoB,EAAShG,OAAOmc,eAChDp3B,IACH,CAACqpC,EAAmBpoB,IAnB4C,EtD+B9D,SACLpZ,GAEA,IAAMoB,EAAWC,cASjB,MAAO,CARMP,aAAY,SAACC,GAAD,OAAqBA,EAAMsa,MAAMlF,UAAUnW,MAC9CyhC,SAEEngC,uBACtB,SAACtB,EAAiByhC,GAAlB,OAA6CrgC,EAASuZ,GAAe,CAAEsiB,YAAaj9B,EAASyhC,gBAC7F,CAACrgC,KsDlBwCsgC,CAAgB1hC,GAtBQ,mBAsB5D2hC,EAtB4D,KAsB9CC,EAtB8C,OAuB3BlxB,mBAjCX,KAUsC,mBAuB5DmxB,EAvB4D,KAuB9CC,EAvB8C,KAwB7DC,EAA6B,EAAfF,EAAmB,EAxB4B,EA0BrCnxB,oBAAS,GA1B4B,mBA0B5DvD,EA1B4D,KA0BnD60B,EA1BmD,OA2BjCtxB,mBAAyBwwB,IA3BQ,mBA2B5De,EA3B4D,KA2BjDC,EA3BiD,KA6BnEttC,qBAAU,WAAM,4CACd,8BAAA4D,EAAA,sEACyBilC,GAA2Bz9B,EAAS6hC,GAD7D,iBACU3nC,EADV,EACUA,OAEN0nC,EAAmB5hC,EAAS9F,GAHhC,4CADc,wBAOTynC,GAAiBA,GAAgBA,EAAazB,eAAe7qC,OAAS0sC,IAP5D,WAAD,wBAQZhnC,KAED,CAACiF,EAAS2hC,EAAcC,EAAoBC,EAAcE,IAvCM,MAyCzBrxB,qBAzCyB,mBAyC5DpD,EAzC4D,KAyC7C60B,EAzC6C,KA0CnEvtC,qBAAU,WAAM,4CACd,4BAAA4D,EAAA,0DACMmpC,EADN,gCAE0BzoC,QAAQO,IAC5BkoC,EAAazB,eAAe5kC,IAA5B,uCAAgC,WAAO2V,EAAkB9b,GAAzB,mCAAAqD,EAAA,yDACxBmI,EAASsQ,EAAE4tB,UAAY8C,EAAazD,cACpCkE,EAAe5D,KAAS6D,mBAAmBpxB,EAAE4tB,SAC7CyD,EAAuBlpB,EAASyN,QAChC0b,EAAY,CAChB,CACExR,MAAO9f,EAAE4tB,QAAU2D,KAAcF,GACjCpD,eAAgBjuB,EAAEiuB,eAClBJ,aAAc3+B,KAAKsiC,SAASxxB,EAAE6tB,aAAc3+B,KAAKC,OAAO,QAE1D,CACE2wB,MAAO9f,EAAE4tB,QACTK,eAAgBjuB,EAAEiuB,eAClBJ,aAAc7tB,EAAE6tB,eAGd7rB,EACJC,GAAUE,GAAUyT,EAChB,IAAI6b,KAAKxvB,EAAQE,EAAQyT,EAASub,EAAcnxB,EAAE2tB,gBAAiB3tB,EAAE4tB,QAAS0D,QAC9EpqC,EACAwqC,EAAchB,EAAazB,eAAe/qC,EAAI,GAChDqpC,KAAS6D,mBAAmBV,EAAazB,eAAe/qC,EAAI,GAAG0pC,cAC/D1mC,EACEyqC,EAAkB1vB,EAAS2vB,KAAeC,cAAc5vB,EAAQjU,GAAYtC,iBAAcxE,GAE9F8a,IAAQ2vB,EAzBoB,kCAyBI3vB,EAAK8vB,gBAAgBH,EAAiBD,GAzB1C,sDAyByDxqC,EAzBzD,eAwBxB6qC,EAxBwB,KA2BxBC,EA3BwB,OA2BTD,QA3BS,IA2BTA,OA3BS,EA2BTA,EAAa,GAE5BvvB,EAAUwvB,EAAej0B,WAAWi0B,EAAaC,WAAal0B,WAAWiC,EAAEguB,QAAU,EACrFtrB,EAAUsvB,EAAej0B,WAAWi0B,EAAaC,WAAa,EA9BtC,kBAgCvB,CACLnS,MAAO57B,EACPorC,UAAW5/B,EACXwiC,gBAAiBn0B,WAAWiC,EAAE2tB,gBAAgBjiC,YAC9CoiC,OAAQ/vB,WAAWiC,EAAE8tB,QACrBE,OAAQjwB,WAAWiC,EAAEguB,QACrB4B,UAAWptB,EACXqtB,UAAWntB,IAvCiB,4CAAhC,0DAHN,cA+CW,QA7CDyvB,EAFV,cA+CW,IAAPA,KAAS9nC,KAAI,SAAC06B,EAAO7gC,GACfA,EAAI,IACNiuC,EAAQjuC,EAAI,GAAG0rC,UAAY7K,EAAM6K,UACjCuC,EAAQjuC,EAAI,GAAG2rC,UAAY9K,EAAM8K,cAIjCsC,IACEj2B,GACF60B,GAAW,GAEbG,EAAiBiB,IA1DvB,mDA8DW,IA9DX,6CADc,sBAkET91B,GAlEU,WAAD,wBAmEZ+1B,KAED,CAACxc,EAASvZ,EAAeH,EAASiM,EAASyN,QAAS8a,EAAczuB,EAAQE,IAE7E,IAAMkwB,EAAYrB,EAAUvU,KAAOuT,IAAiBgB,EAAUxU,MAAQwT,GAAgB,EAChFsC,EAAYtB,EAAUvU,KAAOuT,GAAgB,EAE7CuC,EAAeliC,uBAAY,YAC9BgiC,GACCpB,EAAa,6BACRD,GADO,IAEVvU,KAAMuU,EAAUvU,KAAOuT,GACvBxT,MAAOwU,EAAUxU,MAAQwT,QAE5B,CAACgB,EAAWqB,IAETG,EAAgBniC,uBAAY,WAC5BiiC,GACFvB,GAAW,GACXF,EAAgBD,EAAeZ,IAC/BkB,OAAiBhqC,GACjB+pC,EAAa,6BACRD,GADO,IAEVvU,KAAM,EACND,MAAOsU,MAGTG,EAAa,6BACRD,GADO,IAEVvU,KAAMuU,EAAUvU,KAAOuT,GACvBxT,MAAOwU,EAAUxU,MAAQwT,QAG5B,CAACc,EAAawB,EAAW1B,EAAcI,IAEpCyB,EAAa/6B,mBAAQ,WACzB,GAAI2E,EACF,OAAOA,EAAc0C,MAAMiyB,EAAUvU,KAAMuU,EAAUxU,SAGtD,CAACngB,EAAe20B,EAAUvU,KAAMuU,EAAUxU,QAO7C,GAJA74B,qBAAU,WACRutC,OAAiBhqC,KAChB,CAAC6H,KAEC2hC,EACH,OAAO,eAAC3R,GAAD,IAGT,IAAMiD,EAAY,SAAC,GAYZ,IAXLlB,EAWI,EAXJA,EACAmB,EAUI,EAVJA,EACAj8B,EASI,EATJA,MACAC,EAQI,EARJA,OACAE,EAOI,EAPJA,KAQA,OACE,6BACE,uBAAM26B,EAAGA,EAAGmB,EAAGA,EAAG97B,KAAMA,EAAMH,MAAOA,EAAOC,OAAQA,EAAQi8B,GAAG,SAIrE,OACE,gBAAC,GAAD,WACIhmB,EAwCA,eAAC6iB,GAAD,IAvCA,eAAC1C,GAAA,EAAD,CAAqBr2B,MAAM,OAAOC,OAAO,OAAzC,SACE,gBAACk8B,GAAA,EAAD,CACEn8B,MAAO,IACPC,OAAQ,IACRgD,KAAMwpC,EACNhmB,OAAQ,CACN8P,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,IARZ,UAWE,eAAC,KAAD,CACEjO,QAAS,SAAC1oB,GAAD,OACP,eAAC,GAAD,CAAeopC,WAAYppC,EAAOoiB,SAAUA,EAAUwnB,aAAcxnB,EAAS0N,iBAGjF,eAACoH,GAAA,EAAD,CAAOyV,UAAU,EAAM7iB,MAAM,IAC7B,gBAACuS,GAAA,EAAD,CACElF,QAAQ,kBACR/2B,KAAK,UACLwsC,mBAAmB,EACnBtQ,MAAO,SAACt8B,GAEN,OAAO,eAACi8B,EAAD,CAAW/7B,OAAQF,EAAME,OAAQD,MAAOD,EAAMC,MAAO86B,EAAG/6B,EAAM+6B,EAAGmB,EAAGl8B,EAAMk8B,EAAG97B,KAAMJ,EAAMI,QANpG,iBASGssC,QATH,IASGA,OATH,EASGA,EAAYpoC,KAAI,SAAC06B,EAAOjF,GACvB,OAAO,eAAC8S,GAAA,EAAD,CAA4BzsC,KAAM4+B,EAAMuK,UAAYt9B,EAAM2E,MAAQ3E,EAAMa,OAAxE,eAAmBitB,OAE5B,eAAC+S,GAAA,EAAD,CACE3V,QAAQ,kBACR4V,SAAS,SACTrkB,QAAS,SAAC1oB,GAAD,OAAW,eAACmpC,GAAD,CAAmBC,WAAYppC,EAAOoiB,SAAUA,EAAUlf,KAAMwpC,eAQ9F,gBAAC3C,GAAD,WACE,eAACC,GAAD,CAAcj9B,UAAU,EAAOuB,QAASm+B,EAAxC,eAGA,eAACzC,GAAD,CAAcj9B,SAAUu/B,EAAWh+B,QAASk+B,EAA5C,qBC1RR,IA6BKvL,G,eA7BCkD,GAAgBt4B,UAAOa,IAAV,2NAWbsgC,GAAcnhC,kBAAOsb,GAAPtb,CAAH,sIASX8I,GAAgB9I,kBAAOyI,GAAPzI,CAAH,sCACf,qBAAGI,MAAkB0C,WAAWI,UAA/B,QAAD,4HAeW,SAASkvB,GAAT,GAI+B,IAAD,IAF/Bj1B,EAE+B,EAH3C0kB,MACEloB,OAAUwD,QAGZpL,qBAAU,WACRyQ,OAAO6uB,SAAS,EAAG,KAClB,IAGH,IAAMhxB,EAAkBq0B,KAClBt0B,EAAQqb,KAGRlF,EAAWoC,GAAa,CAACxb,IAAU,GACnCmvB,EvDlBD,SAA0BnvB,GAC/B,IAAMoB,EAAWC,cACX4R,EAAOnS,aAAY,SAACC,GAAD,OAAqBA,EAAMsa,MAAMlF,UAAUnW,MAC9DmvB,EAAS,OAAGlc,QAAH,IAAGA,OAAH,EAAGA,EAAMkc,UAHsD,EAIpDze,oBAAS,GAJ2C,mBAIvErU,EAJuE,KAIhEwU,EAJgE,KAsB9E,OAhBAjc,qBAAU,WAAM,4CACd,gCAAA4D,EAAA,sEACgCqiB,GAAmB7a,GADnD,gBACU3D,EADV,EACUA,MAAOnC,EADjB,EACiBA,MACVmC,GAASnC,GACZkH,EAASqZ,GAAoB,CAAEwiB,YAAaj9B,EAASmvB,UAAWj1B,KAE9DmC,GACFwU,EAASxU,GANb,4CADc,sBAUT8yB,GAAc9yB,GAVJ,WAAD,wBAWZtB,KAED,CAACiF,EAASoB,EAAU/E,EAAO8yB,IAGvBA,EuDJW8U,CAAiBjkC,GAC7BqvB,EvDUD,SAA6BrvB,GAClC,IAAMoB,EAAWC,cACX4R,EAAOnS,aAAY,SAACC,GAAD,OAAqBA,EAAMsa,MAAMlF,UAAUnW,MAC9DqvB,EAAY,OAAGpc,QAAH,IAAGA,OAAH,EAAGA,EAAMoc,aAHmD,EAIpD3e,oBAAS,GAJ2C,mBAIvErU,EAJuE,KAIhEwU,EAJgE,KAqB9E,OAfAjc,qBAAU,WAAM,4CACd,gCAAA4D,EAAA,sEACgCwiB,GAAsBhb,GADtD,gBACU3D,EADV,EACUA,MAAOnC,EADjB,EACiBA,KACXmC,EACFwU,GAAS,GACA3W,GACTkH,EAASsZ,GAAuB,CAAEuiB,YAAaj9B,EAASqvB,aAAcn1B,KAL1E,4CADc,sBASTm1B,GAAiBhzB,GATP,WAAD,wBAUZtB,KAED,CAACiF,EAASoB,EAAU/E,EAAOgzB,IAGvBA,EuD/Bc6U,CAAoBlkC,GAZE,EAcnB0Q,mBAASunB,GAAU2E,KAdA,mBAcpChB,EAdoC,KAc9BC,EAd8B,OAeLnrB,qBAfK,mBAepCorB,EAfoC,KAevBC,EAfuB,OAgBPrrB,qBAhBO,mBAgBpCsrB,EAhBoC,KAgBxBC,EAhBwB,KAkBrCtH,EAAmBhsB,mBAAQ,WAC/B,OAAIwmB,EACKA,EAAU7zB,KAAI,SAACs5B,GACpB,MAAO,CACLpjB,KAAMihB,GAAWmC,EAAI/lB,MACrB6F,MAAOkgB,EAAI3lB,wBAIR,KAER,CAACkgB,IAEE0F,EAAsBlsB,mBAAQ,WAClC,OAAIwmB,EACKA,EAAU7zB,KAAI,SAACs5B,GACpB,MAAO,CACLpjB,KAAMihB,GAAWmC,EAAI/lB,MACrB6F,MAAOkgB,EAAI7lB,cAIR,KAER,CAACogB,IA1CuC,EA6CR3sB,KA7CQ,mBA6CpCC,EA7CoC,KA6CxBR,EA7CwB,KA+C3C,OACE,gBAACqwB,GAAD,WACE,eAACC,GAAD,CAAkBrvB,gBAAiBA,IAClCkW,EACC,gBAAC0C,GAAD,CAAYrQ,IAAI,OAAhB,UACE,gBAACH,GAAD,WACE,gBAACE,GAAD,CAASC,IAAI,MAAb,UACE,eAAC7I,GAAD,CAAoB0iB,GAAG,IAAvB,SACE,eAAChc,GAAD,wBAEF,eAAC1G,GAAD,CAAoB0iB,GAAG,SAAvB,SACE,eAAChc,GAAD,wBAEF,eAACA,GAAD,kBACA,eAACA,GAAD,qBAAiB8P,EAASlG,OAAOhB,OAAjC,cAA6CkH,EAAShG,OAAOlB,OAA7D,YAAuE2D,GACrEuD,EAASyN,SADX,UAIF,gBAACnb,GAAD,CAAUD,IAAI,OAAOR,MAAM,SAA3B,UACE,eAAC,GAAD,CAAW7T,KAAMqL,EAAW8M,SAASvP,GAAUsF,QAAS,kBAAMrD,EAAajC,MAC3E,eAAC,GAAD,CAAoB2E,KAAMsQ,GAAiB,EAAGjV,EAAS,WAAvD,SACE,eAAC,KAAD,CAAczJ,OAAQ0M,EAAMe,MAAOL,KAAM,OAAQ8Y,MAAO,CAAE5Y,WAAY,kBAI5E,gBAAC,GAAD,CAAeoH,MAAM,WAArB,UACE,gBAAC6Q,GAAD,CAAYrQ,IAAI,KAAhB,UACE,gBAACC,GAAD,CAAUD,IAAI,MAAd,UACE,eAACoS,GAAD,CAAoBC,SAAU1E,EAASlG,OAAOlT,QAAS+d,SAAU3E,EAAShG,OAAOpT,QAAS2D,KAAM,KAChG,eAAC2F,GAAD,CACEod,GAAG,MACHoO,GAAG,MACH5wB,SAAS,OAHX,oBAIMkV,EAASlG,OAAOhB,OAJtB,cAIkCkH,EAAShG,OAAOlB,OAJlD,OAKA,eAACmM,GAAD,UAAYxI,GAAeuD,EAASyN,cAEtC,gBAAC,GAAD,WACE,eAACjkB,GAAD,CAAoB0iB,GAAI,WAAalM,EAASlG,OAAOlT,QAArD,SACE,eAACgkC,GAAD,UACE,gBAACt4B,GAAD,WACE,eAAC8Q,GAAD,CAAcxc,QAASoZ,EAASlG,OAAOlT,QAAS2D,KAAM,SACtD,eAAC2F,GAAD,CAAYpF,SAAS,OAAOwiB,GAAG,MAAMjK,MAAO,CAAEmK,WAAY,UAAY3vB,MAAO,cAA7E,qBACQmiB,EAASlG,OAAOhB,OADxB,eACqCoL,GAAalE,EAAS+qB,YAAa,GADxE,YAEI/qB,EAAShG,OAAOlB,iBAM1B,eAACtP,GAAD,CAAoB0iB,GAAI,WAAalM,EAAShG,OAAOpT,QAArD,SACE,eAACgkC,GAAD,CAAatd,GAAG,OAAhB,SACE,gBAAChb,GAAD,WACE,eAAC8Q,GAAD,CAAcxc,QAASoZ,EAAShG,OAAOpT,QAAS2D,KAAM,SACtD,eAAC2F,GAAD,CAAYpF,SAAS,OAAOwiB,GAAG,MAAMjK,MAAO,CAAEmK,WAAY,UAAY3vB,MAAO,cAA7E,qBACQmiB,EAAShG,OAAOlB,OADxB,eACqCoL,GAAalE,EAAS0N,YAAa,GADxE,YAEI1N,EAASlG,OAAOhB,uBAQ9B,eAAC4J,GAAD,CAAYrQ,IAAI,KAAhB,SACE,gBAACC,GAAD,WACE,eAAC,GAAD,CACE/G,KAAI,wCAAmCyU,EAASlG,OAAOlT,QAAnD,YAA8DoZ,EAAShG,OAAOpT,QAA9E,YAAyFoZ,EAASyN,SADxG,SAGE,eAAC/H,GAAD,CAAY7nB,MAAM,QAAQ69B,GAAG,OAAOrY,MAAO,CAAEvlB,OAAQ,QAArD,SACE,gBAACoU,GAAD,WACE,eAAC,KAAD,CAAU3H,KAAM,KAChB,sBAAK8Y,MAAO,CAAEyL,QAAS,OAAQyU,WAAY,UAA3C,kCAIN,eAAC,GAAD,CACEh4B,KAAI,iDAA4CyU,EAASlG,OAAOlT,QAA5D,2BAAsFoZ,EAAShG,OAAOpT,SAD5G,SAGE,eAAC2e,GAAD,CAAe1nB,MAAM,QAAQwlB,MAAO,CAAEvlB,OAAQ,QAA9C,6BAOR,gBAAC,GAAD,WACE,eAACknB,GAAD,UACE,gBAACtC,GAAD,CAAYrQ,IAAI,KAAhB,UACE,eAAC0S,GAAD,CAAUhT,QAAQ,OAAlB,SACE,gBAAC2Q,GAAD,CAAYrQ,IAAI,KAAhB,UACE,eAACnC,GAAD,kCACA,gBAACgC,GAAD,WACE,gBAACI,GAAD,WACE,eAAC8Q,GAAD,CAAcxc,QAASoZ,EAASlG,OAAOlT,QAAS2D,KAAM,SACtD,eAAC2F,GAAD,CAAYpF,SAAS,OAAOwiB,GAAG,MAA/B,SACGtN,EAASlG,OAAOhB,YAGrB,eAAC5I,GAAD,CAAYpF,SAAS,OAArB,SAA6BoZ,GAAalE,EAASynB,gBAErD,gBAACv1B,GAAD,WACE,gBAACI,GAAD,WACE,eAAC8Q,GAAD,CAAcxc,QAASoZ,EAAShG,OAAOpT,QAAS2D,KAAM,SACtD,eAAC2F,GAAD,CAAYpF,SAAS,OAAOwiB,GAAG,MAA/B,SACGtN,EAAShG,OAAOlB,YAGrB,eAAC5I,GAAD,CAAYpF,SAAS,OAArB,SAA6BoZ,GAAalE,EAAS0nB,qBAIzD,gBAAChlB,GAAD,CAAYrQ,IAAI,MAAhB,UACE,eAACnC,GAAD,CAAWC,WAAY,IAAvB,iBACA,eAACD,GAAD,CAAYpF,SAAS,OAArB,SAA6ByY,GAAmBvD,EAASM,UACzD,eAACrZ,GAAD,CAASqU,MAAO0E,EAASO,kBAE3B,gBAACmC,GAAD,CAAYrQ,IAAI,MAAhB,UACE,eAACnC,GAAD,CAAWC,WAAY,IAAvB,wBACA,eAACD,GAAD,CAAYpF,SAAS,OAArB,SAA6ByY,GAAmBvD,EAASrK,aACzD,eAAC1O,GAAD,CAASqU,MAAO0E,EAASI,qBAE3B,gBAACsC,GAAD,CAAYrQ,IAAI,MAAhB,UACE,eAACnC,GAAD,CAAWC,WAAY,IAAvB,sBACA,eAACD,GAAD,CAAYpF,SAAS,OAArB,SACGyY,GAAmBvD,EAASrK,WAAaqK,EAASyN,QAAU,gBAKrE,gBAACzI,GAAD,WACE,gBAAC9S,GAAD,CAAYL,MAAM,aAAlB,UACE,gBAAC6Q,GAAD,WACE,eAACxS,GAAD,CAAYpF,SAAS,OAAOhN,OAAO,OAAnC,SACE,gBAACy5B,GAAD,WACGmL,EACGnf,GAAmBmf,GACnBF,IAAS3D,GAAU2E,IACnBjgB,GAAkB,UAACkY,EAAoBA,EAAoBx/B,OAAS,UAAlD,aAAC,EAAqDqf,OACxEknB,IAAS3D,GAAUmM,QACnB,GACAznB,GAAkB,UAACgY,EAAiBA,EAAiBt/B,OAAS,UAA5C,aAAC,EAA+Cqf,OAAQ,SAGlF,eAACpL,GAAD,CAAWpS,OAAO,OAAOgN,SAAS,OAAlC,SACG83B,EAAa,eAACrL,GAAD,UAAYqL,IAA0B,QAGxD,gBAACjE,GAAD,CAAe9gC,MAAM,QAArB,UACE,eAAC+gC,GAAD,CACErQ,SAAUiU,IAAS3D,GAAU2E,IAC7B14B,SAAS,OACToB,QAAS,kBAAOs2B,IAAS3D,GAAU2E,IAAMf,EAAQ5D,GAAU4E,KAAOhB,EAAQ5D,GAAU2E,MAHtF,oBAOA,eAAC5E,GAAD,CACErQ,SAAUiU,IAAS3D,GAAU4E,IAC7B34B,SAAS,OACToB,QAAS,kBAAOs2B,IAAS3D,GAAU4E,IAAMhB,EAAQ5D,GAAUmM,SAAWvI,EAAQ5D,GAAU4E,MAH1F,iBAOA,eAAC7E,GAAD,CACErQ,SAAUiU,IAAS3D,GAAUmM,QAC7BlgC,SAAS,OACToB,QAAS,kBAAOs2B,IAAS3D,GAAUmM,QAAUvI,EAAQ5D,GAAU2E,KAAOf,EAAQ5D,GAAUmM,UAH1F,6BASHxI,IAAS3D,GAAU4E,IAClB,eAAC,GAAD,CACE3iC,KAAMy6B,EACN5H,SAAUkP,EACV5yB,MAAOnG,EACPkqB,UAAW,IACXhK,SAAU2Y,EACVrnB,MAAOonB,EACP32B,MAAO62B,IAEPJ,IAAS3D,GAAU2E,IACrB,eAAC,GAAD,CACE1iC,KAAM26B,EACNxrB,MAAOnG,EACPkqB,UAAW,IACXhK,SAAU2Y,EACVhP,SAAUkP,EACVvnB,MAAOonB,EACP32B,MAAO62B,IAGT,eAACsF,GAAD,CAActhC,QAASA,UAI7B,eAACsJ,GAAD,CAAWpF,SAAS,OAApB,0BACA,eAACka,GAAD,UACGiR,EAAe,eAACuE,GAAD,CAAkBvE,aAAcA,IAAmB,eAAC,GAAD,CAAaj4B,MAAM,SAI1F,eAAC44B,GAAD,Q,SApQHiI,O,aAAAA,I,aAAAA,I,iBAAAA,I,sBAAAA,Q,KCtCL,IAAMoM,GAAaxhC,UAAOa,IAAV,+IAQV4gC,GAAgBzhC,UAAOa,IAAV,2HACf,qBAAGT,MAAkBgG,oBAOnBs7B,GAAc1hC,UAAOa,IAAV,0SAYb,qBAAGT,MAAkB0C,WAAWI,UAA/B,QAAD,2EAYEy+B,GAAW3hC,UAAOa,IAAV,mDAIC,SAAS+gC,KAAM,MAEE/zB,oBAAS,GAFX,mBAErBvD,EAFqB,KAEZ60B,EAFY,KAG5BptC,qBAAU,WACRkI,YAAW,kBAAMklC,GAAW,KAAQ,QACnC,IALyB,MAQHxgC,KAAlBC,EARqB,oBAU5B,OACE,gBAAC,WAAD,CAAUijC,SAAU,KAApB,UACE,eAAC,IAAD,CAAOC,UAAWnwC,IAClB,eAAC,IAAD,CAAOmwC,UAAWlY,KACjBtf,EACC,eAAC,GAAD,CAAa/V,MAAM,KACY,IAA7BqK,EAAeC,UACjB,eAAC2iC,GAAD,UACE,eAACE,GAAD,UACE,eAACnmB,GAAD,CAAc3B,MAAO,CAAEmoB,SAAU,SAAjC,SACE,gBAACt7B,GAAD,mGACwF,IACtF,eAAC5E,GAAD,CAAcC,KAAK,sEAAnB,4BAQR,gBAAC0/B,GAAD,WACE,eAACvc,GAAD,IACA,gBAACwc,GAAD,WACE,eAACz+B,GAAD,UACE,eAAC,GAAD,MAEF,eAAC4hB,GAAD,OAEF,gBAAC8c,GAAD,WACE,eAACrY,GAAD,IACA,gBAAC,IAAD,WACE,eAAC,IAAD,CAAO2Y,OAAK,EAACC,QAAM,EAACtqC,KAAK,IAAImqC,UAAW1Q,KACxC,eAAC,IAAD,CAAO4Q,OAAK,EAACC,QAAM,EAACtqC,KAAK,YAAYmqC,UAAW3P,KAChD,eAAC,IAAD,CAAO6P,OAAK,EAACC,QAAM,EAACtqC,KAAK,SAASmqC,UAAWI,KAC7C,eAAC,IAAD,CAAOF,OAAK,EAACC,QAAM,EAACtqC,KAAK,UAAUmqC,UAAW1O,KAC9C,eAAC,IAAD,CAAO4O,OAAK,EAACC,QAAM,EAACtqC,KAAK,mBAAmBmqC,UAAW7H,KACvD,eAAC,IAAD,CAAO+H,OAAK,EAACC,QAAM,EAACtqC,KAAK,kBAAkBmqC,UAAW1P,QAExD,eAACuP,GAAD,a,cCzFNtD,GAAiC,CACrC8D,YAAa,GACb3Y,UAAW,GACXprB,UAAW,KACXQ,eAAgB,CACdC,UAAW,KACXC,iBAAaxJ,IAIF8sC,eAAc/D,IAAc,SAACgE,GAAD,OACzCA,EACGC,QAAQztC,GAAmB,SAACqJ,EAAO8oB,GAAY,IAAD,EACZA,EAAO8E,QAAhC91B,EADqC,EACrCA,QAASmsC,EAD4B,EAC5BA,YACyB,kBAA/BjkC,EAAMikC,YAAYnsC,GAC3BkI,EAAMikC,YAAYnsC,GAAWmsC,EAE7BjkC,EAAMikC,YAAYnsC,GAAW+2B,KAAKwV,IAAIJ,EAAajkC,EAAMikC,YAAYnsC,OAGxEssC,QAAQvtC,GAAc,SAACmJ,EAAO8oB,GAC7B9oB,EAAME,UAAY4oB,EAAO8E,WAE1BwW,QAAQttC,GAAU,SAACkJ,EAAD,GAAkE,IAAD,IAAvD4tB,QAAWjP,EAA4C,EAA5CA,QAASnqB,EAAmC,EAAnCA,IAAmC,IAA9B61B,qBAA8B,MAAd,KAAc,EAClFrqB,EAAMsrB,WAAa92B,EAAMwL,EAAMsrB,UAAU7V,QAAO,SAAC6uB,GAAD,OAAWA,EAAM9vC,MAAQA,KAAOwL,EAAMsrB,WAAW7e,OAAO,CACtG,CACEjY,IAAKA,GAAO+vC,cACZjmB,MAAM,EACNK,UACA0L,sBAIL+Z,QAAQrtC,GAAa,SAACiJ,EAAD,GAAkC,IAAbxL,EAAY,EAAvBo5B,QAAWp5B,IACzCwL,EAAMsrB,UAAU3wB,SAAQ,SAACgS,GACnBA,EAAEnY,MAAQA,IACZmY,EAAE2R,MAAO,SAId8lB,QAAQptC,GAAsB,SAACgJ,EAAD,GAAqD,IAAD,IAA1C4tB,QAAWjtB,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,YAC7DZ,EAAMU,eAAiB,CACrBC,YACAC,qBC9DK4jC,GAAgB5tC,YAAmB,wBCY1Cwd,GAAmB,kBAAM,IAAIC,MAAOC,WA6B1C,SAASmwB,GAAQnyB,EAAuBC,GACtC,MAAM,GAAN,OAAUD,EAAV,YAA2BC,GAGtB,IAAM4tB,GAA0B,CACrC34B,cAAc,EACdD,iBAAiB,EACjB4N,OAAQ,GACRuvB,MAAO,GACPnjC,YAAa,GACbG,WAAY,GACZ0M,UAAWgG,KACXxS,mBAAmB,GAGNsiC,eAAc/D,IAAc,SAACgE,GAAD,OACzCA,EACGC,QAAQI,IAAe,SAACxkC,GACvBA,EAAM2kC,2BAA6BvwB,QAEpCgwB,QAAQtjC,IAAoB,SAACd,EAAO8oB,GACnC9oB,EAAMwH,aAAeshB,EAAO8E,QAAQpmB,aACpCxH,EAAMoO,UAAYgG,QAEnBgwB,QAAQvjC,IAAuB,SAACb,EAAO8oB,GACtC9oB,EAAMuH,gBAAkBuhB,EAAO8E,QAAQrmB,gBACvCvH,EAAMoO,UAAYgG,QAEnBgwB,QAAQrjC,IAAoB,SAACf,EAAD,GAA8C,IAAzB4kC,EAAwB,EAAnChX,QAAWgX,gBAChD5kC,EAAMmV,OAAOyvB,EAAgB9sC,SAAWkI,EAAMmV,OAAOyvB,EAAgB9sC,UAAY,GACjFkI,EAAMmV,OAAOyvB,EAAgB9sC,SAAS8sC,EAAgB3lC,SAAW2lC,EACjE5kC,EAAMoO,UAAYgG,QAEnBgwB,QAAQpjC,IAAuB,SAAChB,EAAD,GAA+C,IAAD,IAApC4tB,QAAW3uB,EAAyB,EAAzBA,QAASnH,EAAgB,EAAhBA,QAC5DkI,EAAMmV,OAAOrd,GAAWkI,EAAMmV,OAAOrd,IAAY,UAC1CkI,EAAMmV,OAAOrd,GAASmH,GAC7Be,EAAMoO,UAAYgG,QAEnBgwB,QAAQnjC,IAAe,SAACjB,EAAD,GAAsC,IAAjBf,EAAgB,EAA3B2uB,QAAW3uB,QAC3C,GAAKe,EAAMuB,aAAgBvB,EAAMuB,YAAYiN,SAASvP,IAMjD,GAAIe,EAAMuB,aAAevB,EAAMuB,YAAYiN,SAASvP,GAAU,CACjE,IAAMskB,EAAYvjB,EAAMuB,YAAYkU,QAAO,SAACub,GAAD,OAAOA,IAAM/xB,KACxDe,EAAMuB,YAAcgiB,OAR0C,CAAC,IAAD,EACxDA,EAAS,UAAGvjB,EAAMuB,mBAAT,QAAwB,GACvCgiB,EAAUznB,KAAKmD,GACfe,EAAMuB,YAAcgiB,MAQvB6gB,QAAQljC,IAAc,SAAClB,EAAD,GAAsC,IAAjBf,EAAgB,EAA3B2uB,QAAW3uB,QAC1C,GAAKe,EAAM0B,YAAe1B,EAAM0B,WAAW8M,SAASvP,IAI7C,GAAIe,EAAM0B,YAAc1B,EAAM0B,WAAW8M,SAASvP,GAAU,CACjE,IAAM6kB,EAAW9jB,EAAM0B,WAAW+T,QAAO,SAACub,GAAD,OAAOA,IAAM/xB,KACtDe,EAAM0B,WAAaoiB,OANyC,CAAC,IAAD,EACtDA,EAAQ,UAAG9jB,EAAM0B,kBAAT,QAAuB,GACrCoiB,EAAShoB,KAAKmD,GACde,EAAM0B,WAAaoiB,MAMtBsgB,QAAQjjC,IAAmB,SAACnB,EAAD,GAA6C,IAAxB6kC,EAAuB,EAAlCjX,QAAWiX,eAC/C,GACEA,EAAe1yB,OAAOra,UAAY+sC,EAAexyB,OAAOva,SACxD+sC,EAAe1yB,OAAOlT,UAAY4lC,EAAexyB,OAAOpT,QACxD,CACA,IAAMnH,EAAU+sC,EAAe1yB,OAAOra,QACtCkI,EAAM0kC,MAAM5sC,GAAWkI,EAAM0kC,MAAM5sC,IAAY,GAC/CkI,EAAM0kC,MAAM5sC,GAAS2sC,GAAQI,EAAe1yB,OAAOlT,QAAS4lC,EAAexyB,OAAOpT,UAAY4lC,EAEhG7kC,EAAMoO,UAAYgG,QAEnBgwB,QAAQhjC,IAAsB,SAACpB,EAAD,GAAoE,IAAD,IAAzD4tB,QAAW91B,EAA8C,EAA9CA,QAASgtC,EAAqC,EAArCA,cAAeC,EAAsB,EAAtBA,cACtE/kC,EAAM0kC,MAAM5sC,YAEPkI,EAAM0kC,MAAM5sC,GAAS2sC,GAAQK,EAAeC,WAC5C/kC,EAAM0kC,MAAM5sC,GAAS2sC,GAAQM,EAAeD,KAErD9kC,EAAMoO,UAAYgG,QAEnBgwB,QAAQ/iC,IAAkB,SAACrB,GAC1BA,EAAM4B,mBAAqB5B,EAAM4B,wBC3GjCojC,GAAe,mFAGRC,GAA+B,CAC1CD,IAD0C,OAjBG,IAuBlCE,GAAqC,CAACF,ICD7CG,GAA4B,CAChC7pC,MAAO,KACPF,QAAS,KACTgqC,iBAAkB,KAClBC,cAAe,MAKXlF,GAA2B,CAC/BmF,kCAAmCL,GACnCM,MAAM,gBACDN,GAAsB/pC,QAAqC,SAACC,EAAMotB,GAEnE,OADAptB,EAAKotB,GAAW4c,GACThqC,IACN,KAELqqC,eAAgBN,IAGHhB,eAAc/D,IAAc,SAACgE,GAAD,OACzCA,EACGC,QAAQ/c,GAAeC,SAAS,SAACtnB,EAAD,GAA6C,IAAD,IAAlC4tB,QAAW6X,EAAuB,EAAvBA,UAAWpsC,EAAY,EAAZA,IAC/D2G,EAAMulC,MAAMlsC,GAAZ,2BACE+B,QAAS,KACTiqC,cAAe,MACZrlC,EAAMulC,MAAMlsC,IAHjB,IAIE+rC,iBAAkBK,EAClBnqC,MAAO,UAGV8oC,QAAQ/c,GAAeE,WAAW,SAACvnB,EAAD,GAAwD,IAAD,QAA7C4tB,QAAW6X,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,UAAWrsC,EAAY,EAAZA,IACtE+B,EAAO,UAAG4E,EAAMulC,MAAMlsC,UAAf,aAAG,EAAkB+B,QAC5BgqC,EAAgB,UAAGplC,EAAMulC,MAAMlsC,UAAf,aAAG,EAAkB+rC,iBAG3C,GAAIhqC,EAAS,CAGX,GAFoBuqC,aAAkBvqC,EAAQ2sB,QAAS2d,EAAU3d,WAE7C6d,KAAeC,KAAM,OAChB,OAArBT,GAA6BA,IAAqBK,IACpDzlC,EAAMulC,MAAMlsC,GAAZ,6BACK2G,EAAMulC,MAAMlsC,IADjB,IAEE+rC,iBAAkB,KAClB9pC,MAAO,KACPF,QAASA,EACTiqC,cAAeK,SAGd,CAEwC,IAAD,EAA5C,GAAIR,GAAyB12B,SAASnV,GACpC,UAAA2G,EAAMwlC,sBAAN,SAAsB1pC,KAAKzC,GAG7B2G,EAAMulC,MAAMlsC,GAAZ,6BACK2G,EAAMulC,MAAMlsC,IADjB,IAEE+rC,iBAAkB,KAClB9pC,MAAO,KACPF,QAASsqC,EACTL,cAAe,WAIpBjB,QAAQ/c,GAAeG,UAAU,SAACxnB,EAAD,GAA2D,IAAD,MAAhD4tB,QAAWv0B,EAAqC,EAArCA,IAAKosC,EAAgC,EAAhCA,UAAWK,EAAqB,EAArBA,cACjE,UAAA9lC,EAAMulC,MAAMlsC,UAAZ,eAAkB+rC,oBAAqBK,IAK3CzlC,EAAMulC,MAAMlsC,GAAZ,6BACK2G,EAAMulC,MAAMlsC,IADjB,IAEE+rC,iBAAkB,KAClB9pC,MAAOwqC,EACP1qC,QAAS,KACTiqC,cAAe,WAGlBjB,QAAQ3c,IAAS,SAACznB,EAAD,GAA8B,IAAX3G,EAAU,EAAnBu0B,QACrB5tB,EAAMulC,MAAMlsC,KACf2G,EAAMulC,MAAMlsC,GAAO8rC,OAGtBf,QAAQ1c,IAAY,SAAC1nB,EAAD,GAA8B,IAAX3G,EAAU,EAAnBu0B,QACzB5tB,EAAMulC,MAAMlsC,WACP2G,EAAMulC,MAAMlsC,GAGjB2G,EAAMwlC,gBAAkBxlC,EAAMwlC,eAAeh3B,SAASnV,KACxD2G,EAAMwlC,eAAiBxlC,EAAMwlC,eAAe/vB,QAAO,SAACswB,GAAD,OAAOA,IAAM1sC,SAGnE+qC,QAAQzc,IAAY,SAAC3nB,EAAD,GAA8B,IAAX3G,EAAU,EAAnBu0B,QACxB5tB,EAAMulC,MAAMlsC,KACf2G,EAAMulC,MAAMlsC,GAAO8rC,IAGjBnlC,EAAMwlC,iBAAmBxlC,EAAMwlC,eAAeh3B,SAASnV,IACzD2G,EAAMwlC,eAAe1pC,KAAKzC,GAGvB2G,EAAMwlC,iBACTxlC,EAAMwlC,eAAiB,CAACnsC,OAG3B+qC,QAAQxc,IAAa,SAAC5nB,EAAD,GAA8B,IAAX3G,EAAU,EAAnBu0B,QAC1B5tB,EAAMwlC,gBAAkBxlC,EAAMwlC,eAAeh3B,SAASnV,KACxD2G,EAAMwlC,eAAiBxlC,EAAMwlC,eAAe/vB,QAAO,SAACswB,GAAD,OAAOA,IAAM1sC,SAGnE+qC,QAAQvc,IAAkB,SAAC7nB,EAAD,GAA8B,IAAD,EAAV3G,EAAU,EAAnBu0B,QACnC,KAAI,UAAC5tB,EAAMulC,MAAMlsC,UAAb,aAAC,EAAkBgsC,eACrB,MAAM,IAAIttC,MAAM,oDAElBiI,EAAMulC,MAAMlsC,GAAZ,6BACK2G,EAAMulC,MAAMlsC,IADjB,IAEEgsC,cAAe,KACfjqC,QAAS4E,EAAMulC,MAAMlsC,GAAKgsC,mBAG7BjB,QAAQI,IAAe,SAACxkC,GAEvB,GAAKA,EAAMslC,mCAGJ,GAAItlC,EAAMslC,kCAAmC,CAClD,IAAMU,EAAqBhmC,EAAMslC,kCAAkCpqC,QACjE,SAAC+qC,EAAGC,GAAJ,OAAUD,EAAElH,IAAImH,KAChB,IAAIC,KAEAC,EAAoBnB,GAAsB/pC,QAAoB,SAAC+qC,EAAGC,GAAJ,OAAUD,EAAElH,IAAImH,KAAI,IAAIC,KAE5FlB,GAAsBtqC,SAAQ,SAAC4tB,GACxByd,EAAmBK,IAAI9d,KAC1BvoB,EAAMulC,MAAMhd,GAAW4c,OAI3BnlC,EAAMslC,kCAAkC3qC,SAAQ,SAAC4tB,GAC1C6d,EAAkBC,IAAI9d,WAClBvoB,EAAMulC,MAAMhd,YAjBvBvoB,EAAMulC,MAAQpF,GAAaoF,MAC3BvlC,EAAMwlC,eAAiBrF,GAAaqF,eAqBtCxlC,EAAMslC,kCAAoCL,GAGrCjlC,EAAMwlC,iBACTxlC,EAAMwlC,eAAiBN,GAGvBA,GAAyB3qC,KAAI,SAACguB,GAI5B,OAHKvoB,EAAMulC,MAAMhd,KACfvoB,EAAMulC,MAAMhd,GAAW4c,KAElB,YC/KXmB,GAAgB,sBAChBC,GAAkB,gBACjB,SAASC,GAAU7xC,GACxB,IAAK2xC,GAAcG,KAAK9xC,EAAKsK,SAC3B,MAAM,IAAIlH,MAAJ,2BAA8BpD,EAAKsK,UAE3C,IAAKsnC,GAAgBE,KAAK9xC,EAAK+xC,UAC7B,MAAM,IAAI3uC,MAAJ,uBAA0BpD,EAAK+xC,WAEvC,MAAM,GAAN,OAAU/xC,EAAKsK,QAAf,YAA0BtK,EAAK+xC,UAmB1B,IAAMC,GAAwB/vC,YACnC,mCAEWgwC,GAA2BhwC,YACtC,sCAEWiwC,GAA2BjwC,YACtC,sCAEWkwC,GAAgClwC,YAI1C,2CACUmwC,GAAyBnwC,YAMnC,oCClBYstC,eAJsB,CACnC8C,YAAa,KAG4B,SAAC7C,GAAD,OACzCA,EACGC,QAAQuC,IAAuB,SAAC3mC,EAAD,GAAmF,IAAD,MAAxE4tB,QAAWqZ,EAA6D,EAA7DA,MAAOnvC,EAAsD,EAAtDA,QAAsD,IAA7CwnB,QAA6C,gBAAX,GAAW,GAAlC4nB,sBAAkC,MAAjB,EAAiB,EAC1GC,EAA6CnnC,EAAMonC,cACrDpnC,EAAMonC,cACLpnC,EAAMonC,cAAgB,GAC3BD,EAAUrvC,GAAV,UAAqBqvC,EAAUrvC,UAA/B,QAA2C,GAC3CmvC,EAAMtsC,SAAQ,SAAChG,GAAU,IAAD,IAChB0yC,EAAUb,GAAU7xC,GAC1BwyC,EAAUrvC,GAASuvC,GAAnB,UAA8BF,EAAUrvC,GAASuvC,UAAjD,QAA6D,GAC7DF,EAAUrvC,GAASuvC,GAASH,IAAkB,UAACC,EAAUrvC,GAASuvC,GAASH,UAA7B,QAAgD,GAAK,QAGtG9C,QACCwC,IACA,SAAC5mC,EAAD,GAAmF,IAAD,IAAxE4tB,QAAW91B,EAA6D,EAA7DA,QAASmvC,EAAoD,EAApDA,MAAoD,IAA7C3nB,QAA6C,gBAAX,GAAW,GAAlC4nB,sBAAkC,MAAjB,EAAiB,EAC1EC,EAA6CnnC,EAAMonC,cACrDpnC,EAAMonC,cACLpnC,EAAMonC,cAAgB,GAEtBD,EAAUrvC,IACfmvC,EAAMtsC,SAAQ,SAAChG,GACb,IAAM0yC,EAAUb,GAAU7xC,GACrBwyC,EAAUrvC,GAASuvC,IACnBF,EAAUrvC,GAASuvC,GAASH,KAEmB,IAAhDC,EAAUrvC,GAASuvC,GAASH,UACvBC,EAAUrvC,GAASuvC,GAASH,GAEnCC,EAAUrvC,GAASuvC,GAASH,YAKnC9C,QAAQyC,IAA0B,SAAC7mC,EAAD,GAAkE,IAAD,MAAvD4tB,QAAW91B,EAA4C,EAA5CA,QAASwvC,EAAmC,EAAnCA,oBAAqBL,EAAc,EAAdA,MACpFjnC,EAAMgnC,YAAYlvC,GAAlB,UAA6BkI,EAAMgnC,YAAYlvC,UAA/C,QAA2D,GAC3DmvC,EAAMtsC,SAAQ,SAAChG,GACb,IAAM0yC,EAAUb,GAAU7xC,GACpByG,EAAU4E,EAAMgnC,YAAYlvC,GAASuvC,GAC3C,GAAKjsC,EAIE,CAAC,IAAD,EACL,IAAI,UAACA,EAAQksC,2BAAT,QAAgC,IAAMA,EAAqB,OAC/DtnC,EAAMgnC,YAAYlvC,GAASuvC,GAASC,oBAAsBA,OAL1DtnC,EAAMgnC,YAAYlvC,GAASuvC,GAAW,CACpCC,6BAQPlD,QAAQ0C,IAA+B,SAAC9mC,EAAD,GAAkE,IAAD,MAAvD4tB,QAAW0Z,EAA4C,EAA5CA,oBAAqBxvC,EAAuB,EAAvBA,QAASmvC,EAAc,EAAdA,MACzFjnC,EAAMgnC,YAAYlvC,GAAlB,UAA6BkI,EAAMgnC,YAAYlvC,UAA/C,QAA2D,GAC3DmvC,EAAMtsC,SAAQ,SAAChG,GACb,IAAM0yC,EAAUb,GAAU7xC,GACpByG,EAAU4E,EAAMgnC,YAAYlvC,GAASuvC,GACtCjsC,GACDA,EAAQksC,sBAAwBA,WAC3BlsC,EAAQksC,oBACflsC,EAAQjC,KAAO,KACfiC,EAAQ6oC,YAAcqD,SAI3BlD,QAAQ2C,IAAwB,SAAC/mC,EAAD,GAA4D,IAAD,MAAjD4tB,QAAW91B,EAAsC,EAAtCA,QAASiY,EAA6B,EAA7BA,QAASk0B,EAAoB,EAApBA,YACtEjkC,EAAMgnC,YAAYlvC,GAAlB,UAA6BkI,EAAMgnC,YAAYlvC,UAA/C,QAA2D,GAC3D7D,OAAOgB,KAAK8a,GAASpV,SAAQ,SAAC0sC,GAAa,IAAD,EAClCjsC,EAAU4E,EAAMgnC,YAAYlvC,GAASuvC,IACvC,iBAACjsC,QAAD,IAACA,OAAD,EAACA,EAAS6oC,mBAAV,QAAyB,GAAKA,IAClCjkC,EAAMgnC,YAAYlvC,GAASuvC,GAAW,CACpCluC,KAAM4W,EAAQs3B,GACdpD,yBCvEG9D,GAA8B,CACzChnC,UAAM/B,EACNg3B,eAAWh3B,EACXk3B,kBAAcl3B,EACdmwC,iBAAanwC,GAGA8sC,eAAc/D,IAAc,SAACgE,GAAD,OACzCA,EACGC,QAAQrW,IAAoB,SAAC/tB,EAAD,GAA2C,IAAtBiuB,EAAqB,EAAhCL,QAAWK,aAChDjuB,EAAM7G,KAAO80B,EAEbjuB,EAAMunC,YAAcnzB,QAErBgwB,QAAQp5B,IAAiB,SAAChL,EAAD,GAAwC,IAAnBouB,EAAkB,EAA7BR,QAAWQ,UAC7CpuB,EAAMouB,UAAYA,KAEnBgW,QAAQn5B,IAAoB,SAACjL,EAAD,GAA2C,IAAtBsuB,EAAqB,EAAhCV,QAAWU,aAChDtuB,EAAMsuB,aAAeA,QCYZ4V,eAF0B,CAAE9uB,UAAW,KAEX,SAAC+uB,GAAD,OACzCA,EACGC,QAAQv5B,IAAiB,SAAC7K,EAAD,GAAoC,EAA1B4tB,QAAWzY,OACtC5a,KACL,SAACioB,GAAD,OACGxiB,EAAMoV,UAAUoN,EAAUvjB,SAA1B,6BACIe,EAAMoV,UAAUoN,EAAUvjB,UAD9B,IAEC9F,KAAMqpB,EACN+kB,YAAanzB,aAIpBgwB,QAAQt5B,IAAc,SAAC9K,EAAD,GAA4C,EAAlC4tB,QAAWtY,eAC3B/a,KAAI,SAAC0E,GACbe,EAAMoV,UAAUnW,KACnBe,EAAMoV,UAAUnW,GAAW,CACzBub,mBAAepjB,EACf+B,UAAM/B,EACNg3B,eAAWh3B,EACXsZ,UAAW,GACX4d,kBAAcl3B,EACdmwC,iBAAanwC,UAMpBgtC,QAAQr5B,IAAkB,SAAC/K,EAAD,GAA0D,IAAD,IAA/C4tB,QAAW4M,EAAoC,EAApCA,aAAchgB,EAAsB,EAAtBA,cAC5Dxa,EAAMoV,UAAUolB,GAAhB,6BAAqCx6B,EAAMoV,UAAUolB,IAArD,IAAoEhgB,qBAGrE4pB,QAAQp5B,IAAiB,SAAChL,EAAD,GAAsD,IAAD,IAA3C4tB,QAAW4M,EAAgC,EAAhCA,aAAcpM,EAAkB,EAAlBA,UAC3DpuB,EAAMoV,UAAUolB,GAAhB,6BAAqCx6B,EAAMoV,UAAUolB,IAArD,IAAoEpM,iBAGrEgW,QAAQn5B,IAAoB,SAACjL,EAAD,GAAyD,IAAD,IAA9C4tB,QAAW4M,EAAmC,EAAnCA,aAAclM,EAAqB,EAArBA,aAC9DtuB,EAAMoV,UAAUolB,GAAhB,6BAAqCx6B,EAAMoV,UAAUolB,IAArD,IAAoElM,oBAGrE8V,QACCl5B,IACA,SAAClL,EAAD,GAA+F,IAAD,MAApF4tB,QAAW4M,EAAyE,EAAzEA,aAAce,EAA2D,EAA3DA,gBAAiB7qB,EAA0C,EAA1CA,UAAW2qB,EAA+B,EAA/BA,uBAC7Dr7B,EAAMoV,UAAUolB,GAAhB,6BACKx6B,EAAMoV,UAAUolB,IADrB,IAEE9pB,UAAU,6BACL1Q,EAAMoV,UAAUolB,GAAc9pB,WAD1B,uBAEN6qB,EAAkB7qB,GAFZ,uCAGP2qB,GAHO,YC/BJ6I,eAFyB,CAAE9uB,UAAW,KAEV,SAAC+uB,GAAD,OACzCA,EACGC,QAAQ5qB,IAAgB,SAACxZ,EAAD,GAAmC,EAAzB4tB,QAAWtT,MACtC/f,KACJ,SAAC8d,GAAD,OACGrY,EAAMoV,UAAUiD,EAASpZ,SAAzB,6BACIe,EAAMoV,UAAUiD,EAASpZ,UAD7B,IAEC9F,KAAMkf,EACNkvB,YAAanzB,aAKpBgwB,QAAQ3qB,IAAa,SAACzZ,EAAD,GAA2C,EAAjC4tB,QAAWpT,cAC3BjgB,KAAI,SAAC0E,GACZe,EAAMoV,UAAUnW,KACnBe,EAAMoV,UAAUnW,GAAW,CACzB9F,UAAM/B,EACNg3B,eAAWh3B,EACXk3B,kBAAcl3B,EACdmwC,iBAAanwC,EACbspC,cAAUtpC,UAKjBgtC,QAAQ1qB,IAAqB,SAAC1Z,EAAD,GAAqD,IAAD,IAA1C4tB,QAAWsO,EAA+B,EAA/BA,YAAa9N,EAAkB,EAAlBA,UAC9DpuB,EAAMoV,UAAU8mB,GAAhB,6BAAoCl8B,EAAMoV,UAAU8mB,IAApD,IAAkE9N,UAAWA,OAE9EgW,QAAQzqB,IAAwB,SAAC3Z,EAAD,GAAwD,IAAD,IAA7C4tB,QAAWsO,EAAkC,EAAlCA,YAAa5N,EAAqB,EAArBA,aACjEtuB,EAAMoV,UAAU8mB,GAAhB,6BAAoCl8B,EAAMoV,UAAU8mB,IAApD,IAAkE5N,oBAEnE8V,QAAQxqB,IAAgB,SAAC5Z,EAAD,GAAoD,IAAD,IAAzC4tB,QAAWsO,EAA8B,EAA9BA,YAAawE,EAAiB,EAAjBA,SACzD1gC,EAAMoV,UAAU8mB,GAAhB,6BAAoCl8B,EAAMoV,UAAU8mB,IAApD,IAAkEwE,mBCnGlE8G,GAA2B,CAAC,OAAQ,SAEpCC,GAAQC,YAAe,CAC3BC,QAAS,CACP1nC,eACAuB,QACAomC,aACAC,SACA3Z,YACA/Y,UACAmF,UAEFwtB,WAAW,GAAD,oBAAMC,YAAqB,CAAEC,OAAO,EAAOC,gBAAgB,KAA3D,CAAqEC,gBAAK,CAAEC,OAAQX,OAC9FY,eAAgBC,gBAAK,CAAEF,OAAQX,OAGjCC,GAAMpnC,SAASmkC,MAEAiD,UCzBA,SAASa,KACtB,IAAMjoC,EAAWC,cA0BjB,OAvBAzM,qBAAU,WAAO,IAAD,EACR00C,EAAc,SAAC5kB,GACnBtjB,EAASQ,GAAsB,CAAE0G,gBAAiBoc,EAAM6kB,YAGpD7kB,EAAK,UAAGrf,cAAH,aAAG,EAAQmkC,WAAW,gCASjC,OARApoC,EAASQ,GAAsB,CAAE0G,gBAAiBoc,EAAM6kB,YAExD,OAAI7kB,QAAJ,IAAIA,OAAJ,EAAIA,EAAO+kB,aACJ,OAAL/kB,QAAK,IAALA,KAAO+kB,YAAYH,IACd,OAAI5kB,QAAJ,IAAIA,OAAJ,EAAIA,EAAO9Z,oBACX,OAAL8Z,QAAK,IAALA,KAAO9Z,iBAAiB,SAAU0+B,IAG7B,YACL,OAAI5kB,QAAJ,IAAIA,OAAJ,EAAIA,EAAOglB,gBACJ,OAALhlB,QAAK,IAALA,KAAOglB,eAAeJ,IACjB,OAAI5kB,QAAJ,IAAIA,OAAJ,EAAIA,EAAO7Z,uBACX,OAAL6Z,QAAK,IAALA,KAAO7Z,oBAAoB,SAAUy+B,OAGxC,CAACloC,IAEG,KCxBF,I,GAAMuoC,GAAc,SAACvxB,GAC1B,IAAM5H,EAAW,8DAEV4H,EAAK,2BAAuBA,EAAvB,QAFK,qIAUjB,OAAOpL,KAAIwD,ICVb7C,KAAMC,OAAOC,MACbF,KAAMC,OAAOE,MACb,I,GAAMC,GAAe,MAEf67B,GAAe58B,KAAH,8Q,SAmBH68B,K,8EAAf,8DAAArxC,EAAA,sDACM0B,EAIE,GACAgU,EAAiB,WACjBC,EAAeR,KAAME,MAAMO,OAE7B/R,GAAQ,EACRgS,EAAO,EACPC,GAAW,EAXjB,mBAcYA,EAdZ,kCAe2DpC,GAAOS,MAAoB,CAC9EA,MAAOi9B,GACP18B,UAAW,CACTqB,UAAWL,EACXG,QAEF3B,YAAa,gBArBrB,iBAeoB8B,EAfpB,EAectU,KAAoBmC,EAflC,EAekCA,MAflC,EAeyC8Q,UASjCkB,GAAQ,KACJG,EAAas7B,gBAAgBz0C,OAAS,KAAQgH,KAChDiS,GAAW,GAETE,IACFtU,EAAOA,EAAKsT,OAAOgB,EAAas7B,mBA7B1C,yEAkCIztC,GAAQ,EAlCZ,YAqCMnC,EArCN,iBAqDI,IAfMwU,EAAoBxU,EAAK+B,QAAO,SAAC0S,EAAyCC,GAO9E,OALAD,EADoBxQ,UAAUyQ,EAAQC,KAAOd,IAAce,QAAQ,KAC9C,CACnBD,KAAMD,EAAQC,KACdE,UAAWC,WAAWJ,EAAQG,WAC9B2K,OAAQ1K,WAAWJ,EAAQ8K,SAEtB/K,IACN,IAEGO,EAAaR,EAAkBvQ,SAASnJ,OAAOgB,KAAK0Y,GAAmB,KAGzES,EAnDR,iBAmDoBD,QAnDpB,IAmDoBA,OAnDpB,EAmDoBA,EAAYL,YAnDhC,QAmDwCX,EAChCkB,EApDR,iBAoDoBF,QApDpB,IAoDoBA,OApDpB,EAoDoBA,EAAYwK,cApDhC,QAoD0C,EAC/BvK,EAAYhB,EAAeJ,IAC1BsB,EAAUF,EAAYpB,GACtBuB,EAAkBnR,UAAUkR,EAAUtB,IAAce,QAAQ,IAC7D9Z,OAAOgB,KAAK0Y,GAAmBa,SAASD,EAAgB3S,YAO3DyS,EAAYV,EAAkBY,GAAiBoK,OAN/ChL,EAAkBY,GAAmB,CACnCT,KAAMQ,EACNN,UAAW,EACX2K,OAAQtK,GAKZD,EAAYE,EAjElB,OAoEUG,EAAUxa,OAAOgB,KAAK0Y,GAAmBpT,KAAI,SAAC/F,GAClD,OAAOmZ,EAAkBvQ,SAAS5I,OArExC,kBAwEW,CACL2E,KAAMsV,EACNnT,OAAO,IA1Eb,iCA6EW,CACLnC,UAAM/B,EACNkE,UA/EN,2D,sBC3BA,I,GAAMgW,GAAsBrF,KAAH,29BAsHlB,SAAe+8B,KAAtB,gC,8CAAO,oCAAAvxC,EAAA,+EAEoC0T,GAAOS,MAA0B,CACtEA,MAAO0F,GACP3F,YAAa,iBAJZ,mBAEKxS,EAFL,EAEKA,KAAMmC,EAFX,EAEWA,MAAO8Q,EAFlB,EAEkBA,SAKjB9Q,IAAS8Q,GAAYjT,EAPtB,8CAQM/B,GARN,cAWG6Y,EAAY9W,EAAKm1B,aAAapzB,QAAO,SAAC0S,EAAsBsC,GAChE,IAAM+4B,EAAc/4B,EAAEgK,MAAM3f,KAAI,SAACmX,GAC/B,MAAO,CACLC,KAAMrB,GAAgBsB,KACtBC,KAAM3B,EAAE1Z,GACR4X,UAAW8B,EAAE9B,UACb2D,OAAQL,EAAEM,OACVC,aAAcf,GAAkBQ,EAAEQ,KAAKC,OAAO3b,GAAIkb,EAAEQ,KAAKC,OAAOhB,QAChEiB,aAAclB,GAAkBQ,EAAEQ,KAAKG,OAAO7b,GAAIkb,EAAEQ,KAAKG,OAAOlB,QAChEmB,cAAeZ,EAAEQ,KAAKC,OAAO3b,GAC7B+b,cAAeb,EAAEQ,KAAKG,OAAO7b,GAC7Bgc,UAAWvE,WAAWyD,EAAEc,WACxBC,aAAcxE,WAAWyD,EAAEgB,SAC3BC,aAAc1E,WAAWyD,EAAEkB,aAGzBs2B,EAAch5B,EAAEiK,MAAM5f,KAAI,SAACmX,GAC/B,MAAO,CACLC,KAAMrB,GAAgB2C,KACtBpB,KAAM3B,EAAE1Z,GACR4X,UAAW8B,EAAE9B,UACb2D,OAAQL,EAAEM,OACVC,aAAcf,GAAkBQ,EAAEQ,KAAKC,OAAO3b,GAAIkb,EAAEQ,KAAKC,OAAOhB,QAChEiB,aAAclB,GAAkBQ,EAAEQ,KAAKG,OAAO7b,GAAIkb,EAAEQ,KAAKG,OAAOlB,QAChEmB,cAAeZ,EAAEQ,KAAKC,OAAO3b,GAC7B+b,cAAeb,EAAEQ,KAAKG,OAAO7b,GAC7Bgc,UAAWvE,WAAWyD,EAAEc,WACxBC,aAAcxE,WAAWyD,EAAEgB,SAC3BC,aAAc1E,WAAWyD,EAAEkB,aAIzBu2B,EAAcj5B,EAAEkK,MAAM7f,KAAI,SAACmX,GAC/B,MAAO,CACLG,KAAM3B,EAAE1Z,GACRmb,KAAMrB,GAAgBiD,KACtBnF,UAAW8B,EAAE9B,UACb2D,OAAQL,EAAEM,OACVC,aAAcf,GAAkBQ,EAAEQ,KAAKC,OAAO3b,GAAIkb,EAAEQ,KAAKC,OAAOhB,QAChEiB,aAAclB,GAAkBQ,EAAEQ,KAAKG,OAAO7b,GAAIkb,EAAEQ,KAAKG,OAAOlB,QAChEmB,cAAeZ,EAAEQ,KAAKC,OAAO3b,GAC7B+b,cAAeb,EAAEQ,KAAKG,OAAO7b,GAC7Bgc,UAAWvE,WAAWyD,EAAEc,WACxBC,aAAcxE,WAAWyD,EAAEgB,SAC3BC,aAAc1E,WAAWyD,EAAEkB,aAI/B,OADAhF,EAAK,uBAAOA,GAAP,aAAiBq7B,GAAjB,aAAiCC,GAAjC,aAAiDC,MAErD,IA5DA,kBA8DIl5B,GA9DJ,gEAgEI7Y,GAhEJ,2D,sBCrHQ,SAASkxC,KAAiB,IAAD,EACKta,KADL,mBAC/BC,EAD+B,KACjBF,EADiB,OH0BjC,WAIJ,IAAD,YAEmB5e,KAFnB,qBAGsCO,GAAwB,CAH9D,YAGQE,EAHR,EAGQA,OAAesH,EAHvB,EAGgB5b,MAHhB,SAI2BsU,QAJ3B,IAI2BA,IAAU,GAJrC,mBAIO2G,EAJP,KAIgBC,EAJhB,OAOiCiB,oBAAyBmxB,MAAlDx8B,EAPR,EAOQA,QAAS9Q,EAPjB,EAOiBA,MAAOnC,EAPxB,EAOwBA,KAPxB,EAS6Dse,oBAC3DmxB,GAAW,iBAACryB,QAAD,IAACA,OAAD,EAACA,EAASnG,cAAV,aAAoBhZ,IADhBsgB,EATjB,EASQtL,QAA2BuL,EATnC,EAS4Brc,MAAsBsc,EATlD,EAS4Cze,KAT5C,EAY6Dse,oBAC3DmxB,GAAW,iBAACpyB,QAAD,IAACA,OAAD,EAACA,EAASpG,cAAV,aAAoBhZ,IADhBygB,EAZjB,EAYQzL,QAA2B0L,EAZnC,EAY4Bxc,MAAsByc,EAZlD,EAY4C5e,KAItCgf,EAAW9L,QAAQ/Q,GAASqc,GAAWG,GAAWZ,GAClDkB,EAAa/L,QAAQD,GAAWsL,GAAaG,GAE7C7b,EAAM,OAAG7C,QAAH,IAAGA,GAAH,UAAGA,EAAMiwC,iBAAT,aAAG,EAAkB,GAC3B9wB,EAAQ,OAAGV,QAAH,IAAGA,GAAH,UAAGA,EAAQwxB,iBAAX,aAAG,EAAoB,GAC/B7wB,EAAQ,OAAGR,QAAH,IAAGA,GAAH,UAAGA,EAAQqxB,iBAAX,aAAG,EAAoB,GAE/B78B,EAA0C3E,mBAAQ,WACtD,IAAIuQ,IAAYC,GAAepc,GAAW4T,EAA1C,CAKA,IAAM5B,EACJhS,GAAUsc,EACNrK,WAAWjS,EAAOqtC,gBAAkBp7B,WAAWqK,EAAS+wB,gBACxDp7B,WAAWjS,EAAOqtC,gBAElBC,EACJhxB,GAAYC,EAAWtK,WAAWqK,EAAS+wB,gBAAkBp7B,WAAWsK,EAAS8wB,qBAAkBjyC,EAE/FqhB,EACJzK,GAAas7B,GAAuBt7B,EAAYs7B,GAAsBA,EAAsB,IAAM,EAG9F1wB,EAAezC,GAAgB,OAACna,QAAD,IAACA,OAAD,EAACA,EAAQkS,oBAAT,OAA8BoK,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAUpK,qBAGvEmL,EACJrd,GAAUsc,EAAWrK,WAAWjS,EAAOqd,SAAWpL,WAAWqK,EAASe,SAAWpL,WAAWjS,EAAOqd,SAE/FkwB,EACJjxB,GAAYC,EAAWtK,WAAWqK,EAASe,SAAWpL,WAAWsK,EAASc,cAAWjiB,EAEjFoyC,EACJnwB,GAAWkwB,EAAsBpzB,GAAiBkD,EAAQzd,WAAY2tC,EAAoB3tC,YAAc,EAEpG6tC,EACJnxB,GAAYC,EAAWtK,WAAWqK,EAASoxB,cAAgBz7B,WAAWsK,EAASmxB,mBAAgBtyC,EAE3FkiB,EACJtd,GAAUsc,EACNrK,WAAWjS,EAAO0tC,cAAgBz7B,WAAWqK,EAASoxB,cACtDz7B,WAAWjS,EAAO0tC,cAElB1V,EACJ1a,GAAWmwB,EAAmBtzB,GAAiBmD,EAAQ1d,WAAY6tC,EAAiB7tC,YAAc,EAEpG,MAAO,CACLoS,YACAyK,gBAA4C,kBAApBA,EAA+BA,EAAkB,EACzEE,OAAQ1K,WAAWjS,EAAOkS,qBAC1B0K,eACAU,UACA0a,YACA3a,UACAmwB,oBAED,CAACrxB,EAAUC,EAAYxI,EAAQ5T,EAAQsc,EAAUC,IAEpD,MAAO,CACLnM,QAASgM,EACT9c,MAAO6c,EACPhf,KAAMoT,GG3G8Co9B,GAAxCC,EAFwB,EAE9BzwC,KAA2BmC,EAFG,EAEHA,MAAO8Q,EAFJ,EAEIA,QAFJ,EAID+hB,KAJC,mBAI/BC,EAJ+B,KAIpBpjB,EAJoB,OFiHjC,WAGJ,IAAD,EACwB2E,qBADxB,mBACOxW,EADP,KACa0gC,EADb,OAE0BlqB,oBAAS,GAFnC,mBAEOrU,EAFP,KAEcwU,EAFd,KAkBA,OAdAjc,qBAAU,WAAM,4CACd,gCAAA4D,EAAA,sEACgCqxC,KADhC,gBACU3vC,EADV,EACUA,KAAMmC,EADhB,EACgBA,MACVnC,IAASmC,EACXu+B,EAAQ1gC,GACCmC,GACTwU,GAAS,GALb,4CADc,sBAST3W,GAASmC,GATC,WAAD,wBAUZtB,KAED,CAACb,EAAMmC,IAEH,CACLA,QACAnC,QEnIoD0wC,GAAxCC,EALwB,EAK9B3wC,KAA+B4wC,EALD,EAKNzuC,MALM,EAOK+yB,KAPL,mBAO/BC,EAP+B,KAOjBrjB,EAPiB,KAmCtC,OAzBApX,qBAAU,gBACauD,IAAjB62B,IAA8B2b,GAAwBx9B,GAAY9Q,GACpEyyB,EAAmB6b,KAEpB,CAACtuC,EAAOsuC,EAAqBx9B,EAAS6hB,EAAcF,IAGvDl6B,qBAAU,gBACUuD,IAAdg3B,GAA2B0b,IAAqBC,GAClD/+B,EAAgB8+B,KAEjB,CAAC1b,EAAW2b,EAAYD,EAAkB9+B,IAE7CnX,qBAAU,WAAM,4CACd,4BAAA4D,EAAA,sEACqBuxC,KADrB,QACQ7vC,EADR,SAGI8R,EAAmB9R,GAHvB,4CADc,sBAOTm1B,GAPU,WAAD,wBAQZt0B,KAED,CAACs0B,EAAcrjB,IAEX,KCrCF,I,GAAM++B,GAAa/9B,KAAH,qJCCR,SAASq8B,KAEtB,IAAM2B,EjFuBD,WACL,IAAM5pC,EAAWC,cAEjB,OAAOC,uBACL,SAAC4U,GACC9U,EAASwK,GAAgB,CAAEsK,cAE7B,CAAC9U,IiF9BsB6pC,GACnBp/B,EAAeuK,KAGfG,EAAeN,KANiB,EDgBjC,WAIJ,IAAD,EACiCuC,oBAA4BuyB,IAArD59B,EADR,EACQA,QAAS9Q,EADjB,EACiBA,MAAOnC,EADxB,EACwBA,KAElBoT,EAAgB3E,mBAAQ,WAC5B,OAAIzO,EACKA,EAAKgc,OAAO5a,KAAI,SAAC2V,GAAD,OAAOA,EAAE1Z,WAEhC,IAED,CAAC2C,IAEJ,MAAO,CACLiT,QAASA,EACT9Q,MAAO+Q,QAAQ/Q,GACfgR,UAAWC,GC3ByB49B,GAA9B/9B,EAP8B,EAO9BA,QAAS9Q,EAPqB,EAOrBA,MAAOgR,EAPc,EAOdA,UAGxBzY,qBAAU,YACJyY,GAAchR,GAAU8Q,GAC1BtB,EAAawB,KAEd,CAACxB,EAAcwB,EAAWhR,EAAO8Q,IAGpC,IAjBsC,EA4ByCmL,GAX/C3P,mBAAQ,WACtC,OAAO3T,OAAOgB,KAAKugB,GAActa,QAAO,SAAC0S,EAAiBpZ,GACxD,IAAMguB,EAAYhN,EAAahhB,GAI/B,OAHKguB,EAAUrpB,MAASqpB,EAAU+kB,aAChC35B,EAAM9R,KAAKtH,GAENoZ,IACN,MACF,CAAC4H,KAGW40B,EA5BuB,EA4B9B9uC,MAAgC+uC,EA5BF,EA4BPj+B,QAAiC+jB,EA5B1B,EA4BoBh3B,KAS1D,OANAtF,qBAAU,YACJs8B,GAAeia,GAAmBC,GACpCJ,EAAiBh2C,OAAO2a,OAAOuhB,MAEhC,CAACia,EAAgBC,EAAkBla,EAAY8Z,IAE3C,KCtCF,IAAMK,GAAYr+B,KAAH,oJCIf,I,GAAMs+B,GAAa,SAAClzB,EAA2BiD,GACpD,IAAIkwB,EAAU,IACdlwB,EAAM/f,KAAI,SAAC0E,GACT,OAAQurC,GAAU,WAAQvrC,EAAR,SAGpB,IAAMwQ,EACJ,0DAFF+6B,GAAc,IAEZ,OAGCnzB,EAAK,0BAAsBA,EAAtB,WAHN,+kBAkCF,OAAOpL,KAAIwD,IC5CE,SAAS64B,KAEtB,IAAM9uB,E7EWD,WACL,IAAMnZ,EAAWC,cACjB,OAAOC,uBAAY,SAAC+Z,GAAD,OAAuBja,EAASmZ,GAAe,CAAEc,aAAW,CAACja,I6EbzDoqC,GACjBhxB,EAAcc,KAGdG,EAAcL,KANkB,EFgBjC,WAIJ,IAAD,EACiC5C,oBAA2B6yB,GAAW,CACrE3+B,YAAa,iBADPS,EADR,EACQA,QAAS9Q,EADjB,EACiBA,MAAOnC,EADxB,EACwBA,KAIlBoT,EAAgB3E,mBAAQ,WAC5B,OAAIzO,EACKA,EAAKmhB,MAAM/f,KAAI,SAACoS,GAAD,OAAOA,EAAEnW,WAE/B,IAED,CAAC2C,IAEJ,MAAO,CACLiT,QAASA,EACT9Q,MAAO+Q,QAAQ/Q,GACfgR,UAAWC,GE7ByBm+B,GAA9Bt+B,EAP8B,EAO9BA,QAAS9Q,EAPqB,EAOrBA,MAAOgR,EAPc,EAOdA,UAGxBzY,qBAAU,YACJyY,GAAchR,GAAU8Q,GAC1BqN,EAAYnN,KAEb,CAACmN,EAAanN,EAAWhR,EAAO8Q,IAGnC,IAjBsC,EDmFjC,SACLoO,GASA,MAE0BrL,KAF1B,qBAGsCO,GAAwB,CAH9D,iBAGQE,EAHR,EAGQA,OAAesH,EAHvB,EAGgB5b,MAHhB,SAIsCsU,QAJtC,IAIsCA,IAAU,GAJhD,mBAIO2G,EAJP,KAIgBC,EAJhB,KAIyBC,EAJzB,OAMiCgB,oBAA2B8yB,QAAWnzC,EAAWojB,IAA1EpO,EANR,EAMQA,QAAS9Q,EANjB,EAMiBA,MAAOnC,EANxB,EAMwBA,KANxB,EAQ6Dse,oBAC3D8yB,GAAU,OAACh0B,QAAD,IAACA,OAAD,EAACA,EAASnG,OAAQoK,IADb9C,EARjB,EAQQtL,QAA2BuL,EARnC,EAQ4Brc,MAAsBsc,EARlD,EAQ4Cze,KAR5C,EAW6Dse,oBAC3D8yB,GAAU,OAAC/zB,QAAD,IAACA,OAAD,EAACA,EAASpG,OAAQoK,IADb3C,EAXjB,EAWQzL,QAA2B0L,EAXnC,EAW4Bxc,MAAsByc,EAXlD,EAW4C5e,KAX5C,EAcmEse,oBACjE8yB,GAAU,OAAC9zB,QAAD,IAACA,OAAD,EAACA,EAAWrG,OAAQoK,IADfxC,EAdjB,EAcQ5L,QAA6B6L,EAdrC,EAc8B3c,MAAwB4c,EAdtD,EAcgD/e,KAI1Cgf,EAAW9L,QAAQ/Q,GAASqc,GAAWG,GAAWZ,GAAce,GAChEG,EAAa/L,QAAQD,GAAWsL,GAAaG,GAAaG,GAGhE,GAAIG,GAAYC,EACd,MAAO,CACLhM,QAASgM,EACT9c,MAAO6c,EACPhf,UAAM/B,GAIV,IAAM4E,GAAa,OAAJ7C,QAAI,IAAJA,OAAA,EAAAA,EAAMmhB,OACjBnhB,EAAKmhB,MAAMpf,QAAO,SAAC0S,EAA0CyK,GAE3D,OADAzK,EAAMyK,EAAS7hB,IAAM6hB,EACdzK,IACN,IACH,GACE0K,GAAiB,OAANV,QAAM,IAANA,OAAA,EAAAA,EAAQ0C,OACrB1C,EAAO0C,MAAMpf,QAAO,SAAC0S,EAA0CyK,GAE7D,OADAzK,EAAMyK,EAAS7hB,IAAM6hB,EACdzK,IACN,IACH,GACE2K,GAAiB,OAANR,QAAM,IAANA,OAAA,EAAAA,EAAQuC,OACrBvC,EAAOuC,MAAMpf,QAAO,SAAC0S,EAA0CyK,GAE7D,OADAzK,EAAMyK,EAAS7hB,IAAM6hB,EACdzK,IACN,IACH,GACE4K,GAAqB,OAARN,QAAQ,IAARA,OAAA,EAAAA,EAAUoC,OACzBpC,EAASoC,MAAMpf,QAAO,SAAC0S,EAA0CyK,GAE/D,OADAzK,EAAMyK,EAAS7hB,IAAM6hB,EACdzK,IACN,IACH,GAyEJ,MAAO,CACLxB,QAASgM,EACT9c,MAAO6c,EACPhf,KAzEgBqhB,EAActf,QAAO,SAAC0S,EAAwC3O,GAC9E,IAAM7D,EAAkCY,EAAOiD,GACzC0X,EAAiC2B,EAASrZ,GAC1C2X,EAAiC2B,EAAStZ,GAC1C4X,EAA+B2B,EAAWvZ,GAJ0C,EAOxF7D,GAAWub,GAAUC,EACjBlB,GAActa,EAAQ4S,UAAW2I,EAAO3I,UAAW4I,EAAO5I,WAC1D5S,EACA,CAAC6S,WAAW7S,EAAQ4S,WAAY,GAChC,CAAC,EAAG,GAXgF,mBAMnFA,EANmF,KAMxEyK,EANwE,KAapFC,EACJtd,GAAWyb,EACP5I,WAAW7S,EAAQ4S,WAAaC,WAAW4I,EAAK7I,WAChD5S,EACA6S,WAAW7S,EAAQ4S,WACnB,EAEA2K,EAASvd,EAAU6S,WAAW7S,EAAQ8S,qBAAuB,EAE7D0K,EACJxd,GAAWub,GACL1I,WAAW7S,EAAQ8S,qBAAuBD,WAAW0I,EAAOzI,sBAC5DD,WAAW0I,EAAOzI,qBACpB,IACA,EAEA4xB,EAAY1kC,EAAU6S,WAAW7S,EAAQuvC,wBAA0B,EACnE5K,EAAY3kC,EAAU6S,WAAW7S,EAAQwvC,wBAA0B,EAEnE9kB,EAAU1qB,EAAUgC,SAAShC,EAAQ0qB,SAAW,EAmCtD,OAjCI1qB,IACFwS,EAAM3O,GAAW,CACfA,UACA6mB,UACAgX,UAAW7uB,WAAW7S,EAAQ0hC,WAC9B+N,UAAW58B,WAAW7S,EAAQyvC,WAC9B9qB,KAAM9R,WAAW7S,EAAQ2kB,MACzB5N,OAAQ,CACNlT,QAAS7D,EAAQ+W,OAAO3b,GACxB6a,KAAMD,GAAgBhW,EAAQ+W,OAAO3b,GAAI4E,EAAQ+W,OAAOd,MACxDF,OAAQD,GAAkB9V,EAAQ+W,OAAO3b,GAAI4E,EAAQ+W,OAAOhB,QAC5Dqd,SAAUpxB,SAAShC,EAAQ+W,OAAOqc,UAClCxV,WAAY/K,WAAW7S,EAAQ+W,OAAO6G,aAExC3G,OAAQ,CACNpT,QAAS7D,EAAQiX,OAAO7b,GACxB6a,KAAMD,GAAgBhW,EAAQiX,OAAO7b,GAAI4E,EAAQiX,OAAOhB,MACxDF,OAAQD,GAAkB9V,EAAQiX,OAAO7b,GAAI4E,EAAQiX,OAAOlB,QAC5Dqd,SAAUpxB,SAAShC,EAAQiX,OAAOmc,UAClCxV,WAAY/K,WAAW7S,EAAQiX,OAAO2G,aAExC+M,YAAa9X,WAAW7S,EAAQ2qB,aAChCqd,YAAan1B,WAAW7S,EAAQgoC,aAChCp1B,YACAyK,kBACAC,gBACAC,SACAC,eACAknB,YACAC,cAIGnyB,IACN,KC7LyE6M,CAX7C7S,mBAAQ,WACrC,OAAO3T,OAAOgB,KAAKylB,GAAaxf,QAAO,SAAC0S,EAAiBpZ,GACvD,IAAM6jB,EAAWqC,EAAYlmB,GAI7B,OAHK6jB,EAASlf,MAASkf,EAASkvB,aAC9B35B,EAAM9R,KAAKtH,GAENoZ,IACN,MACF,CAAC8M,KAGWowB,EA5BuB,EA4B9BxvC,MAA+ByvC,EA5BD,EA4BR3+B,QAAgCilB,EA5BxB,EA4BkBl4B,KAOxD,OANAtF,qBAAU,YACJw9B,GAAcyZ,GAAkBC,GAClCvxB,EAAevlB,OAAO2a,OAAOyiB,MAE9B,CAACyZ,EAAeC,EAAiB1Z,EAAW7X,IAExC,KCpCF,IAAMwxB,GAAkB/+B,KAAH,uSCAb,SAASq8B,KAAgB,MAEP7nC,KAFO,mBAE/B3F,EAF+B,KAEvBmwC,EAFuB,ODkCjC,WAIJ,IAAD,EACiCxzB,oBAAyBuzB,GAAiB,CACzE7/B,OAAQW,GACRH,YAAa,iBAFPS,EADR,EACQA,QAAS9Q,EADjB,EACiBA,MAAOnC,EADxB,EACwBA,KAKlB6C,EAAM,OAAG7C,QAAH,IAAGA,OAAH,EAAGA,EAAM+xC,gCAErB,GAAI9+B,EACF,MAAO,CACLzL,UAAW,KACXC,iBAAaxJ,EACb+zC,eAAW/zC,GAIf,IAAMgV,IAAYpQ,GAAWV,EAC3B,MAAO,CACLqF,WAAW,EACXC,iBAAaxJ,EACb+zC,eAAW/zC,GAIf,IAAMwJ,EAAW,OAAG5E,QAAH,IAAGA,OAAH,EAAGA,EAAQovC,OAAO,GAAGzV,YAAYvlB,OAC5C+6B,EAAS,OAAGnvC,QAAH,IAAGA,OAAH,EAAGA,EAAQovC,OAAO,GAAGC,eAAej7B,OAEnD,MAAO,CACLzP,WAAW,EACXC,YAAaA,EAAcqN,WAAWrN,QAAexJ,EACrD+zC,UAAWA,EAAYl9B,WAAWk9B,QAAa/zC,GCjEEk0C,GAA3C3qC,EAH8B,EAG9BA,UAAwB4qC,EAHM,EAGnB3qC,YAEbA,EAAc9F,EAAO8F,YAW3B,OATA/M,qBAAU,WACiB,OAArBiH,EAAO6F,WAAoC,OAAdA,GAC/BsqC,EAAatqC,EAAWC,KAErB9F,EAAO8F,aAAgB9F,EAAO8F,cAAgB2qC,GAAkB3qC,IACnEqqC,EAAanwC,EAAO6F,UAAW4qC,KAEhC,CAAC5qC,EAAW4qC,EAAgBzwC,EAAO6F,UAAW7F,EAAO8F,YAAaA,EAAaqqC,IAE3E,K,cCDHO,GAA0C1uC,6NAAY2uC,8BAqB5D,SAASC,KACP,OACE,uCACE,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,OA3B6B,kBAAxBF,IACT13C,IAAQ63C,WAAWH,IACnB13C,IAAQ83C,IAAI,CACVC,kBAAoB3kB,WAEhB,SAAU5iB,QAAU,aAAcA,OAClC,aACA,gBAHA,aAMNxQ,IAAQ63C,WAAW,OAAQ,CAAEG,UAAU,EAAM/xC,OAAO,IAGtDuK,OAAOuF,iBAAiB,SAAS,SAACvO,GAChCxH,IAAQi4C,UAAU,CAChBC,YAAY,GAAD,OAAK1wC,EAAMrC,QAAX,cAAwBqC,EAAM2wC,SAA9B,YAA0C3wC,EAAM4wC,OAAhD,YAA0D5wC,EAAM6wC,OAC3EC,OAAO,OAgBXC,IAASC,OACP,gBAAC,aAAD,WACE,eAAC7jC,GAAD,IACA,eAAC,kBAAD,CAAgB0C,OAAQA,GAAxB,SACE,gBAAC,IAAD,CAAUs8B,MAAOA,GAAjB,UACE,eAACiE,GAAD,IACA,gBAACrkC,GAAD,WACE,eAACsB,GAAD,IACA,eAAC,IAAD,UACE,eAAC+6B,GAAD,iBAMV95B,SAAS2iC,eAAe,W","file":"static/js/main.bc4cc121.chunk.js","sourcesContent":["import i18next from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport XHR from 'i18next-xhr-backend'\nimport LanguageDetector from 'i18next-browser-languagedetector'\n\ni18next\n  .use(XHR)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    backend: {\n      loadPath: `./locales/{{lng}}.json`,\n    },\n    react: {\n      useSuspense: true,\n    },\n    fallbackLng: 'en',\n    preload: ['en'],\n    keySeparator: false,\n    interpolation: { escapeValue: false },\n  })\n\nexport default i18next\n","import { useEffect } from 'react'\nimport ReactGA from 'react-ga'\nimport { RouteComponentProps } from 'react-router-dom'\n\n// fires a GA pageview every time the route changes\nexport default function GoogleAnalyticsReporter({ location: { pathname, search } }: RouteComponentProps): null {\n  useEffect(() => {\n    ReactGA.pageview(`${pathname}${search}`)\n  }, [pathname, search])\n  return null\n}\n","export default __webpack_public_path__ + \"static/media/logo_white.8354e9b6.svg\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 13C12.5523 13 13 12.5523 13 12C13 11.4477 12.5523 11 12 11C11.4477 11 11 11.4477 11 12C11 12.5523 11.4477 13 12 13Z\",\n  stroke: \"black\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13C19.5523 13 20 12.5523 20 12C20 11.4477 19.5523 11 19 11C18.4477 11 18 11.4477 18 12C18 12.5523 18.4477 13 19 13Z\",\n  stroke: \"black\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5 13C5.55228 13 6 12.5523 6 12C6 11.4477 5.55228 11 5 11C4.44772 11 4 11.4477 4 12C4 12.5523 4.44772 13 5 13Z\",\n  stroke: \"black\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n});\n\nfunction SvgMenu(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMenu);\nexport default __webpack_public_path__ + \"static/media/menu.79681e1f.svg\";\nexport { ForwardRef as ReactComponent };","import { createAction } from '@reduxjs/toolkit'\nimport { TokenList } from '@uniswap/token-lists'\n\nexport type PopupContent = {\n  listUpdate: {\n    listUrl: string\n    oldList: TokenList\n    newList: TokenList\n    auto: boolean\n  }\n}\n\nexport enum ApplicationModal {\n  WALLET,\n  SETTINGS,\n  MENU,\n}\n\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('application/updateBlockNumber')\nexport const setOpenModal = createAction<ApplicationModal | null>('application/setOpenModal')\nexport const addPopup = createAction<{ key?: string; removeAfterMs?: number | null; content: PopupContent }>(\n  'application/addPopup'\n)\nexport const removePopup = createAction<{ key: string }>('application/removePopup')\nexport const updateSubgraphStatus = createAction<{ available: boolean | null; syncedBlock: number | undefined }>(\n  'application/updateSubgraphStatus'\n)\n","import { ChainId } from '@uniswap/sdk-core'\nimport { FortmaticConnector as FortmaticConnectorCore } from '@web3-react/fortmatic-connector'\n\nexport const OVERLAY_READY = 'OVERLAY_READY'\n\ntype FormaticSupportedChains = Extract<ChainId, ChainId.MAINNET | ChainId.ROPSTEN | ChainId.RINKEBY | ChainId.AVALANCHE>\n\nconst CHAIN_ID_NETWORK_ARGUMENT: { readonly [chainId in FormaticSupportedChains]: string | undefined } = {\n  [ChainId.MAINNET]: undefined,\n  [ChainId.ROPSTEN]: 'ropsten',\n  [ChainId.RINKEBY]: 'rinkeby',\n  [ChainId.AVALANCHE]: 'avalanche',\n}\n\nexport class FortmaticConnector extends FortmaticConnectorCore {\n  async activate() {\n    if (!this.fortmatic) {\n      const { default: Fortmatic } = await import('fortmatic')\n\n      const { apiKey, chainId } = this as any\n      if (chainId in CHAIN_ID_NETWORK_ARGUMENT) {\n        this.fortmatic = new Fortmatic(apiKey, CHAIN_ID_NETWORK_ARGUMENT[chainId as FormaticSupportedChains])\n      } else {\n        throw new Error(`Unsupported network ID: ${chainId}`)\n      }\n    }\n\n    const provider = this.fortmatic.getProvider()\n\n    const pollForOverlayReady = new Promise((resolve) => {\n      const interval = setInterval(() => {\n        if (provider.overlayReady) {\n          clearInterval(interval)\n          this.emit(OVERLAY_READY)\n          resolve()\n        }\n      }, 200)\n    })\n\n    const [account] = await Promise.all([\n      provider.enable().then((accounts: string[]) => accounts[0]),\n      pollForOverlayReady,\n    ])\n\n    return { provider: this.fortmatic.getProvider(), chainId: (this as any).chainId, account }\n  }\n}\n","import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport invariant from 'tiny-invariant'\n\ninterface NetworkConnectorArguments {\n  urls: { [chainId: number]: string }\n  defaultChainId?: number\n}\n\n// taken from ethers.js, compatible interface with web3 provider\ntype AsyncSendable = {\n  isMetaMask?: boolean\n  host?: string\n  path?: string\n  sendAsync?: (request: any, callback: (error: any, response: any) => void) => void\n  send?: (request: any, callback: (error: any, response: any) => void) => void\n}\n\nclass RequestError extends Error {\n  constructor(message: string, public code: number, public data?: unknown) {\n    super(message)\n  }\n}\n\ninterface BatchItem {\n  request: { jsonrpc: '2.0'; id: number; method: string; params: unknown }\n  resolve: (result: any) => void\n  reject: (error: Error) => void\n}\n\nclass MiniRpcProvider implements AsyncSendable {\n  public readonly isMetaMask: false = false\n  public readonly chainId: number\n  public readonly url: string\n  public readonly host: string\n  public readonly path: string\n  public readonly batchWaitTimeMs: number\n\n  private nextId = 1\n  private batchTimeoutId: ReturnType<typeof setTimeout> | null = null\n  private batch: BatchItem[] = []\n\n  constructor(chainId: number, url: string, batchWaitTimeMs?: number) {\n    this.chainId = chainId\n    this.url = url\n    const parsed = new URL(url)\n    this.host = parsed.host\n    this.path = parsed.pathname\n    // how long to wait to batch calls\n    this.batchWaitTimeMs = batchWaitTimeMs ?? 50\n  }\n\n  public readonly clearBatch = async () => {\n    console.debug('Clearing batch', this.batch)\n    const batch = this.batch\n    this.batch = []\n    this.batchTimeoutId = null\n    let response: Response\n    try {\n      response = await fetch(this.url, {\n        method: 'POST',\n        headers: { 'content-type': 'application/json', accept: 'application/json' },\n        body: JSON.stringify(batch.map((item) => item.request)),\n      })\n    } catch (error) {\n      batch.forEach(({ reject }) => reject(new Error('Failed to send batch call')))\n      return\n    }\n\n    if (!response.ok) {\n      batch.forEach(({ reject }) => reject(new RequestError(`${response.status}: ${response.statusText}`, -32000)))\n      return\n    }\n\n    let json\n    try {\n      json = await response.json()\n    } catch (error) {\n      batch.forEach(({ reject }) => reject(new Error('Failed to parse JSON response')))\n      return\n    }\n    const byKey = batch.reduce<{ [id: number]: BatchItem }>((memo, current) => {\n      memo[current.request.id] = current\n      return memo\n    }, {})\n    for (const result of json) {\n      const {\n        resolve,\n        reject,\n        request: { method },\n      } = byKey[result.id]\n      if (resolve && reject) {\n        if ('error' in result) {\n          reject(new RequestError(result?.error?.message, result?.error?.code, result?.error?.data))\n        } else if ('result' in result) {\n          resolve(result.result)\n        } else {\n          reject(new RequestError(`Received unexpected JSON-RPC response to ${method} request.`, -32000, result))\n        }\n      }\n    }\n  }\n\n  public readonly sendAsync = (\n    request: {\n      jsonrpc: '2.0'\n      id: number | string | null\n      method: string\n      params?: unknown[] | Record<string, unknown>\n    },\n    callback: (error: any, response: any) => void\n  ): void => {\n    this.request(request.method, request.params)\n      .then((result) => callback(null, { jsonrpc: '2.0', id: request.id, result }))\n      .catch((error) => callback(error, null))\n  }\n\n  public readonly request = async (\n    method: string | { method: string; params: unknown[] },\n    params?: unknown[] | Record<string, unknown>\n  ): Promise<unknown> => {\n    if (typeof method !== 'string') {\n      return this.request(method.method, method.params)\n    }\n    if (method === 'eth_chainId') {\n      return `0x${this.chainId.toString(16)}`\n    }\n    const promise = new Promise((resolve, reject) => {\n      this.batch.push({\n        request: {\n          jsonrpc: '2.0',\n          id: this.nextId++,\n          method,\n          params,\n        },\n        resolve,\n        reject,\n      })\n    })\n    this.batchTimeoutId = this.batchTimeoutId ?? setTimeout(this.clearBatch, this.batchWaitTimeMs)\n    return promise\n  }\n}\n\nexport class NetworkConnector extends AbstractConnector {\n  private readonly providers: { [chainId: number]: MiniRpcProvider }\n  private currentChainId: number\n\n  constructor({ urls, defaultChainId }: NetworkConnectorArguments) {\n    invariant(defaultChainId || Object.keys(urls).length === 1, 'defaultChainId is a required argument with >1 url')\n    super({ supportedChainIds: Object.keys(urls).map((k): number => Number(k)) })\n\n    this.currentChainId = defaultChainId || Number(Object.keys(urls)[0])\n    this.providers = Object.keys(urls).reduce<{ [chainId: number]: MiniRpcProvider }>((accumulator, chainId) => {\n      accumulator[Number(chainId)] = new MiniRpcProvider(Number(chainId), urls[Number(chainId)])\n      return accumulator\n    }, {})\n  }\n\n  public get provider(): MiniRpcProvider {\n    return this.providers[this.currentChainId]\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    return { provider: this.providers[this.currentChainId], chainId: this.currentChainId, account: null }\n  }\n\n  public async getProvider(): Promise<MiniRpcProvider> {\n    return this.providers[this.currentChainId]\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.currentChainId\n  }\n\n  public async getAccount(): Promise<null> {\n    return null\n  }\n\n  public deactivate() {\n    return\n  }\n}\n","import { Web3Provider } from '@ethersproject/providers'\nimport { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector'\nimport { PortisConnector } from '@web3-react/portis-connector'\n\nimport { FortmaticConnector } from './Fortmatic'\nimport { NetworkConnector } from './NetworkConnector'\n\nconst NETWORK_URL = process.env.REACT_APP_NETWORK_URL\nconst FORMATIC_KEY = process.env.REACT_APP_FORTMATIC_KEY\nconst PORTIS_ID = process.env.REACT_APP_PORTIS_ID\n\nexport const NETWORK_CHAIN_ID: number = parseInt(process.env.REACT_APP_CHAIN_ID ?? '43114')\n\nif (typeof NETWORK_URL === 'undefined') {\n  throw new Error(`REACT_APP_NETWORK_URL must be a defined environment variable`)\n}\n\nexport const network = new NetworkConnector({\n  urls: { [NETWORK_CHAIN_ID]: NETWORK_URL },\n})\n\nlet networkLibrary: Web3Provider | undefined\nexport function getNetworkLibrary(): Web3Provider {\n  return (networkLibrary = networkLibrary ?? new Web3Provider(network.provider as any))\n}\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: [1, 3, 4, 5, 42, 43114],\n})\n\n// mainnet only\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { 1: NETWORK_URL },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: 15000,\n})\n\n// mainnet only\nexport const fortmatic = new FortmaticConnector({\n  apiKey: FORMATIC_KEY ?? '',\n  chainId: 1,\n})\n\n// mainnet only\nexport const portis = new PortisConnector({\n  dAppId: PORTIS_ID ?? '',\n  networks: [1],\n})\n\n// mainnet only\nexport const walletlink = new WalletLinkConnector({\n  url: NETWORK_URL,\n  appName: 'Uniswap',\n  appLogoUrl:\n    'https://mpng.pngfly.com/20181202/bex/kisspng-emoji-domain-unicorn-pin-badges-sticker-unicorn-tumblr-emoji-unicorn-iphoneemoji-5c046729264a77.5671679315437924251569.jpg',\n})\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { ChainId, Percent, Token, WETH9 } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\n\nimport { fortmatic, injected, portis, walletconnect, walletlink } from '../connectors'\n\nexport const FACTORY_ADDRESS = '0xE06B9a3C0A4314E00B33d9090a190ddC00a4DD01'\n\nexport const ROUTER_ADDRESS = '0x787Bd59120fb81f8BE4AD34280a621877516fe37'\n\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'\n\nexport const MAX_UINT128 = BigNumber.from(2).pow(128).sub(1)\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\nexport const WETH_ADDRESS = '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7'\n\nexport const DAI = new Token(\n  ChainId.AVALANCHE,\n  '0xE09CD46BBE2144b53C6265c2D1B3d01cfDadB786',\n  18,\n  'DAI',\n  'Dai Stablecoin'\n)\nexport const USDT = new Token(ChainId.AVALANCHE, '0xde3A24028580884448a5397872046a019649b084', 6, 'USDT', 'Tether USD')\nexport const WBTC = new Token(ChainId.AVALANCHE, '0x408D4cD0ADb7ceBd1F1A1C33A0Ba2098E1295bAB', 8, 'WBTC', 'Wrapped BTC')\n\n// Block time here is slightly higher (~1s) than average in order to avoid ongoing proposals past the displayed time\nexport const AVERAGE_BLOCK_TIME_IN_SECS = 5\nexport const PROPOSAL_LENGTH_IN_BLOCKS = 40_320\nexport const PROPOSAL_LENGTH_IN_SECS = AVERAGE_BLOCK_TIME_IN_SECS * PROPOSAL_LENGTH_IN_BLOCKS\n\nexport const GOVERNANCE_ADDRESS = '0x5e4be8Bc9637f0EAA1A755019e06A68ce081D58F'\n\nexport const TIMELOCK_ADDRESS = '0x1a9C8182C09F50C8318d769245beA52c32BE35BC'\n\nconst UNI_ADDRESS = '0xf39f9671906d8630812f9d9863bBEf5D523c84Ab' //AEB\nexport const UNI: { [chainId in ChainId]: Token } = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, UNI_ADDRESS, 18, 'UNI', 'Uniswap'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, UNI_ADDRESS, 18, 'UNI', 'Uniswap'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, UNI_ADDRESS, 18, 'UNI', 'Uniswap'),\n  [ChainId.GÖRLI]: new Token(ChainId.GÖRLI, UNI_ADDRESS, 18, 'UNI', 'Uniswap'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, UNI_ADDRESS, 18, 'UNI', 'Uniswap'),\n}\n\nexport const COMMON_CONTRACT_NAMES: { [address: string]: string } = {\n  [UNI_ADDRESS]: 'UNI',\n  [GOVERNANCE_ADDRESS]: 'Governance',\n  [TIMELOCK_ADDRESS]: 'Timelock',\n}\n\n// TODO: specify merkle distributor for mainnet\nexport const MERKLE_DISTRIBUTOR_ADDRESS: { [chainId in ChainId]?: string } = {\n  [ChainId.MAINNET]: '0x090D4613473dEE047c3f2706764f49E0821D256e',\n}\n\nconst WETH_ONLY: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH9[ChainId.MAINNET]],\n  [ChainId.ROPSTEN]: [WETH9[ChainId.ROPSTEN]],\n  [ChainId.RINKEBY]: [WETH9[ChainId.RINKEBY]],\n  [ChainId.GÖRLI]: [WETH9[ChainId.GÖRLI]],\n  [ChainId.AVALANCHE]: [WETH9[ChainId.AVALANCHE]],\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.AVALANCHE]: [...WETH_ONLY[ChainId.AVALANCHE], DAI, USDT, WBTC],\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.AVALANCHE]: {\n    [USDT.address]: [DAI, WETH9[ChainId.AVALANCHE]],\n  },\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.AVALANCHE]: [...WETH_ONLY[ChainId.AVALANCHE], DAI, USDT, WBTC],\n}\n\nexport const NETWORK_ONLY = {\n  fetchPolicy: 'network-only',\n}\n\n// temporary! fixing USD accounting on subgraph - open issue if urgent\nexport const TOKEN_HIDE = ['0xd46ba6d942050d489dbd938a2c909a5d5039a161', '0x7dfb72a2aad08c937706f21421b15bfc34cba9ca']\nexport const POOL_HIDE = [\n  '0x86d257cdb7bc9c0df10e84c8709697f92770b335',\n  '0xf8dbd52488978a79dfe6ffbd81a01fc5948bf9ee',\n  '0x8fe8d9bb8eeba3ed688069c3d6b556c9ca258248',\n]\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [\n      new Token(ChainId.MAINNET, '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643', 8, 'cDAI', 'Compound Dai'),\n      new Token(ChainId.MAINNET, '0x39AA39c021dfbaE8faC545936693aC917d5E7563', 8, 'cUSDC', 'Compound USD Coin'),\n    ],\n    [WBTC, USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport interface WalletInfo {\n  connector?: AbstractConnector\n  name: string\n  iconName: string\n  description: string\n  href: string | null\n  color: string\n  primary?: true\n  mobile?: true\n  mobileOnly?: true\n}\n\nexport const SUPPORTED_WALLETS: { [key: string]: WalletInfo } = {\n  INJECTED: {\n    connector: injected,\n    name: 'Injected',\n    iconName: 'arrow-right.svg',\n    description: 'Injected web3 provider.',\n    href: null,\n    color: '#010101',\n    primary: true,\n  },\n  METAMASK: {\n    connector: injected,\n    name: 'MetaMask',\n    iconName: 'metamask.png',\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#E8831D',\n  },\n  WALLET_CONNECT: {\n    connector: walletconnect,\n    name: 'WalletConnect',\n    iconName: 'walletConnectIcon.svg',\n    description: 'Connect to Trust Wallet, Rainbow Wallet and more...',\n    href: null,\n    color: '#4196FC',\n    mobile: true,\n  },\n  WALLET_LINK: {\n    connector: walletlink,\n    name: 'Coinbase Wallet',\n    iconName: 'coinbaseWalletIcon.svg',\n    description: 'Use Coinbase Wallet app on mobile device',\n    href: null,\n    color: '#315CF5',\n  },\n  COINBASE_LINK: {\n    name: 'Open in Coinbase Wallet',\n    iconName: 'coinbaseWalletIcon.svg',\n    description: 'Open in Coinbase Wallet app.',\n    href: 'https://go.cb-w.com/mtUDhEZPy1',\n    color: '#315CF5',\n    mobile: true,\n    mobileOnly: true,\n  },\n  FORTMATIC: {\n    connector: fortmatic,\n    name: 'Fortmatic',\n    iconName: 'fortmaticIcon.png',\n    description: 'Login using Fortmatic hosted wallet',\n    href: null,\n    color: '#6748FF',\n    mobile: true,\n  },\n  Portis: {\n    connector: portis,\n    name: 'Portis',\n    iconName: 'portisIcon.png',\n    description: 'Login using Portis hosted wallet',\n    href: null,\n    color: '#4A6C9B',\n    mobile: true,\n  },\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// used for rewards deadlines\nexport const BIG_INT_SECONDS_IN_WEEK = JSBI.BigInt(60 * 60 * 24 * 7)\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much ETH so they end up with <.01\nexport const MIN_ETH: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 ETH\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n]\n","import { Web3Provider } from '@ethersproject/providers'\nimport { ChainId } from '@uniswap/sdk-core'\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core'\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\nimport { useEffect, useState } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport { injected } from '../connectors'\nimport { NetworkContextName } from '../constants'\n\nexport function useActiveWeb3React(): Web3ReactContextInterface<Web3Provider> & { chainId?: ChainId } {\n  const context = useWeb3ReactCore<Web3Provider>()\n  const contextNetwork = useWeb3ReactCore<Web3Provider>(NetworkContextName)\n  return context.active ? context : contextNetwork\n}\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3ReactCore() // specifically using useWeb3ReactCore because of what this hook does\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        if (isMobile && window.ethereum) {\n          activate(injected, undefined, true).catch(() => {\n            setTried(true)\n          })\n        } else {\n          setTried(true)\n        }\n      }\n    })\n  }, [activate]) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (active) {\n      setTried(true)\n    }\n  }, [active])\n\n  return tried\n}\n\n/**\n * Use for network and injected - logs user in\n * and out after checking what network theyre on\n */\nexport function useInactiveListener(suppress = false) {\n  const { active, error, activate } = useWeb3ReactCore() // specifically using useWeb3React because of what this hook does\n\n  useEffect(() => {\n    const { ethereum } = window\n\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleChainChanged = () => {\n        // eat errors\n        activate(injected, undefined, true).catch((error) => {\n          console.error('Failed to activate after chain changed', error)\n        })\n      }\n\n      const handleAccountsChanged = (accounts: string[]) => {\n        if (accounts.length > 0) {\n          // eat errors\n          activate(injected, undefined, true).catch((error) => {\n            console.error('Failed to activate after accounts changed', error)\n          })\n        }\n      }\n\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n        }\n      }\n    }\n    return undefined\n  }, [active, error, suppress, activate])\n}\n","import { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useActiveWeb3React } from '../../hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { addPopup, ApplicationModal, PopupContent, removePopup, setOpenModal, updateSubgraphStatus } from './actions'\n\nexport function useBlockNumber(): number | undefined {\n  const { chainId } = useActiveWeb3React()\n\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\n}\n\nexport function useModalOpen(modal: ApplicationModal): boolean {\n  const openModal = useSelector((state: AppState) => state.application.openModal)\n  return openModal === modal\n}\n\nexport function useToggleModal(modal: ApplicationModal): () => void {\n  const open = useModalOpen(modal)\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(() => dispatch(setOpenModal(open ? null : modal)), [dispatch, modal, open])\n}\n\nexport function useOpenModal(modal: ApplicationModal): () => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(() => dispatch(setOpenModal(modal)), [dispatch, modal])\n}\n\nexport function useCloseModals(): () => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(() => dispatch(setOpenModal(null)), [dispatch])\n}\n\nexport function useWalletModalToggle(): () => void {\n  return useToggleModal(ApplicationModal.WALLET)\n}\n\nexport function useToggleSettingsMenu(): () => void {\n  return useToggleModal(ApplicationModal.SETTINGS)\n}\n\n// returns a function that allows adding a popup\nexport function useAddPopup(): (content: PopupContent, key?: string) => void {\n  const dispatch = useDispatch()\n\n  return useCallback(\n    (content: PopupContent, key?: string) => {\n      dispatch(addPopup({ content, key }))\n    },\n    [dispatch]\n  )\n}\n\n// returns a function that allows removing a popup via its key\nexport function useRemovePopup(): (key: string) => void {\n  const dispatch = useDispatch()\n  return useCallback(\n    (key: string) => {\n      dispatch(removePopup({ key }))\n    },\n    [dispatch]\n  )\n}\n\n// get the list of active popups\nexport function useActivePopups(): AppState['application']['popupList'] {\n  const list = useSelector((state: AppState) => state.application.popupList)\n  return useMemo(() => list.filter((item) => item.show), [list])\n}\n\n// returns a function that allows adding a popup\nexport function useSubgraphStatus(): [\n  {\n    available: boolean | null\n    syncedBlock: number | undefined\n  },\n  (available: boolean | null, syncedBlock: number | undefined) => void\n] {\n  const dispatch = useDispatch()\n  const status = useSelector((state: AppState) => state.application.subgraphStatus)\n\n  const update = useCallback(\n    (available: boolean | null, syncedBlock: number | undefined) => {\n      dispatch(updateSubgraphStatus({ available, syncedBlock }))\n    },\n    [dispatch]\n  )\n  return [status, update]\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport const updateMatchesDarkMode = createAction<{ matchesDarkMode: boolean }>('user/updateMatchesDarkMode')\nexport const updateUserDarkMode = createAction<{ userDarkMode: boolean }>('user/updateUserDarkMode')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSavedToken = createAction<{ address: string }>('user/addSavedToken')\nexport const addSavedPool = createAction<{ address: string }>('user/addSavedPool')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair = createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>(\n  'user/removeSerializedPair'\n)\nexport const toggleURLWarning = createAction<void>('app/toggleURLWarning')\n","import { ChainId, Token } from '@uniswap/sdk-core'\nimport { useCallback, useMemo } from 'react'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\n\nimport { Pair } from '@uniswap/v2-sdk'\nimport { useActiveWeb3React } from '../../hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserDarkMode,\n  toggleURLWarning,\n  addSavedToken,\n  addSavedPool,\n} from './actions'\n\nfunction serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nfunction deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name\n  )\n}\n\nexport function useIsDarkMode(): boolean {\n  const { userDarkMode, matchesDarkMode } = useSelector<\n    AppState,\n    { userDarkMode: boolean | null; matchesDarkMode: boolean }\n  >(\n    ({ user: { matchesDarkMode, userDarkMode } }) => ({\n      userDarkMode,\n      matchesDarkMode,\n    }),\n    shallowEqual\n  )\n\n  return userDarkMode === null ? matchesDarkMode : userDarkMode\n}\n\nexport function useDarkModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const darkMode = true\n\n  const toggleSetDarkMode = useCallback(() => {\n    dispatch(updateUserDarkMode({ userDarkMode: !darkMode }))\n  }, [darkMode, dispatch])\n\n  return [darkMode, toggleSetDarkMode]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useSavedTokens(): [string[], (address: string) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedTokens = useSelector((state: AppState) => state.user.savedTokens)\n  const updatedSavedTokens = useCallback(\n    (address: string) => {\n      dispatch(addSavedToken({ address }))\n    },\n    [dispatch]\n  )\n  return [savedTokens ?? [], updatedSavedTokens]\n}\n\nexport function useSavedPools(): [string[], (address: string) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedPools = useSelector((state: AppState) => state.user.savedPools)\n  const updateSavedPools = useCallback(\n    (address: string) => {\n      dispatch(addSavedPool({ address }))\n    },\n    [dispatch]\n  )\n  return [savedPools ?? [], updateSavedPools]\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useURLWarningVisible(): boolean {\n  return useSelector((state: AppState) => state.user.URLWarningVisible)\n}\n\nexport function useURLWarningToggle(): () => void {\n  const dispatch = useDispatch()\n  return useCallback(() => dispatch(toggleURLWarning()), [dispatch])\n}\n","import React, { HTMLProps, useCallback } from 'react'\nimport ReactGA from 'react-ga'\nimport { Link } from 'react-router-dom'\nimport styled, { keyframes } from 'styled-components'\nimport { darken } from 'polished'\nimport { MEDIA_WIDTHS } from './index'\nimport { ArrowLeft, X, ExternalLink as LinkIconFeather, Trash } from 'react-feather'\n\nexport const ButtonText = styled.button`\n  outline: none;\n  border: none;\n  font-size: inherit;\n  padding: 0;\n  margin: 0;\n  background: none;\n  cursor: pointer;\n\n  :hover {\n    opacity: 0.7;\n  }\n\n  :focus {\n    text-decoration: underline;\n  }\n`\n\nexport const Button = styled.button.attrs<{ warning: boolean }, { backgroundColor: string }>(({ warning, theme }) => ({\n  backgroundColor: warning ? theme.red1 : theme.primary1,\n}))`\n  padding: 1rem 2rem 1rem 2rem;\n  border-radius: 3rem;\n  cursor: pointer;\n  user-select: none;\n  font-size: 1rem;\n  border: none;\n  outline: none;\n  background-color: ${({ backgroundColor }) => backgroundColor};\n  color: ${({ theme }) => theme.white};\n  width: 100%;\n\n  :hover,\n  :focus {\n    background-color: ${({ backgroundColor }) => darken(0.05, backgroundColor)};\n  }\n\n  :active {\n    background-color: ${({ backgroundColor }) => darken(0.1, backgroundColor)};\n  }\n\n  :disabled {\n    background-color: ${({ theme }) => theme.bg1};\n    color: ${({ theme }) => theme.text4};\n    cursor: auto;\n  }\n`\n\nexport const CloseIcon = styled(X)<{ onClick: () => void }>`\n  cursor: pointer;\n`\n\n// for wrapper react feather icons\nexport const IconWrapper = styled.div<{ stroke?: string; size?: string; marginRight?: string; marginLeft?: string }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: ${({ size }) => size ?? '20px'};\n  height: ${({ size }) => size ?? '20px'};\n  margin-right: ${({ marginRight }) => marginRight ?? 0};\n  margin-left: ${({ marginLeft }) => marginLeft ?? 0};\n  & > * {\n    stroke: ${({ theme, stroke }) => stroke ?? theme.blue1};\n  }\n`\n\n// A button that triggers some onClick result, but looks like a link.\nexport const LinkStyledButton = styled.button<{ disabled?: boolean }>`\n  border: none;\n  text-decoration: none;\n  background: none;\n\n  cursor: ${({ disabled }) => (disabled ? 'default' : 'pointer')};\n  color: ${({ theme, disabled }) => (disabled ? theme.text2 : theme.primary1)};\n  font-weight: 500;\n\n  :hover {\n    text-decoration: ${({ disabled }) => (disabled ? null : 'underline')};\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: ${({ disabled }) => (disabled ? null : 'underline')};\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`\n\n// An internal link from the react-router-dom library that is correctly styled\nexport const StyledInternalLink = styled(Link)<{ fontSize?: string }>`\n  text-decoration: none;\n  cursor: pointer;\n  color: ${({ theme }) => theme.primary1};\n  font-weight: 500;\n  font-size: ${({ fontSize }) => fontSize ?? '16px'};\n\n  :hover {\n    text-decoration: none;\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: none;\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`\n\nconst StyledLink = styled.a`\n  text-decoration: none;\n  cursor: pointer;\n  color: ${({ theme }) => theme.primary1};\n  font-weight: 500;\n  display: inline;\n  flex-direction: center;\n  align-items: center;\n\n  :hover {\n    text-decoration: underline;\n    text-decoration: none;\n    opacity: 0.7;\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: none;\n  }\n\n  :active {\n    outline: none;\n    text-decoration: none;\n  }\n`\n\nconst LinkIconWrapper = styled.a`\n  text-decoration: none;\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n\n  :hover {\n    text-decoration: none;\n    opacity: 0.7;\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: none;\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`\n\nexport const LinkIcon = styled(LinkIconFeather)`\n  height: 16px;\n  width: 18px;\n  margin-left: 10px;\n  stroke: ${({ theme }) => theme.blue1};\n`\n\nexport const TrashIcon = styled(Trash)`\n  height: 16px;\n  width: 18px;\n  margin-left: 10px;\n  stroke: ${({ theme }) => theme.text3};\n\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n\n  :hover {\n    opacity: 0.7;\n  }\n`\n\nconst rotateImg = keyframes`\n  0% {\n    transform: perspective(1000px) rotateY(0deg);\n  }\n\n  100% {\n    transform: perspective(1000px) rotateY(360deg);\n  }\n`\n\nexport const UniTokenAnimated = styled.img`\n  animation: ${rotateImg} 5s cubic-bezier(0.83, 0, 0.17, 1) infinite;\n  padding: 2rem 0 0 0;\n  filter: drop-shadow(0px 2px 4px rgba(0, 0, 0, 0.15));\n`\n\n/**\n * Outbound link that handles firing google analytics events\n */\nexport function ExternalLink({\n  target = '_blank',\n  href,\n  rel = 'noopener noreferrer',\n  ...rest\n}: Omit<HTMLProps<HTMLAnchorElement>, 'as' | 'ref' | 'onClick'> & { href: string }) {\n  const handleClick = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement>) => {\n      // don't prevent default, don't redirect if it's a new tab\n      if (target === '_blank' || event.ctrlKey || event.metaKey) {\n        ReactGA.outboundLink({ label: href }, () => {\n          console.debug('Fired outbound link event', href)\n        })\n      } else {\n        event.preventDefault()\n        // send a ReactGA event and then trigger a location change\n        ReactGA.outboundLink({ label: href }, () => {\n          window.location.href = href\n        })\n      }\n    },\n    [href, target]\n  )\n  return <StyledLink target={target} rel={rel} href={href} onClick={handleClick} {...rest} />\n}\n\nexport function ExternalLinkIcon({\n  target = '_blank',\n  href,\n  rel = 'noopener noreferrer',\n  ...rest\n}: Omit<HTMLProps<HTMLAnchorElement>, 'as' | 'ref' | 'onClick'> & { href: string }) {\n  const handleClick = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement>) => {\n      // don't prevent default, don't redirect if it's a new tab\n      if (target === '_blank' || event.ctrlKey || event.metaKey) {\n        ReactGA.outboundLink({ label: href }, () => {\n          console.debug('Fired outbound link event', href)\n        })\n      } else {\n        event.preventDefault()\n        // send a ReactGA event and then trigger a location change\n        ReactGA.outboundLink({ label: href }, () => {\n          window.location.href = href\n        })\n      }\n    },\n    [href, target]\n  )\n  return (\n    <LinkIconWrapper target={target} rel={rel} href={href} onClick={handleClick} {...rest}>\n      <LinkIcon />\n    </LinkIconWrapper>\n  )\n}\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nexport const Spinner = styled.img`\n  animation: 2s ${rotate} linear infinite;\n  width: 16px;\n  height: 16px;\n`\n\nconst BackArrowLink = styled(StyledInternalLink)`\n  color: ${({ theme }) => theme.text1};\n`\nexport function BackArrow({ to }: { to: string }) {\n  return (\n    <BackArrowLink to={to}>\n      <ArrowLeft />\n    </BackArrowLink>\n  )\n}\n\nexport const CustomLightSpinner = styled(Spinner)<{ size: string }>`\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n`\n\nexport const OnlyMedium = styled.span`\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    display: none;\n  `};\n`\n\nexport const HideMedium = styled.span`\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    display: none;\n  `};\n`\n\nexport const HideSmall = styled.span`\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    display: none;\n  `};\n`\n\nexport const HideExtraSmall = styled.span`\n  ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n    display: none;\n  `};\n`\n\nexport const ExtraSmallOnly = styled.span`\n  display: none;\n  ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n    display: block;\n  `};\n`\n","import React, { useMemo } from 'react'\nimport styled, {\n  ThemeProvider as StyledComponentsThemeProvider,\n  createGlobalStyle,\n  css,\n  DefaultTheme,\n} from 'styled-components'\nimport { useIsDarkMode } from '../state/user/hooks'\nimport { Text, TextProps } from 'rebass'\nimport { Colors } from './styled'\n\nexport * from './components'\n\nexport const MEDIA_WIDTHS = {\n  upToExtraSmall: 500,\n  upToSmall: 720,\n  upToMedium: 960,\n  upToLarge: 1280,\n}\n\nconst mediaWidthTemplates: { [width in keyof typeof MEDIA_WIDTHS]: typeof css } = Object.keys(MEDIA_WIDTHS).reduce(\n  (accumulator, size) => {\n    ;(accumulator as any)[size] = (a: any, b: any, c: any) => css`\n      @media (max-width: ${(MEDIA_WIDTHS as any)[size]}px) {\n        ${css(a, b, c)}\n      }\n    `\n    return accumulator\n  },\n  {}\n) as any\n\nconst white = '#FFFFFF'\nconst black = '#000000'\n\nexport function colors(darkMode: boolean): Colors {\n  return {\n    // base\n    white,\n    black,\n\n    // text\n    text1: darkMode ? '#ffffff' : '#ffffff',\n    text2: darkMode ? '#ffffff' : '#ffffff',\n    text3: darkMode ? '#6C7284' : '#6C7284',\n    text4: darkMode ? '#565A69' : '#565A69',\n    text5: darkMode ? '#0000001c' : '#0000001c',\n\n    // backgrounds / greys\n    bg0: darkMode ? '#35f593' : '#35f593',\n    bg1: darkMode ? '#3fcf72b8' : '#3fcf72b8',\n    bg2: darkMode ? '#0000001c' : '#0000001c',\n    bg3: darkMode ? '#40444F' : '#40444F',\n    bg4: darkMode ? '#565A69' : '#565A69',\n    bg5: darkMode ? '#6C7284' : '#6C7284',\n\n    //specialty colors\n    modalBG: darkMode ? 'rgba(0,0,0,.425)' : 'rgba(0,0,0,0.3)',\n    advancedBG: darkMode ? 'rgba(0,0,0,0.1)' : 'rgba(203,252,187,0.6)',\n\n    //primary colors\n    primary1: darkMode ? '#2d2169' : '#2d2169',\n    primary2: darkMode ? '#3680E7' : '#3680E7',\n    primary3: darkMode ? '#4D8FEA' : '#4D8FEA',\n    primary4: darkMode ? '#376bad70' : '#376bad70',\n    primary5: darkMode ? '#153d6f70' : '#153d6f70',\n\n    // color text\n    primaryText1: darkMode ? '#6da8ff' : '#6da8ff',\n\n    // secondary colors\n    secondary1: darkMode ? '#2d2169' : '#2d2169',\n    secondary2: darkMode ? '#17000b26' : '#17000b26',\n    secondary3: darkMode ? '#17000b26' : '#17000b26',\n\n    // other\n    pink1: '#B3FFDA',\n    red1: '#FD4040',\n    red2: '#F82D3A',\n    red3: '#D60000',\n    green1: '#ffffff0',\n    yellow1: '#FFE270',\n    yellow2: '#F3841E',\n    yellow3: '#F3B71E',\n    blue1: '#2d2169',\n    blue2: '#5199FF',\n\n    // dont wanna forget these blue yet\n    // blue4: darkMode ? '#153d6f70' : '#C4D9F8',\n    // blue5: darkMode ? '#153d6f70' : '#EBF4FF',\n  }\n}\n\nexport function theme(darkMode: boolean): DefaultTheme {\n  return {\n    ...colors(darkMode),\n\n    grids: {\n      sm: 8,\n      md: 12,\n      lg: 24,\n    },\n\n    //shadows\n    shadow1: darkMode ? '#000' : '#2F80ED',\n\n    // media queries\n    mediaWidth: mediaWidthTemplates,\n\n    // css snippets\n    flexColumnNoWrap: css`\n      display: flex;\n      flex-flow: column nowrap;\n    `,\n    flexRowNoWrap: css`\n      display: flex;\n      flex-flow: row nowrap;\n    `,\n  }\n}\n\nexport default function ThemeProvider({ children }: { children: React.ReactNode }) {\n  const darkMode = useIsDarkMode()\n\n  const themeObject = useMemo(() => theme(darkMode), [darkMode])\n\n  return <StyledComponentsThemeProvider theme={themeObject}>{children}</StyledComponentsThemeProvider>\n}\n\nconst TextWrapper = styled(Text)<{ color: keyof Colors }>`\n  color: ${({ color, theme }) => (theme as any)[color]};\n`\n\nexport const TYPE = {\n  main(props: TextProps) {\n    return <TextWrapper fontWeight={500} color={'text2'} {...props} />\n  },\n  link(props: TextProps) {\n    return <TextWrapper fontWeight={500} color={'primary1'} {...props} />\n  },\n  label(props: TextProps) {\n    return <TextWrapper fontWeight={500} color={'text1'} {...props} />\n  },\n  black(props: TextProps) {\n    return <TextWrapper fontWeight={500} color={'text1'} {...props} />\n  },\n  white(props: TextProps) {\n    return <TextWrapper fontWeight={500} color={'white'} {...props} />\n  },\n  body(props: TextProps) {\n    return <TextWrapper fontWeight={400} fontSize={16} color={'text1'} {...props} />\n  },\n  largeHeader(props: TextProps) {\n    return <TextWrapper fontWeight={600} fontSize={24} color={'text1'} {...props} />\n  },\n  mediumHeader(props: TextProps) {\n    return <TextWrapper fontWeight={500} fontSize={20} color={'text3'} {...props} />\n  },\n  subHeader(props: TextProps) {\n    return <TextWrapper fontWeight={400} fontSize={14} {...props} />\n  },\n  small(props: TextProps) {\n    return <TextWrapper fontWeight={500} fontSize={11} {...props} />\n  },\n  blue(props: TextProps) {\n    return <TextWrapper fontWeight={500} color={'blue1'} {...props} />\n  },\n  yellow(props: TextProps) {\n    return <TextWrapper fontWeight={500} color={'yellow3'} {...props} />\n  },\n  darkGray(props: TextProps) {\n    return <TextWrapper fontWeight={500} color={'text3'} {...props} />\n  },\n  gray(props: TextProps) {\n    return <TextWrapper fontWeight={500} color={'bg3'} {...props} />\n  },\n  italic(props: TextProps) {\n    return <TextWrapper fontWeight={500} fontSize={12} fontStyle={'italic'} color={'text2'} {...props} />\n  },\n  error({ error, ...props }: { error: boolean } & TextProps) {\n    return <TextWrapper fontWeight={500} color={error ? 'red1' : 'text2'} {...props} />\n  },\n}\n\nexport const FixedGlobalStyle = createGlobalStyle`\nhtml, input, textarea, button {\n  font-family: 'Inter', sans-serif;\n  font-display: fallback;\n}\n@supports (font-variation-settings: normal) {\n  html, input, textarea, button {\n    font-family: 'Inter var', sans-serif;\n  }\n}\n\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n}\n\n a {\n   color: ${colors(false).blue1};\n }\n\n* {\n  box-sizing: border-box;\n}\n\nbutton {\n  user-select: none;\n}\n\nhtml {\n  font-size: 16px;\n  font-variant: none;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  font-feature-settings: 'ss01' on, 'ss02' on, 'cv01' on, 'cv03' on;\n\n}\n`\n\nexport const ThemedGlobalStyle = createGlobalStyle`\nhtml {\n  color: ${({ theme }) => theme.text1};\n  background-color: ${({ theme }) => theme.bg1};\n}\n\n.three-line-legend-dark {\n\twidth: 100%;\n\theight: 70px;\n\tposition: absolute;\n\tpadding: 8px;\n\tfont-size: 12px;\n\tcolor: white;\n\tbackground-color: transparent;\n\ttext-align: left;\n\tz-index: 10;\n  pointer-events: none;\n}\n\n.tv-lightweight-charts{\n  width: 100% !important;\n\n  & > * {\n    width: 100% !important;\n  }\n}\n\nbody {\n  min-height: 100vh;\n  background-position: 0 -30vh;\n  background-repeat: no-repeat;\n\n}\n`\n","import React, { useRef } from 'react'\nimport { BookOpen, Code, Info, MessageCircle, PieChart } from 'react-feather'\nimport styled from 'styled-components'\nimport { ReactComponent as MenuIcon } from '../../assets/images/menu.svg'\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\nimport { ApplicationModal } from '../../state/application/actions'\nimport { useModalOpen, useToggleModal } from '../../state/application/hooks'\n\nimport { ExternalLink } from '../../theme'\n\nconst StyledMenuIcon = styled(MenuIcon)`\n  path {\n    stroke: ${({ theme }) => theme.text1};\n  }\n`\n\nconst StyledMenuButton = styled.button`\n  width: 100%;\n  height: 100%;\n  border: none;\n  background-color: transparent;\n  margin: 0;\n  padding: 0;\n  height: 35px;\n  background-color: ${({ theme }) => theme.bg3};\n\n  padding: 0.15rem 0.5rem;\n  border-radius: 0.5rem;\n\n  :hover,\n  :focus {\n    cursor: pointer;\n    outline: none;\n    background-color: ${({ theme }) => theme.bg4};\n  }\n\n  svg {\n    margin-top: 2px;\n  }\n`\n\nconst StyledMenu = styled.div`\n  margin-left: 0.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  border: none;\n  text-align: left;\n`\n\nconst MenuFlyout = styled.span`\n  min-width: 8.125rem;\n  background-color: ${({ theme }) => theme.bg3};\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.01);\n  border-radius: 12px;\n  padding: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  font-size: 1rem;\n  position: absolute;\n  top: 4rem;\n  right: 0rem;\n  z-index: 100;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    top: -17.25rem;\n  `};\n`\n\nconst MenuItem = styled(ExternalLink)`\n  flex: 1;\n  padding: 0.5rem 0.5rem;\n  color: ${({ theme }) => theme.text2};\n  :hover {\n    color: ${({ theme }) => theme.text1};\n    cursor: pointer;\n    text-decoration: none;\n  }\n  > svg {\n    margin-right: 8px;\n  }\n`\n\nconst CODE_LINK = 'https://github.com/Uniswap/uniswap-interface'\n\nexport default function Menu() {\n  const node = useRef<HTMLDivElement>()\n  const open = useModalOpen(ApplicationModal.MENU)\n  const toggle = useToggleModal(ApplicationModal.MENU)\n  useOnClickOutside(node, open ? toggle : undefined)\n\n  return (\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/30451\n    <StyledMenu ref={node as any}>\n      <StyledMenuButton onClick={toggle}>\n        <StyledMenuIcon />\n      </StyledMenuButton>\n\n      {open && (\n        <MenuFlyout>\n          <MenuItem id=\"link\" href=\"https://uniswap.org/\">\n            <Info size={14} />\n            About\n          </MenuItem>\n          <MenuItem id=\"link\" href=\"https://uniswap.org/docs/v2\">\n            <BookOpen size={14} />\n            Docs\n          </MenuItem>\n          <MenuItem id=\"link\" href={CODE_LINK}>\n            <Code size={14} />\n            Code\n          </MenuItem>\n          <MenuItem id=\"link\" href=\"https://discord.gg/FCfyBSbCU5\">\n            <MessageCircle size={14} />\n            Discord\n          </MenuItem>\n        </MenuFlyout>\n      )}\n    </StyledMenu>\n  )\n}\n","import { RefObject, useEffect, useRef } from 'react'\n\nexport function useOnClickOutside<T extends HTMLElement>(\n  node: RefObject<T | undefined>,\n  handler: undefined | (() => void)\n) {\n  const handlerRef = useRef<undefined | (() => void)>(handler)\n  useEffect(() => {\n    handlerRef.current = handler\n  }, [handler])\n\n  useEffect(() => {\n    const handleClickOutside = (e: MouseEvent) => {\n      if (node.current?.contains(e.target as Node) ?? false) {\n        return\n      }\n      if (handlerRef.current) handlerRef.current()\n    }\n\n    document.addEventListener('mousedown', handleClickOutside)\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [node])\n}\n","import styled from 'styled-components'\nimport { Box } from 'rebass/styled-components'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport const ResponsiveRow = styled(RowBetween)`\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    flex-direction: column;\n    row-gap: 1rem;\n  `};\n`\n\nexport default Row\n","import { createAction } from '@reduxjs/toolkit'\nimport { TokenData, TokenChartEntry } from './reducer'\nimport { PriceChartEntry, Transaction } from 'types'\n\n// protocol wide info\nexport const updateTokenData = createAction<{ tokens: TokenData[] }>('tokens/updateTokenData')\n\n// add token address to byAddress\nexport const addTokenKeys = createAction<{ tokenAddresses: string[] }>('tokens/addTokenKeys')\n\n// add list of pools token is in\nexport const addPoolAddresses = createAction<{ tokenAddress: string; poolAddresses: string[] }>(\n  'tokens/addPoolAddresses'\n)\n\n// tvl and volume data over time\nexport const updateChartData = createAction<{ tokenAddress: string; chartData: TokenChartEntry[] }>(\n  'tokens/updateChartData'\n)\n\n// transactions\nexport const updateTransactions = createAction<{ tokenAddress: string; transactions: Transaction[] }>(\n  'tokens/updateTransactions'\n)\n\n// price data at arbitrary intervals\nexport const updatePriceData = createAction<{\n  tokenAddress: string\n  secondsInterval: number\n  priceData: PriceChartEntry[] | undefined\n  oldestFetchedTimestamp: number\n}>('tokens/updatePriceData')\n","import { ApolloClient, InMemoryCache } from '@apollo/client'\n\nexport const client = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/avadex/v3',\n  cache: new InMemoryCache(),\n  queryDeduplication: true,\n  defaultOptions: {\n    watchQuery: {\n      fetchPolicy: 'no-cache',\n    },\n    query: {\n      fetchPolicy: 'no-cache',\n      errorPolicy: 'all',\n    },\n  },\n})\n\nexport const healthClient = new ApolloClient({\n  uri: 'https://api.thegraph.com/index-node/graphql',\n  cache: new InMemoryCache(),\n})\n\nexport const blockClient = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/dasconnor/avalanche-blocks',\n  cache: new InMemoryCache(),\n  queryDeduplication: true,\n  defaultOptions: {\n    watchQuery: {\n      fetchPolicy: 'network-only',\n    },\n    query: {\n      fetchPolicy: 'network-only',\n      errorPolicy: 'all',\n    },\n  },\n})\n","import gql from 'graphql-tag'\nimport { client } from 'apollo/client'\n\nexport const POOLS_FOR_TOKEN = gql`\n  query topPools($address: Bytes!) {\n    asToken0: pools(first: 200, orderBy: totalValueLockedUSD, orderDirection: desc, where: { token0: $address }) {\n      id\n    }\n    asToken1: pools(first: 200, orderBy: totalValueLockedUSD, orderDirection: desc, where: { token1: $address }) {\n      id\n    }\n  }\n`\n\ninterface PoolsForTokenResponse {\n  asToken0: {\n    id: string\n  }[]\n  asToken1: {\n    id: string\n  }[]\n}\n\n/**\n * Fetch top addresses by volume\n */\nexport async function fetchPoolsForToken(\n  address: string\n): Promise<{\n  loading: boolean\n  error: boolean\n  addresses: string[] | undefined\n}> {\n  try {\n    const { loading, error, data } = await client.query<PoolsForTokenResponse>({\n      query: POOLS_FOR_TOKEN,\n      variables: {\n        address: address,\n      },\n      fetchPolicy: 'cache-first',\n    })\n\n    if (loading || error || !data) {\n      return {\n        loading,\n        error: Boolean(error),\n        addresses: undefined,\n      }\n    }\n\n    const formattedData = data.asToken0.concat(data.asToken1).map((p) => p.id)\n\n    return {\n      loading,\n      error: Boolean(error),\n      addresses: formattedData,\n    }\n  } catch {\n    return {\n      loading: false,\n      error: true,\n      addresses: undefined,\n    }\n  }\n}\n","import dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\nimport gql from 'graphql-tag'\nimport { client } from 'apollo/client'\nimport { TokenChartEntry } from 'state/tokens/reducer'\n\n// format dayjs with the libraries that we need\ndayjs.extend(utc)\ndayjs.extend(weekOfYear)\nconst ONE_DAY_UNIX = 24 * 60 * 60\n\nconst TOKEN_CHART = gql`\n  query tokenDayDatas($startTime: Int!, $skip: Int!, $address: Bytes!) {\n    tokenDayDatas(\n      first: 1000\n      skip: $skip\n      where: { token: $address, date_gt: $startTime }\n      orderBy: date\n      orderDirection: asc\n    ) {\n      date\n      volumeUSD\n      totalValueLockedUSD\n    }\n  }\n`\n\ninterface ChartResults {\n  tokenDayDatas: {\n    date: number\n    volumeUSD: string\n    totalValueLockedUSD: string\n  }[]\n}\n\nexport async function fetchTokenChartData(address: string) {\n  let data: {\n    date: number\n    volumeUSD: string\n    totalValueLockedUSD: string\n  }[] = []\n  const startTimestamp = 1619170975\n  const endTimestamp = dayjs.utc().unix()\n\n  let error = false\n  let skip = 0\n  let allFound = false\n\n  try {\n    while (!allFound) {\n      const { data: chartResData, error, loading } = await client.query<ChartResults>({\n        query: TOKEN_CHART,\n        variables: {\n          address: address,\n          startTime: startTimestamp,\n          skip,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      if (!loading) {\n        skip += 1000\n        if (chartResData.tokenDayDatas.length < 1000 || error) {\n          allFound = true\n        }\n        if (chartResData) {\n          data = data.concat(chartResData.tokenDayDatas)\n        }\n      }\n    }\n  } catch {\n    error = true\n  }\n\n  if (data) {\n    const formattedExisting = data.reduce((accum: { [date: number]: TokenChartEntry }, dayData) => {\n      const roundedDate = parseInt((dayData.date / ONE_DAY_UNIX).toFixed(0))\n      accum[roundedDate] = {\n        date: dayData.date,\n        volumeUSD: parseFloat(dayData.volumeUSD),\n        totalValueLockedUSD: parseFloat(dayData.totalValueLockedUSD),\n      }\n      return accum\n    }, {})\n\n    const firstEntry = formattedExisting[parseInt(Object.keys(formattedExisting)[0])]\n\n    // fill in empty days ( there will be no day datas if no trades made that day )\n    let timestamp = firstEntry?.date ?? startTimestamp\n    let latestTvl = firstEntry?.totalValueLockedUSD ?? 0\n    while (timestamp < endTimestamp - ONE_DAY_UNIX) {\n      const nextDay = timestamp + ONE_DAY_UNIX\n      const currentDayIndex = parseInt((nextDay / ONE_DAY_UNIX).toFixed(0))\n      if (!Object.keys(formattedExisting).includes(currentDayIndex.toString())) {\n        formattedExisting[currentDayIndex] = {\n          date: nextDay,\n          volumeUSD: 0,\n          totalValueLockedUSD: latestTvl,\n        }\n      } else {\n        latestTvl = formattedExisting[currentDayIndex].totalValueLockedUSD\n      }\n      timestamp = nextDay\n    }\n\n    const dateMap = Object.keys(formattedExisting).map((key) => {\n      return formattedExisting[parseInt(key)]\n    })\n\n    return {\n      data: dateMap,\n      error: false,\n    }\n  } else {\n    return {\n      data: undefined,\n      error,\n    }\n  }\n}\n","import { ApolloClient, NormalizedCacheObject } from '@apollo/client'\nimport dayjs from 'dayjs'\n\n/**\n * Used to get large amounts of data when\n * @param query\n * @param localClient\n * @param vars - any variables that are passed in every query\n * @param values - the keys that are used as the values to map over if\n * @param skipCount - amount of entities to skip per query\n */\nexport async function splitQuery<Type>(\n  query: any,\n  client: ApolloClient<NormalizedCacheObject>,\n  vars: any[],\n  values: any[],\n  skipCount = 1000\n) {\n  let fetchedData = {}\n  let allFound = false\n  let skip = 0\n  try {\n    while (!allFound) {\n      let end = values.length\n      if (skip + skipCount < values.length) {\n        end = skip + skipCount\n      }\n      const sliced = values.slice(skip, end)\n      const result = await client.query<Type>({\n        query: query(...vars, sliced),\n        fetchPolicy: 'network-only',\n      })\n      fetchedData = {\n        ...fetchedData,\n        ...result.data,\n      }\n      if (Object.keys(result.data).length < skipCount || skip + skipCount > values.length) {\n        allFound = true\n      } else {\n        skip += skipCount\n      }\n    }\n    return fetchedData\n  } catch (e) {\n    console.log(e)\n    return undefined\n  }\n}\n\nexport function useDeltaTimestamps(): [number, number, number] {\n  const utcCurrentTime = dayjs()\n  const t1 = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\n  const t2 = utcCurrentTime.subtract(2, 'day').startOf('minute').unix()\n  const tWeek = utcCurrentTime.subtract(1, 'week').startOf('minute').unix()\n  return [t1, t2, tWeek]\n}\n","import gql from 'graphql-tag'\nimport { useState, useEffect, useMemo } from 'react'\nimport { splitQuery } from 'utils/queries'\nimport { blockClient } from 'apollo/client'\n\nexport const GET_BLOCKS = (timestamps: string[]) => {\n  let queryString = 'query blocks {'\n  queryString += timestamps.map((timestamp) => {\n    return `t${timestamp}:blocks(first: 1, orderBy: timestamp, orderDirection: desc, where: { timestamp_gt: ${timestamp}, timestamp_lt: ${\n      timestamp + 600\n    } }) {\n        number\n      }`\n  })\n  queryString += '}'\n  return gql(queryString)\n}\n\n/**\n * for a given array of timestamps, returns block entities\n * @param timestamps\n */\nexport function useBlocksFromTimestamps(\n  timestamps: number[]\n): {\n  blocks:\n    | {\n        timestamp: string\n        number: any\n      }[]\n    | undefined\n  error: boolean\n} {\n  const [blocks, setBlocks] = useState<any>()\n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n    async function fetchData() {\n      const results = await splitQuery(GET_BLOCKS, blockClient, [], timestamps)\n      if (results) {\n        setBlocks(results)\n      } else {\n        setError(true)\n      }\n    }\n    if (!blocks && !error) {\n      fetchData()\n    }\n  })\n\n  const blocksFormatted = useMemo(() => {\n    if (blocks) {\n      const formatted = []\n      for (const t in blocks) {\n        if (blocks[t].length > 0) {\n          formatted.push({\n            timestamp: t.split('t')[1],\n            number: blocks[t][0]['number'],\n          })\n        }\n      }\n      return formatted\n    }\n    return undefined\n  }, [blocks])\n\n  return {\n    blocks: blocksFormatted,\n    error,\n  }\n}\n\n/**\n * @notice Fetches block objects for an array of timestamps.\n * @dev blocks are returned in chronological order (ASC) regardless of input.\n * @dev blocks are returned at string representations of Int\n * @dev timestamps are returns as they were provided; not the block time.\n * @param {Array} timestamps\n */\nexport async function getBlocksFromTimestamps(timestamps: number[], skipCount = 500) {\n  if (timestamps?.length === 0) {\n    return []\n  }\n  const fetchedData: any = await splitQuery(GET_BLOCKS, blockClient, [], timestamps, skipCount)\n\n  const blocks: any[] = []\n  if (fetchedData) {\n    for (const t in fetchedData) {\n      if (fetchedData[t].length > 0) {\n        blocks.push({\n          timestamp: t.split('t')[1],\n          number: fetchedData[t][0]['number'],\n        })\n      }\n    }\n  }\n  return blocks\n}\n","import dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\nimport gql from 'graphql-tag'\nimport { client } from 'apollo/client'\nimport { getBlocksFromTimestamps } from 'hooks/useBlocksFromTimestamps'\nimport { PriceChartEntry } from 'types'\n\n// format dayjs with the libraries that we need\ndayjs.extend(utc)\ndayjs.extend(weekOfYear)\n\nexport const PRICES_BY_BLOCK = (tokenAddress: string, blocks: any) => {\n  let queryString = 'query blocks {'\n  queryString += blocks.map(\n    (block: any) => `\n      t${block.timestamp}:token(id:\"${tokenAddress}\", block: { number: ${block.number} }) { \n        derivedETH\n      }\n    `\n  )\n  queryString += ','\n  queryString += blocks.map(\n    (block: any) => `\n      b${block.timestamp}: bundle(id:\"1\", block: { number: ${block.number} }) { \n        ethPriceUSD\n      }\n    `\n  )\n\n  queryString += '}'\n  return gql(queryString)\n}\n\nconst PRICE_CHART = gql`\n  query tokenHourDatas($startTime: Int!, $skip: Int!, $address: Bytes!) {\n    tokenHourDatas(\n      first: 100\n      skip: $skip\n      where: { token: $address, periodStartUnix_gt: $startTime }\n      orderBy: periodStartUnix\n      orderDirection: asc\n    ) {\n      periodStartUnix\n      high\n      low\n      open\n      close\n    }\n  }\n`\n\ninterface PriceResults {\n  tokenHourDatas: {\n    periodStartUnix: number\n    high: string\n    low: string\n    open: string\n    close: string\n  }[]\n}\n\nexport async function fetchTokenPriceData(\n  address: string,\n  interval: number,\n  startTimestamp: number\n): Promise<{\n  data: PriceChartEntry[]\n  error: boolean\n}> {\n  // start and end bounds\n\n  try {\n    const endTimestamp = dayjs.utc().unix()\n\n    if (!startTimestamp) {\n      console.log('Error constructing price start timestamp')\n      return {\n        data: [],\n        error: false,\n      }\n    }\n\n    // create an array of hour start times until we reach current hour\n    const timestamps = []\n    let time = startTimestamp\n    while (time <= endTimestamp) {\n      timestamps.push(time)\n      time += interval\n    }\n\n    // backout if invalid timestamp format\n    if (timestamps.length === 0) {\n      return {\n        data: [],\n        error: false,\n      }\n    }\n\n    // fetch blocks based on timestamp\n    const blocks = await getBlocksFromTimestamps(timestamps, 500)\n    if (!blocks || blocks.length === 0) {\n      console.log('Error fetching blocks')\n      return {\n        data: [],\n        error: false,\n      }\n    }\n    let data: {\n      periodStartUnix: number\n      high: string\n      low: string\n      open: string\n      close: string\n    }[] = []\n    let skip = 0\n    let allFound = false\n    while (!allFound) {\n      const { data: priceData, errors, loading } = await client.query<PriceResults>({\n        query: PRICE_CHART,\n        variables: {\n          address: address,\n          startTime: startTimestamp,\n          skip,\n        },\n        fetchPolicy: 'no-cache',\n      })\n      if (!loading) {\n        skip += 100\n        if ((priceData && priceData.tokenHourDatas.length < 100) || errors) {\n          allFound = true\n        }\n        if (priceData) {\n          data = data.concat(priceData.tokenHourDatas)\n        }\n      }\n    }\n\n    const formattedHistory = data.map((d) => {\n      return {\n        time: d.periodStartUnix,\n        open: parseFloat(d.open),\n        close: parseFloat(d.close),\n        high: parseFloat(d.high),\n        low: parseFloat(d.low),\n      }\n    })\n\n    return {\n      data: formattedHistory,\n      error: false,\n    }\n  } catch (e) {\n    console.log(e)\n    return {\n      data: [],\n      error: true,\n    }\n  }\n}\n","export interface Block {\n  number: number\n  timestamp: string\n}\n\nexport interface ChartDayData {\n  date: number\n  volumeUSD: number\n  tvlUSD: number\n}\n\nexport enum TransactionType {\n  SWAP,\n  MINT,\n  BURN,\n}\n\nexport type Transaction = {\n  type: TransactionType\n  hash: string\n  timestamp: string\n  sender: string\n  token0Symbol: string\n  token1Symbol: string\n  token0Address: string\n  token1Address: string\n  amountUSD: number\n  amountToken0: number\n  amountToken1: number\n}\n\n/**\n * Formatted type for Candlestick charts\n */\nexport type PriceChartEntry = {\n  time: number // unix timestamp\n  open: number\n  close: number\n  high: number\n  low: number\n}\n","import { Token } from '@uniswap/sdk-core'\nimport { WETH_ADDRESS } from '../constants/index'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name\n  )\n}\n\nexport function formatTokenSymbol(address: string, symbol: string) {\n  if (address === WETH_ADDRESS) {\n    return 'AVAX'\n  }\n  return symbol\n}\n\nexport function formatTokenName(address: string, name: string) {\n  if (address === WETH_ADDRESS) {\n    return 'ETHER'\n  }\n  return name\n}\n","import { client } from 'apollo/client'\nimport gql from 'graphql-tag'\nimport { Transaction, TransactionType } from 'types'\nimport { formatTokenSymbol } from 'utils/tokens'\n\nconst GLOBAL_TRANSACTIONS = gql`\n  query transactions($address: Bytes!) {\n    mintsAs0: mints(first: 500, orderBy: timestamp, orderDirection: desc, where: { token0: $address }) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      sender\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    mintsAs1: mints(first: 500, orderBy: timestamp, orderDirection: desc, where: { token0: $address }) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      sender\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    swapsAs0: swaps(first: 500, orderBy: timestamp, orderDirection: desc, where: { token0: $address }) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    swapsAs1: swaps(first: 500, orderBy: timestamp, orderDirection: desc, where: { token1: $address }) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    burnsAs0: burns(first: 500, orderBy: timestamp, orderDirection: desc, where: { token0: $address }) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      amount0\n      amount1\n      amountUSD\n    }\n    burnsAs1: burns(first: 500, orderBy: timestamp, orderDirection: desc, where: { token1: $address }) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      amount0\n      amount1\n      amountUSD\n    }\n  }\n`\n\ninterface TransactionResults {\n  mintsAs0: {\n    timestamp: string\n    transaction: {\n      id: string\n    }\n    pool: {\n      token0: {\n        id: string\n        symbol: string\n      }\n      token1: {\n        id: string\n        symbol: string\n      }\n    }\n    origin: string\n    amount0: string\n    amount1: string\n    amountUSD: string\n  }[]\n  mintsAs1: {\n    timestamp: string\n    transaction: {\n      id: string\n    }\n    pool: {\n      token0: {\n        id: string\n        symbol: string\n      }\n      token1: {\n        id: string\n        symbol: string\n      }\n    }\n    origin: string\n    amount0: string\n    amount1: string\n    amountUSD: string\n  }[]\n  swapsAs0: {\n    timestamp: string\n    transaction: {\n      id: string\n    }\n    pool: {\n      token0: {\n        id: string\n        symbol: string\n      }\n      token1: {\n        id: string\n        symbol: string\n      }\n    }\n    origin: string\n    amount0: string\n    amount1: string\n    amountUSD: string\n  }[]\n  swapsAs1: {\n    timestamp: string\n    transaction: {\n      id: string\n    }\n    pool: {\n      token0: {\n        id: string\n        symbol: string\n      }\n      token1: {\n        id: string\n        symbol: string\n      }\n    }\n    origin: string\n    amount0: string\n    amount1: string\n    amountUSD: string\n  }[]\n  burnsAs0: {\n    timestamp: string\n    transaction: {\n      id: string\n    }\n    pool: {\n      token0: {\n        id: string\n        symbol: string\n      }\n      token1: {\n        id: string\n        symbol: string\n      }\n    }\n    owner: string\n    amount0: string\n    amount1: string\n    amountUSD: string\n  }[]\n  burnsAs1: {\n    timestamp: string\n    transaction: {\n      id: string\n    }\n    pool: {\n      token0: {\n        id: string\n        symbol: string\n      }\n      token1: {\n        id: string\n        symbol: string\n      }\n    }\n    owner: string\n    amount0: string\n    amount1: string\n    amountUSD: string\n  }[]\n}\n\nexport async function fetchTokenTransactions(\n  address: string\n): Promise<{ data: Transaction[] | undefined; error: boolean; loading: boolean }> {\n  try {\n    const { data, error, loading } = await client.query<TransactionResults>({\n      query: GLOBAL_TRANSACTIONS,\n      variables: {\n        address: address,\n      },\n      fetchPolicy: 'cache-first',\n    })\n\n    if (error) {\n      return {\n        data: undefined,\n        error: true,\n        loading: false,\n      }\n    }\n\n    if (loading && !data) {\n      return {\n        data: undefined,\n        error: false,\n        loading: true,\n      }\n    }\n\n    const mints0 = data.mintsAs0.map((m) => {\n      return {\n        type: TransactionType.MINT,\n        hash: m.transaction.id,\n        timestamp: m.timestamp,\n        sender: m.origin,\n        token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\n        token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\n        token0Address: m.pool.token0.id,\n        token1Address: m.pool.token1.id,\n        amountUSD: parseFloat(m.amountUSD),\n        amountToken0: parseFloat(m.amount0),\n        amountToken1: parseFloat(m.amount1),\n      }\n    })\n    const mints1 = data.mintsAs1.map((m) => {\n      return {\n        type: TransactionType.MINT,\n        hash: m.transaction.id,\n        timestamp: m.timestamp,\n        sender: m.origin,\n        token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\n        token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\n        token0Address: m.pool.token0.id,\n        token1Address: m.pool.token1.id,\n        amountUSD: parseFloat(m.amountUSD),\n        amountToken0: parseFloat(m.amount0),\n        amountToken1: parseFloat(m.amount1),\n      }\n    })\n\n    const burns0 = data.burnsAs0.map((m) => {\n      return {\n        type: TransactionType.BURN,\n        hash: m.transaction.id,\n        timestamp: m.timestamp,\n        sender: m.owner,\n        token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\n        token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\n        token0Address: m.pool.token0.id,\n        token1Address: m.pool.token1.id,\n        amountUSD: parseFloat(m.amountUSD),\n        amountToken0: parseFloat(m.amount0),\n        amountToken1: parseFloat(m.amount1),\n      }\n    })\n    const burns1 = data.burnsAs1.map((m) => {\n      return {\n        type: TransactionType.BURN,\n        hash: m.transaction.id,\n        timestamp: m.timestamp,\n        sender: m.owner,\n        token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\n        token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\n        token0Address: m.pool.token0.id,\n        token1Address: m.pool.token1.id,\n        amountUSD: parseFloat(m.amountUSD),\n        amountToken0: parseFloat(m.amount0),\n        amountToken1: parseFloat(m.amount1),\n      }\n    })\n\n    const swaps0 = data.swapsAs0.map((m) => {\n      return {\n        type: TransactionType.SWAP,\n        hash: m.transaction.id,\n        timestamp: m.timestamp,\n        sender: m.origin,\n        token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\n        token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\n        token0Address: m.pool.token0.id,\n        token1Address: m.pool.token1.id,\n        amountUSD: parseFloat(m.amountUSD),\n        amountToken0: parseFloat(m.amount0),\n        amountToken1: parseFloat(m.amount1),\n      }\n    })\n\n    const swaps1 = data.swapsAs1.map((m) => {\n      return {\n        type: TransactionType.SWAP,\n        hash: m.transaction.id,\n        timestamp: m.timestamp,\n        sender: m.origin,\n        token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\n        token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\n        token0Address: m.pool.token0.id,\n        token1Address: m.pool.token1.id,\n        amountUSD: parseFloat(m.amountUSD),\n        amountToken0: parseFloat(m.amount0),\n        amountToken1: parseFloat(m.amount1),\n      }\n    })\n\n    return { data: [...mints0, ...mints1, ...burns0, ...burns1, ...swaps0, ...swaps1], error: false, loading: false }\n  } catch {\n    return {\n      data: undefined,\n      error: true,\n      loading: false,\n    }\n  }\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ROUTER_ADDRESS } from '../constants'\nimport { ChainId, Percent, Token, CurrencyAmount, Fraction, Currency } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nconst ETHERSCAN_PREFIXES: { [chainId in ChainId]: string } = {\n  1: '',\n  3: 'ropsten.',\n  4: 'rinkeby.',\n  5: 'goerli.',\n  43114: '.',\n}\n\nexport function getEtherscanLink(\n  chainId: ChainId,\n  data: string,\n  type: 'transaction' | 'token' | 'address' | 'block'\n): string {\n  const prefix = `https://${ETHERSCAN_PREFIXES[chainId] || ETHERSCAN_PREFIXES[1]}cchain.explorer.avax.network`\n\n  switch (type) {\n    case 'transaction': {\n      return `${prefix}/tx/${data}`\n    }\n    case 'token': {\n      return `${prefix}/token/${data}`\n    }\n    case 'block': {\n      return `${prefix}/block/${data}`\n    }\n    case 'address':\n    default: {\n      return `${prefix}/address/${data}`\n    }\n  }\n}\n\nexport const currentTimestamp = () => new Date().getTime()\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nconst ONE = new Fraction(1, 1)\nexport function calculateSlippageAmount(value: CurrencyAmount<Currency>, slippage: Percent): [JSBI, JSBI] {\n  if (slippage.lessThan(0) || slippage.greaterThan(ONE)) throw new Error('Unexpected slippage')\n  return [value.multiply(ONE.subtract(slippage)).quotient, value.multiply(ONE.add(slippage)).quotient]\n}\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(tokenAddressMap: TokenAddressMap, token?: Token): boolean {\n  return Boolean(token?.isToken && tokenAddressMap[token.chainId as ChainId]?.[token.address])\n}\n\nexport function feeTierPercent(fee: number): string {\n  return (fee / 10000).toPrecision(1) + '%'\n}\n\nexport function notEmpty<TValue>(value: TValue | null | undefined): value is TValue {\n  return value !== null && value !== undefined\n}\n\n/**\n * Returns chain id if chain from chainId supports WETH\n * if not, return undefined\n * @param chainId\n */\nexport function supportedChainId(chainId: number): ChainId | undefined {\n  if (chainId in ChainId) {\n    return chainId\n  }\n  return undefined\n}\n","import { AppState, AppDispatch } from './../index'\nimport { TokenData, TokenChartEntry } from './reducer'\nimport { useCallback, useEffect, useState, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  updateTokenData,\n  addTokenKeys,\n  addPoolAddresses,\n  updateChartData,\n  updatePriceData,\n  updateTransactions,\n} from './actions'\nimport { isAddress } from 'ethers/lib/utils'\nimport { fetchPoolsForToken } from 'data/tokens/poolsForToken'\nimport { fetchTokenChartData } from 'data/tokens/chartData'\nimport { fetchTokenPriceData } from 'data/tokens/priceData'\nimport { fetchTokenTransactions } from 'data/tokens/transactions'\nimport { PriceChartEntry, Transaction } from 'types'\nimport { notEmpty } from 'utils'\nimport dayjs, { OpUnitType } from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\n// format dayjs with the libraries that we need\ndayjs.extend(utc)\n\nexport function useAllTokenData(): {\n  [address: string]: { data: TokenData | undefined; lastUpdated: number | undefined }\n} {\n  return useSelector((state: AppState) => state.tokens.byAddress)\n}\n\nexport function useUpdateTokenData(): (tokens: TokenData[]) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (tokens: TokenData[]) => {\n      dispatch(updateTokenData({ tokens }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useAddTokenKeys(): (addresses: string[]) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback((tokenAddresses: string[]) => dispatch(addTokenKeys({ tokenAddresses })), [dispatch])\n}\n\nexport function useTokenDatas(addresses: string[] | undefined): TokenData[] | undefined {\n  const allTokenData = useAllTokenData()\n  const addTokenKeys = useAddTokenKeys()\n\n  // if token not tracked yet track it\n  addresses?.map((a) => {\n    if (!allTokenData[a]) {\n      addTokenKeys([a])\n    }\n  })\n\n  const data = useMemo(() => {\n    if (!addresses) {\n      return undefined\n    }\n    return addresses\n      .map((a) => {\n        return allTokenData[a]?.data\n      })\n      .filter(notEmpty)\n  }, [addresses, allTokenData])\n\n  return data\n}\n\nexport function useTokenData(address: string | undefined): TokenData | undefined {\n  const allTokenData = useAllTokenData()\n  const addTokenKeys = useAddTokenKeys()\n\n  // if invalid address return\n  if (!address || !isAddress(address)) {\n    return undefined\n  }\n\n  // if token not tracked yet track it\n  if (!allTokenData[address]) {\n    addTokenKeys([address])\n  }\n\n  // return data\n  return allTokenData[address]?.data\n}\n\n/**\n * Get top pools addresses that token is included in\n * If not loaded, fetch and store\n * @param address\n */\nexport function usePoolsForToken(address: string): string[] | undefined {\n  const dispatch = useDispatch<AppDispatch>()\n  const token = useSelector((state: AppState) => state.tokens.byAddress[address])\n  const poolsForToken = token.poolAddresses\n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n    async function fetch() {\n      const { loading, error, addresses } = await fetchPoolsForToken(address)\n      if (!loading && !error && addresses) {\n        dispatch(addPoolAddresses({ tokenAddress: address, poolAddresses: addresses }))\n      }\n      if (error) {\n        setError(error)\n      }\n    }\n    if (!poolsForToken && !error) {\n      fetch()\n    }\n  }, [address, dispatch, error, poolsForToken])\n\n  // return data\n  return poolsForToken\n}\n\n/**\n * Get top pools addresses that token is included in\n * If not loaded, fetch and store\n * @param address\n */\nexport function useTokenChartData(address: string): TokenChartEntry[] | undefined {\n  const dispatch = useDispatch<AppDispatch>()\n  const token = useSelector((state: AppState) => state.tokens.byAddress[address])\n  const chartData = token.chartData\n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n    async function fetch() {\n      const { error, data } = await fetchTokenChartData(address)\n      if (!error && data) {\n        dispatch(updateChartData({ tokenAddress: address, chartData: data }))\n      }\n      if (error) {\n        setError(error)\n      }\n    }\n    if (!chartData && !error) {\n      fetch()\n    }\n  }, [address, dispatch, error, chartData])\n\n  // return data\n  return chartData\n}\n\n/**\n * Get top pools addresses that token is included in\n * If not loaded, fetch and store\n * @param address\n */\nexport function useTokenPriceData(\n  address: string,\n  interval: number,\n  timeWindow: OpUnitType\n): PriceChartEntry[] | undefined {\n  const dispatch = useDispatch<AppDispatch>()\n  const token = useSelector((state: AppState) => state.tokens.byAddress[address])\n  const priceData = token.priceData[interval]\n  const [error, setError] = useState(false)\n\n  // construct timestamps and check if we need to fetch more data\n  const oldestTimestampFetched = token.priceData.oldestFetchedTimestamp\n  const utcCurrentTime = dayjs()\n  const startTimestamp = utcCurrentTime.subtract(1, timeWindow).startOf('hour').unix()\n\n  useEffect(() => {\n    async function fetch() {\n      const { data, error: fetchingError } = await fetchTokenPriceData(address, interval, startTimestamp)\n      if (data) {\n        dispatch(\n          updatePriceData({\n            tokenAddress: address,\n            secondsInterval: interval,\n            priceData: data,\n            oldestFetchedTimestamp: startTimestamp,\n          })\n        )\n      }\n      if (fetchingError) {\n        setError(true)\n      }\n    }\n    if (!priceData && !error) {\n      fetch()\n    }\n  }, [address, dispatch, error, interval, oldestTimestampFetched, priceData, startTimestamp, timeWindow])\n\n  // return data\n  return priceData\n}\n\n/**\n * Get top pools addresses that token is included in\n * If not loaded, fetch and store\n * @param address\n */\nexport function useTokenTransactions(address: string): Transaction[] | undefined {\n  const dispatch = useDispatch<AppDispatch>()\n  const token = useSelector((state: AppState) => state.tokens.byAddress[address])\n  const transactions = token.transactions\n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n    async function fetch() {\n      const { error, data } = await fetchTokenTransactions(address)\n      if (error) {\n        setError(true)\n      } else if (data) {\n        dispatch(updateTransactions({ tokenAddress: address, transactions: data }))\n      }\n    }\n    if (!transactions && !error) {\n      fetch()\n    }\n  }, [address, dispatch, error, transactions])\n\n  // return data\n  return transactions\n}\n","/**\n * gets the amoutn difference plus the % change in change itself (second order change)\n * @param {*} valueNow\n * @param {*} value24HoursAgo\n * @param {*} value48HoursAgo\n */\nexport const get2DayChange = (valueNow: string, value24HoursAgo: string, value48HoursAgo: string): [number, number] => {\n  // get volume info for both 24 hour periods\n  const currentChange = parseFloat(valueNow) - parseFloat(value24HoursAgo)\n  const previousChange = parseFloat(value24HoursAgo) - parseFloat(value48HoursAgo)\n  const adjustedPercentChange = ((currentChange - previousChange) / previousChange) * 100\n  if (isNaN(adjustedPercentChange) || !isFinite(adjustedPercentChange)) {\n    return [currentChange, 0]\n  }\n  return [currentChange, adjustedPercentChange]\n}\n\n/**\n * get standard percent change between two values\n * @param {*} valueNow\n * @param {*} value24HoursAgo\n */\nexport const getPercentChange = (valueNow: string | undefined, value24HoursAgo: string | undefined): number => {\n  if (valueNow && value24HoursAgo) {\n    const change = ((parseFloat(valueNow) - parseFloat(value24HoursAgo)) / parseFloat(value24HoursAgo)) * 100\n    if (isFinite(change)) return change\n  }\n  return 0\n}\n","import { useBlocksFromTimestamps } from 'hooks/useBlocksFromTimestamps'\nimport { useDeltaTimestamps } from 'utils/queries'\nimport { useState, useEffect, useMemo } from 'react'\nimport { client } from 'apollo/client'\nimport gql from 'graphql-tag'\n\nexport interface EthPrices {\n  current: number\n  oneDay: number\n  twoDay: number\n  week: number\n}\n\nexport const ETH_PRICES = gql`\n  query prices($block24: Int!, $block48: Int!, $blockWeek: Int!) {\n    current: bundles(first: 1) {\n      ethPriceUSD\n    }\n    oneDay: bundles(first: 1, block: { number: $block24 }) {\n      ethPriceUSD\n    }\n    twoDay: bundles(first: 1, block: { number: $block48 }) {\n      ethPriceUSD\n    }\n    oneWeek: bundles(first: 1, block: { number: $blockWeek }) {\n      ethPriceUSD\n    }\n  }\n`\n\ninterface PricesResponse {\n  current: {\n    ethPriceUSD: string\n  }[]\n  oneDay: {\n    ethPriceUSD: string\n  }[]\n  twoDay: {\n    ethPriceUSD: string\n  }[]\n  oneWeek: {\n    ethPriceUSD: string\n  }[]\n}\n\nasync function fetchEthPrices(\n  blocks: [number, number, number]\n): Promise<{ data: EthPrices | undefined; error: boolean }> {\n  try {\n    const { data, error } = await client.query<PricesResponse>({\n      query: ETH_PRICES,\n      variables: {\n        block24: blocks[0],\n        block48: blocks[1],\n        blockWeek: blocks[2],\n      },\n    })\n\n    if (error) {\n      return {\n        error: true,\n        data: undefined,\n      }\n    } else if (data) {\n      return {\n        data: {\n          current: parseFloat(data.current[0].ethPriceUSD ?? 0),\n          oneDay: parseFloat(data.oneDay[0]?.ethPriceUSD ?? 0),\n          twoDay: parseFloat(data.twoDay[0]?.ethPriceUSD ?? 0),\n          week: parseFloat(data.oneWeek[0]?.ethPriceUSD ?? 0),\n        },\n        error: false,\n      }\n    } else {\n      return {\n        data: undefined,\n        error: true,\n      }\n    }\n  } catch (e) {\n    console.log(e)\n    return {\n      data: undefined,\n      error: true,\n    }\n  }\n}\n\n/**\n * returns eth prices at current, 24h, 48h, and 1k intervals\n */\nexport function useEthPrices(): EthPrices | undefined {\n  const [prices, setPrices] = useState<EthPrices | undefined>()\n  const [error, setError] = useState(false)\n\n  const [t24, t48, tWeek] = useDeltaTimestamps()\n  const { blocks, error: blockError } = useBlocksFromTimestamps([t24, t48, tWeek])\n\n  const formattedBlocks = useMemo(() => {\n    if (blocks) {\n      return blocks.map((b) => parseFloat(b.number))\n    }\n    return undefined\n  }, [blocks])\n\n  useEffect(() => {\n    async function fetch() {\n      const { data, error } = await fetchEthPrices(formattedBlocks as [number, number, number])\n      if (error || blockError) {\n        setError(true)\n      } else if (data) {\n        setPrices(data)\n      }\n    }\n    if (!prices && !error && formattedBlocks) {\n      fetch()\n    }\n  }, [error, prices, formattedBlocks, blockError])\n\n  return prices\n}\n","import { getPercentChange } from './../../utils/data'\nimport { useQuery } from '@apollo/client'\nimport gql from 'graphql-tag'\nimport { useDeltaTimestamps } from 'utils/queries'\nimport { useBlocksFromTimestamps } from 'hooks/useBlocksFromTimestamps'\nimport { get2DayChange } from 'utils/data'\nimport { TokenData } from 'state/tokens/reducer'\nimport { useEthPrices } from 'hooks/useEthPrices'\nimport { formatTokenSymbol, formatTokenName } from 'utils/tokens'\n\nexport const TOKENS_BULK = (block: number | undefined, tokens: string[]) => {\n  let tokenString = `[`\n  tokens.map((address) => {\n    return (tokenString += `\"${address}\",`)\n  })\n  tokenString += ']'\n  const queryString =\n    `\n    query tokens {\n      tokens(where: {id_in: ${tokenString}},` +\n    (block ? `block: {number: ${block}} ,` : ``) +\n    ` orderBy: totalValueLockedUSD, orderDirection: desc) {\n        id\n        symbol\n        name\n        derivedETH\n        volumeUSD\n        volume\n        txCount\n        totalValueLocked\n        feesUSD\n        totalValueLockedUSD\n      }\n    }\n    `\n  return gql(queryString)\n}\n\ninterface TokenFields {\n  id: string\n  symbol: string\n  name: string\n  derivedETH: string\n  volumeUSD: string\n  volume: string\n  feesUSD: string\n  txCount: string\n  totalValueLocked: string\n  totalValueLockedUSD: string\n}\n\ninterface TokenDataResponse {\n  tokens: TokenFields[]\n  bundles: {\n    ethPriceUSD: string\n  }[]\n}\n\n/**\n * Fetch top addresses by volume\n */\nexport function useFetchedTokenDatas(\n  tokenAddresses: string[]\n): {\n  loading: boolean\n  error: boolean\n  data:\n    | {\n        [address: string]: TokenData\n      }\n    | undefined\n} {\n  // get blocks from historic timestamps\n  const [t24, t48, tWeek] = useDeltaTimestamps()\n\n  const { blocks, error: blockError } = useBlocksFromTimestamps([t24, t48, tWeek])\n  const [block24, block48, blockWeek] = blocks ?? []\n  const ethPrices = useEthPrices()\n\n  const { loading, error, data } = useQuery<TokenDataResponse>(TOKENS_BULK(undefined, tokenAddresses))\n\n  const { loading: loading24, error: error24, data: data24 } = useQuery<TokenDataResponse>(\n    TOKENS_BULK(parseInt(block24?.number), tokenAddresses)\n  )\n\n  const { loading: loading48, error: error48, data: data48 } = useQuery<TokenDataResponse>(\n    TOKENS_BULK(parseInt(block48?.number), tokenAddresses)\n  )\n  const { loading: loadingWeek, error: errorWeek, data: dataWeek } = useQuery<TokenDataResponse>(\n    TOKENS_BULK(parseInt(blockWeek?.number), tokenAddresses)\n  )\n\n  const anyError = Boolean(error || error24 || error48 || blockError || errorWeek)\n  const anyLoading = Boolean(loading || loading24 || loading48 || loadingWeek || !blocks)\n\n  if (!ethPrices) {\n    return {\n      loading: true,\n      error: false,\n      data: undefined,\n    }\n  }\n\n  // return early if not all data yet\n  if (anyError || anyLoading) {\n    return {\n      loading: anyLoading,\n      error: anyError,\n      data: undefined,\n    }\n  }\n\n  const parsed = data?.tokens\n    ? data.tokens.reduce((accum: { [address: string]: TokenFields }, poolData) => {\n        accum[poolData.id] = poolData\n        return accum\n      }, {})\n    : {}\n  const parsed24 = data24?.tokens\n    ? data24.tokens.reduce((accum: { [address: string]: TokenFields }, poolData) => {\n        accum[poolData.id] = poolData\n        return accum\n      }, {})\n    : {}\n  const parsed48 = data48?.tokens\n    ? data48.tokens.reduce((accum: { [address: string]: TokenFields }, poolData) => {\n        accum[poolData.id] = poolData\n        return accum\n      }, {})\n    : {}\n  const parsedWeek = dataWeek?.tokens\n    ? dataWeek.tokens.reduce((accum: { [address: string]: TokenFields }, poolData) => {\n        accum[poolData.id] = poolData\n        return accum\n      }, {})\n    : {}\n\n  // format data and calculate daily changes\n  const formatted = tokenAddresses.reduce((accum: { [address: string]: TokenData }, address) => {\n    const current: TokenFields | undefined = parsed[address]\n    const oneDay: TokenFields | undefined = parsed24[address]\n    const twoDay: TokenFields | undefined = parsed48[address]\n    const week: TokenFields | undefined = parsedWeek[address]\n\n    if (address === '0xDe30da39c46104798bB5aA3fe8B9e0e1F348163F') {\n      console.log(current)\n    }\n\n    const [volumeUSD, volumeUSDChange] =\n      current && oneDay && twoDay\n        ? get2DayChange(current.volumeUSD, oneDay.volumeUSD, twoDay.volumeUSD)\n        : current\n        ? [parseFloat(current.volumeUSD), 0]\n        : [0, 0]\n    const volumeUSDWeek =\n      current && week\n        ? parseFloat(current.volumeUSD) - parseFloat(week.volumeUSD)\n        : current\n        ? parseFloat(current.volumeUSD)\n        : 0\n    const tvlUSD = current ? parseFloat(current.totalValueLockedUSD) : 0\n    const tvlUSDChange = getPercentChange(current?.totalValueLockedUSD, oneDay?.totalValueLockedUSD)\n    const tvlToken = current ? parseFloat(current.totalValueLocked) : 0\n    const priceUSD = current ? parseFloat(current.derivedETH) * ethPrices.current : 0\n    const priceUSDOneDay = oneDay ? parseFloat(oneDay.derivedETH) * ethPrices.oneDay : 0\n    const priceUSDWeek = week ? parseFloat(week.derivedETH) * ethPrices.week : 0\n    const priceUSDChange =\n      priceUSD && priceUSDOneDay ? getPercentChange(priceUSD.toString(), priceUSDOneDay.toString()) : 0\n    const priceUSDChangeWeek =\n      priceUSD && priceUSDWeek ? getPercentChange(priceUSD.toString(), priceUSDWeek.toString()) : 0\n    const txCount =\n      current && oneDay\n        ? parseFloat(current.txCount) - parseFloat(oneDay.txCount)\n        : current\n        ? parseFloat(current.txCount)\n        : 0\n    const feesUSD =\n      current && oneDay\n        ? parseFloat(current.feesUSD) - parseFloat(oneDay.feesUSD)\n        : current\n        ? parseFloat(current.feesUSD)\n        : 0\n\n    accum[address] = {\n      exists: !!current,\n      address,\n      name: current ? formatTokenName(address, current.name) : '',\n      symbol: current ? formatTokenSymbol(address, current.symbol) : '',\n      volumeUSD,\n      volumeUSDChange,\n      volumeUSDWeek,\n      txCount,\n      tvlUSD,\n      feesUSD,\n      tvlUSDChange,\n      tvlToken,\n      priceUSD,\n      priceUSDChange,\n      priceUSDChangeWeek,\n    }\n\n    return accum\n  }, {})\n\n  return {\n    loading: anyLoading,\n    error: anyError,\n    data: formatted,\n  }\n}\n","import { TickProcessed } from './../../data/pools/tickData'\nimport { createAction } from '@reduxjs/toolkit'\nimport { PoolData, PoolChartEntry } from './reducer'\nimport { Transaction } from 'types'\n\n// protocol wide info\nexport const updatePoolData = createAction<{ pools: PoolData[] }>('pools/updatePoolData')\n\n// add pool address to byAddress\nexport const addPoolKeys = createAction<{ poolAddresses: string[] }>('pool/addPoolKeys')\n\nexport const updatePoolChartData = createAction<{ poolAddress: string; chartData: PoolChartEntry[] }>(\n  'pool/updatePoolChartData'\n)\n\nexport const updatePoolTransactions = createAction<{ poolAddress: string; transactions: Transaction[] }>(\n  'pool/updatePoolTransactions'\n)\n\nexport const updateTickData = createAction<{\n  poolAddress: string\n  tickData:\n    | {\n        ticksProcessed: TickProcessed[]\n        feeTier: string\n        tickSpacing: number\n        activeTickIdx: number\n      }\n    | undefined\n}>('pool/updateTickData')\n","import dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\nimport gql from 'graphql-tag'\nimport { client } from 'apollo/client'\nimport { TokenChartEntry } from 'state/tokens/reducer'\nimport { PoolChartEntry } from 'state/pools/reducer'\n\n// format dayjs with the libraries that we need\ndayjs.extend(utc)\ndayjs.extend(weekOfYear)\nconst ONE_DAY_UNIX = 24 * 60 * 60\n\nconst POOL_CHART = gql`\n  query poolDayDatas($startTime: Int!, $skip: Int!, $address: Bytes!) {\n    poolDayDatas(\n      first: 1000\n      skip: $skip\n      where: { pool: $address, date_gt: $startTime }\n      orderBy: date\n      orderDirection: asc\n    ) {\n      date\n      volumeUSD\n      tvlUSD\n    }\n  }\n`\n\ninterface ChartResults {\n  poolDayDatas: {\n    date: number\n    volumeUSD: string\n    tvlUSD: string\n  }[]\n}\n\nexport async function fetchPoolChartData(address: string) {\n  let data: {\n    date: number\n    volumeUSD: string\n    tvlUSD: string\n  }[] = []\n  const startTimestamp = 1619170975\n  const endTimestamp = dayjs.utc().unix()\n\n  let error = false\n  let skip = 0\n  let allFound = false\n\n  try {\n    while (!allFound) {\n      const { data: chartResData, error, loading } = await client.query<ChartResults>({\n        query: POOL_CHART,\n        variables: {\n          address: address,\n          startTime: startTimestamp,\n          skip,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      if (!loading) {\n        skip += 1000\n        if (chartResData.poolDayDatas.length < 1000 || error) {\n          allFound = true\n        }\n        if (chartResData) {\n          data = data.concat(chartResData.poolDayDatas)\n        }\n      }\n    }\n  } catch {\n    error = true\n  }\n\n  if (data) {\n    const formattedExisting = data.reduce((accum: { [date: number]: PoolChartEntry }, dayData) => {\n      const roundedDate = parseInt((dayData.date / ONE_DAY_UNIX).toFixed(0))\n      accum[roundedDate] = {\n        date: dayData.date,\n        volumeUSD: parseFloat(dayData.volumeUSD),\n        totalValueLockedUSD: parseFloat(dayData.tvlUSD),\n      }\n      return accum\n    }, {})\n\n    const firstEntry = formattedExisting[parseInt(Object.keys(formattedExisting)[0])]\n\n    // fill in empty days ( there will be no day datas if no trades made that day )\n    let timestamp = firstEntry?.date ?? startTimestamp\n    let latestTvl = firstEntry?.totalValueLockedUSD ?? 0\n    while (timestamp < endTimestamp - ONE_DAY_UNIX) {\n      const nextDay = timestamp + ONE_DAY_UNIX\n      const currentDayIndex = parseInt((nextDay / ONE_DAY_UNIX).toFixed(0))\n      if (!Object.keys(formattedExisting).includes(currentDayIndex.toString())) {\n        formattedExisting[currentDayIndex] = {\n          date: nextDay,\n          volumeUSD: 0,\n          totalValueLockedUSD: latestTvl,\n        }\n      } else {\n        latestTvl = formattedExisting[currentDayIndex].totalValueLockedUSD\n      }\n      timestamp = nextDay\n    }\n\n    const dateMap = Object.keys(formattedExisting).map((key) => {\n      return formattedExisting[parseInt(key)]\n    })\n\n    return {\n      data: dateMap,\n      error: false,\n    }\n  } else {\n    return {\n      data: undefined,\n      error,\n    }\n  }\n}\n","import { client } from 'apollo/client'\nimport gql from 'graphql-tag'\nimport { Transaction, TransactionType } from 'types'\nimport { formatTokenSymbol } from 'utils/tokens'\n\nconst POOL_TRANSACTIONS = gql`\n  query transactions($address: Bytes!) {\n    mints(first: 100, orderBy: timestamp, orderDirection: desc, where: { pool: $address }) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      sender\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(first: 100, orderBy: timestamp, orderDirection: desc, where: { pool: $address }) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(first: 100, orderBy: timestamp, orderDirection: desc, where: { pool: $address }) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      amount0\n      amount1\n      amountUSD\n    }\n  }\n`\n\ninterface TransactionResults {\n  mints: {\n    timestamp: string\n    transaction: {\n      id: string\n    }\n    pool: {\n      token0: {\n        id: string\n        symbol: string\n      }\n      token1: {\n        id: string\n        symbol: string\n      }\n    }\n    origin: string\n    amount0: string\n    amount1: string\n    amountUSD: string\n  }[]\n  swaps: {\n    timestamp: string\n    transaction: {\n      id: string\n    }\n    pool: {\n      token0: {\n        id: string\n        symbol: string\n      }\n      token1: {\n        id: string\n        symbol: string\n      }\n    }\n    origin: string\n    amount0: string\n    amount1: string\n    amountUSD: string\n  }[]\n  burns: {\n    timestamp: string\n    transaction: {\n      id: string\n    }\n    pool: {\n      token0: {\n        id: string\n        symbol: string\n      }\n      token1: {\n        id: string\n        symbol: string\n      }\n    }\n    owner: string\n    amount0: string\n    amount1: string\n    amountUSD: string\n  }[]\n}\n\nexport async function fetchPoolTransactions(\n  address: string\n): Promise<{ data: Transaction[] | undefined; error: boolean; loading: boolean }> {\n  const { data, error, loading } = await client.query<TransactionResults>({\n    query: POOL_TRANSACTIONS,\n    variables: {\n      address: address,\n    },\n    fetchPolicy: 'cache-first',\n  })\n\n  if (error) {\n    return {\n      data: undefined,\n      error: true,\n      loading: false,\n    }\n  }\n\n  if (loading && !data) {\n    return {\n      data: undefined,\n      error: false,\n      loading: true,\n    }\n  }\n\n  const mints = data.mints.map((m) => {\n    return {\n      type: TransactionType.MINT,\n      hash: m.transaction.id,\n      timestamp: m.timestamp,\n      sender: m.origin,\n      token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\n      token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\n      token0Address: m.pool.token0.id,\n      token1Address: m.pool.token1.id,\n      amountUSD: parseFloat(m.amountUSD),\n      amountToken0: parseFloat(m.amount0),\n      amountToken1: parseFloat(m.amount1),\n    }\n  })\n  const burns = data.burns.map((m) => {\n    return {\n      type: TransactionType.BURN,\n      hash: m.transaction.id,\n      timestamp: m.timestamp,\n      sender: m.owner,\n      token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\n      token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\n      token0Address: m.pool.token0.id,\n      token1Address: m.pool.token1.id,\n      amountUSD: parseFloat(m.amountUSD),\n      amountToken0: parseFloat(m.amount0),\n      amountToken1: parseFloat(m.amount1),\n    }\n  })\n\n  const swaps = data.swaps.map((m) => {\n    return {\n      type: TransactionType.SWAP,\n      hash: m.transaction.id,\n      timestamp: m.timestamp,\n      sender: m.origin,\n      token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\n      token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\n      token0Address: m.pool.token0.id,\n      token1Address: m.pool.token1.id,\n      amountUSD: parseFloat(m.amountUSD),\n      amountToken0: parseFloat(m.amount0),\n      amountToken1: parseFloat(m.amount1),\n    }\n  })\n\n  return { data: [...mints, ...burns, ...swaps], error: false, loading: false }\n}\n","import { addPoolKeys, updatePoolChartData, updatePoolTransactions, updateTickData } from 'state/pools/actions'\nimport { AppState, AppDispatch } from './../index'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PoolData, PoolChartEntry } from './reducer'\nimport { updatePoolData } from './actions'\nimport { notEmpty } from 'utils'\nimport { fetchPoolChartData } from 'data/pools/chartData'\nimport { Transaction } from 'types'\nimport { fetchPoolTransactions } from 'data/pools/transactions'\nimport { PoolTickData } from 'data/pools/tickData'\n\nexport function useAllPoolData(): {\n  [address: string]: { data: PoolData | undefined; lastUpdated: number | undefined }\n} {\n  return useSelector((state: AppState) => state.pools.byAddress)\n}\n\nexport function useUpdatePoolData(): (pools: PoolData[]) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback((pools: PoolData[]) => dispatch(updatePoolData({ pools })), [dispatch])\n}\n\nexport function useAddPoolKeys(): (addresses: string[]) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback((poolAddresses: string[]) => dispatch(addPoolKeys({ poolAddresses })), [dispatch])\n}\n\nexport function usePoolDatas(poolAddresses: string[]): PoolData[] {\n  const allPoolData = useAllPoolData()\n  const addPoolKeys = useAddPoolKeys()\n\n  const untrackedAddresses = poolAddresses.reduce((accum: string[], address) => {\n    if (!Object.keys(allPoolData).includes(address)) {\n      accum.push(address)\n    }\n    return accum\n  }, [])\n\n  useEffect(() => {\n    if (untrackedAddresses) {\n      addPoolKeys(untrackedAddresses)\n    }\n    return\n  }, [addPoolKeys, untrackedAddresses])\n\n  // filter for pools with data\n  const poolsWithData = poolAddresses\n    .map((address) => {\n      const poolData = allPoolData[address]?.data\n      return poolData ?? undefined\n    })\n    .filter(notEmpty)\n\n  return poolsWithData\n}\n\n/**\n * Get top pools addresses that token is included in\n * If not loaded, fetch and store\n * @param address\n */\nexport function usePoolChartData(address: string): PoolChartEntry[] | undefined {\n  const dispatch = useDispatch<AppDispatch>()\n  const pool = useSelector((state: AppState) => state.pools.byAddress[address])\n  const chartData = pool?.chartData\n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n    async function fetch() {\n      const { error, data } = await fetchPoolChartData(address)\n      if (!error && data) {\n        dispatch(updatePoolChartData({ poolAddress: address, chartData: data }))\n      }\n      if (error) {\n        setError(error)\n      }\n    }\n    if (!chartData && !error) {\n      fetch()\n    }\n  }, [address, dispatch, error, chartData])\n\n  // return data\n  return chartData\n}\n\n/**\n * Get all transactions on pool\n * @param address\n */\nexport function usePoolTransactions(address: string): Transaction[] | undefined {\n  const dispatch = useDispatch<AppDispatch>()\n  const pool = useSelector((state: AppState) => state.pools.byAddress[address])\n  const transactions = pool?.transactions\n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n    async function fetch() {\n      const { error, data } = await fetchPoolTransactions(address)\n      if (error) {\n        setError(true)\n      } else if (data) {\n        dispatch(updatePoolTransactions({ poolAddress: address, transactions: data }))\n      }\n    }\n    if (!transactions && !error) {\n      fetch()\n    }\n  }, [address, dispatch, error, transactions])\n\n  // return data\n  return transactions\n}\n\nexport function usePoolTickData(\n  address: string\n): [PoolTickData | undefined, (poolAddress: string, tickData: PoolTickData) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const pool = useSelector((state: AppState) => state.pools.byAddress[address])\n  const tickData = pool.tickData\n\n  const setPoolTickData = useCallback(\n    (address: string, tickData: PoolTickData) => dispatch(updateTickData({ poolAddress: address, tickData })),\n    [dispatch]\n  )\n\n  return [tickData, setPoolTickData]\n}\n","import { useAllTokenData } from 'state/tokens/hooks'\nimport { TokenData } from 'state/tokens/reducer'\nimport { useFetchedTokenDatas } from 'data/tokens/tokenData'\nimport gql from 'graphql-tag'\nimport { useState, useEffect, useMemo } from 'react'\nimport { client } from 'apollo/client'\nimport { usePoolDatas, useAllPoolData } from 'state/pools/hooks'\nimport { PoolData } from 'state/pools/reducer'\nimport { notEmpty, escapeRegExp } from 'utils'\n\nexport const TOKEN_SEARCH = gql`\n  query tokens($value: String, $id: String) {\n    asSymbol: tokens(where: { symbol_contains: $value }, orderBy: totalValueLockedUSD, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalValueLockedUSD\n    }\n    asName: tokens(where: { name_contains: $value }, orderBy: totalValueLockedUSD, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalValueLockedUSD\n    }\n    asAddress: tokens(where: { id: $id }, orderBy: totalValueLockedUSD, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalValueLockedUSD\n    }\n  }\n`\n\nexport const POOL_SEARCH = gql`\n  query pools($tokens: [Bytes]!, $id: String) {\n    as0: pools(where: { token0_in: $tokens }) {\n      id\n      feeTier\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n    as1: pools(where: { token1_in: $tokens }) {\n      id\n      feeTier\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n    asAddress: pools(where: { id: $id }) {\n      id\n      feeTier\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n  }\n`\n\ninterface TokenRes {\n  asSymbol: {\n    id: string\n    symbol: string\n    name: string\n    totalValueLockedUSD: string\n  }[]\n  asName: {\n    id: string\n    symbol: string\n    name: string\n    totalValueLockedUSD: string\n  }[]\n  asAddress: {\n    id: string\n    symbol: string\n    name: string\n    totalValueLockedUSD: string\n  }[]\n}\n\ninterface PoolResFields {\n  id: string\n  feeTier: string\n  token0: {\n    id: string\n    symbol: string\n    name: string\n  }\n  token1: {\n    id: string\n    symbol: string\n    name: string\n  }\n}\n\ninterface PoolRes {\n  as0: PoolResFields[]\n  as1: PoolResFields[]\n  asAddress: PoolResFields[]\n}\n\nexport function useFetchSearchResults(\n  value: string\n): {\n  tokens: TokenData[]\n  pools: PoolData[]\n  loading: boolean\n} {\n  const allTokens = useAllTokenData()\n  const allPools = useAllPoolData()\n\n  const [tokenData, setTokenData] = useState<TokenRes | undefined>()\n  const [poolData, setPoolData] = useState<PoolRes | undefined>()\n\n  // fetch data based on search input\n  useEffect(() => {\n    async function fetch() {\n      try {\n        const tokens = await client.query<TokenRes>({\n          query: TOKEN_SEARCH,\n          variables: {\n            value: value ? value.toUpperCase() : '',\n            id: value,\n          },\n        })\n        const pools = await client.query<PoolRes>({\n          query: POOL_SEARCH,\n          variables: {\n            tokens: tokens.data.asSymbol?.map((t) => t.id),\n            id: value,\n          },\n        })\n\n        if (tokens.data) {\n          setTokenData(tokens.data)\n        }\n        if (pools.data) {\n          setPoolData(pools.data)\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    if (value && value.length > 0) {\n      fetch()\n    }\n  }, [value])\n\n  const allFetchedTokens = useMemo(() => {\n    if (tokenData) {\n      return [...tokenData.asAddress, ...tokenData.asName, ...tokenData.asSymbol]\n    }\n    return []\n  }, [tokenData])\n\n  const allFetchedPools = useMemo(() => {\n    if (poolData) {\n      return [...poolData.asAddress, ...poolData.as0, ...poolData.as1]\n    }\n    return []\n  }, [poolData])\n\n  // format as token and pool datas\n  const { data: tokenFullDatas, loading: tokenFullLoading } = useFetchedTokenDatas(allFetchedTokens.map((t) => t.id))\n  const poolDatasFull = usePoolDatas(allFetchedPools.map((p) => p.id))\n  const formattedTokens = useMemo(() => (tokenFullDatas ? Object.values(tokenFullDatas) : []), [tokenFullDatas])\n\n  const newTokens = useMemo(() => {\n    return formattedTokens.filter((t) => !Object.keys(allTokens).includes(t.address))\n  }, [allTokens, formattedTokens])\n\n  const combinedTokens = useMemo(() => {\n    return [\n      ...newTokens,\n      ...Object.values(allTokens)\n        .map((t) => t.data)\n        .filter(notEmpty),\n    ]\n  }, [allTokens, newTokens])\n\n  const filteredSortedTokens = useMemo(() => {\n    return combinedTokens.filter((t) => {\n      const regexMatches = Object.keys(t).map((tokenEntryKey) => {\n        const isAddress = value.slice(0, 2) === '0x'\n        if (tokenEntryKey === 'address' && isAddress) {\n          return t[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\n        }\n        if (tokenEntryKey === 'symbol' && !isAddress) {\n          return t[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\n        }\n        if (tokenEntryKey === 'name' && !isAddress) {\n          return t[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\n        }\n        return false\n      })\n      return regexMatches.some((m) => m)\n    })\n  }, [combinedTokens, value])\n\n  const newPools = useMemo(() => {\n    return poolDatasFull.filter((p) => !Object.keys(allPools).includes(p.address))\n  }, [allPools, poolDatasFull])\n\n  const combinedPools = useMemo(() => {\n    return [\n      ...newPools,\n      ...Object.values(allPools)\n        .map((p) => p.data)\n        .filter(notEmpty),\n    ]\n  }, [allPools, newPools])\n\n  const filteredSortedPools = useMemo(() => {\n    return combinedPools.filter((t) => {\n      const regexMatches = Object.keys(t).map((key) => {\n        const isAddress = value.slice(0, 2) === '0x'\n        if (key === 'address' && isAddress) {\n          return t[key].match(new RegExp(escapeRegExp(value), 'i'))\n        }\n        if ((key === 'token0' || key === 'token1') && !isAddress) {\n          return (\n            t[key].name.match(new RegExp(escapeRegExp(value), 'i')) ||\n            t[key].symbol.toLocaleLowerCase().match(new RegExp(escapeRegExp(value.toLocaleLowerCase()), 'i'))\n          )\n        }\n        return false\n      })\n      return regexMatches.some((m) => m)\n    })\n  }, [combinedPools, value])\n\n  return {\n    tokens: filteredSortedTokens,\n    pools: filteredSortedPools,\n    loading: tokenFullLoading,\n  }\n}\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import React, { useState } from 'react'\nimport { HelpCircle } from 'react-feather'\nimport { ImageProps } from 'rebass'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends Pick<ImageProps, 'style' | 'alt' | 'className'> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nexport default function Logo({ srcs, alt, ...rest }: LogoProps) {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((src) => !BAD_SRCS[src])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpCircle {...rest} />\n}\n","import React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport { isAddress } from 'utils'\nimport Logo from '../Logo'\n\nexport const getTokenLogoURL = (address: string) =>\n  `https://raw.githubusercontent.com/ava-labs/bridge-tokens/main/avalanche-tokens${address}/logo.png`\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  border-radius: ${({ size }) => size};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n  background-color: ${({ theme }) => theme.white};\n  color: ${({ theme }) => theme.text4};\n`\n\nexport default function CurrencyLogo({\n  address,\n  size = '24px',\n  style,\n  ...rest\n}: {\n  address?: string\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const srcs: string[] = useMemo(() => {\n    const checkSummed = isAddress(address)\n\n    if (checkSummed) {\n      return [getTokenLogoURL(checkSummed)]\n    }\n    return []\n  }, [address])\n\n  return <StyledLogo size={size} srcs={srcs} alt={'token logo'} style={style} {...rest} />\n}\n","import numbro from 'numbro'\n\n// using a currency library here in case we want to add more in future\nexport const formatDollarAmount = (num: number | undefined, digits = 2, round = true) => {\n  if (num === 0) return '$0.00'\n  if (!num) return '-'\n  if (num < 0.001 && digits <= 3) {\n    return '<$0.001'\n  }\n\n  return numbro(num).formatCurrency({\n    average: round,\n    mantissa: num > 1000 ? 2 : digits,\n    abbreviations: {\n      million: 'M',\n      billion: 'B',\n    },\n  })\n}\n\n// using a currency library here in case we want to add more in future\nexport const formatAmount = (num: number | undefined, digits = 2) => {\n  if (num === 0) return '0'\n  if (!num) return '-'\n  if (num < 0.001) {\n    return '<0.001'\n  }\n  return numbro(num).format({\n    average: true,\n    mantissa: num > 1000 ? 2 : digits,\n    abbreviations: {\n      million: 'M',\n      billion: 'B',\n    },\n  })\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from '../CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean; sizeraw: number }>`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ sizeraw, margin }) => margin && (sizeraw / 3 + 8).toString() + 'px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  address0?: string\n  address1?: string\n}\n\nconst HigherLogo = styled(CurrencyLogo)`\n  z-index: 2;\n`\nconst CoveredLogo = styled(CurrencyLogo)<{ sizeraw: number }>`\n  // position: absolute;\n  // left: ${({ sizeraw }) => '-' + (sizeraw / 2).toString() + 'px'} !important;\n`\n\nexport default function DoubleCurrencyLogo({ address0, address1, size = 16, margin = false }: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper sizeraw={size} margin={margin}>\n      {address0 && <HigherLogo address={address0} size={size.toString() + 'px'} />}\n      {address1 && <CoveredLogo address={address1} size={size.toString() + 'px'} sizeraw={size} />}\n    </Wrapper>\n  )\n}\n","import styled from 'styled-components'\nimport { Box } from 'rebass/styled-components'\n\nconst Card = styled(Box)<{ width?: string; padding?: string; border?: string; borderRadius?: string }>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.bg2};\n  background-color: ${({ theme }) => theme.bg1};\n`\n\nexport const LightGreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.bg3};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.bg2};\n`\n\nexport const DarkGreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.bg0};\n`\n\nexport const OutlineCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.bg3};\n`\n\nexport const YellowCard = styled(Card)`\n  background-color: rgba(243, 132, 30, 0.05);\n  color: ${({ theme }) => theme.yellow3};\n  font-weight: 500;\n`\n\nexport const PinkCard = styled(Card)`\n  background-color: rgba(255, 0, 122, 0.03);\n  color: ${({ theme }) => theme.primary1};\n  font-weight: 500;\n`\n\nexport const BlueCard = styled(Card)`\n  background-color: ${({ theme }) => theme.primary5};\n  color: ${({ theme }) => theme.blue2};\n  border-radius: 12px;\n  width: fit-content;\n`\n\nexport const ScrollableX = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  overflow-x: auto;\n  overflow-y: hidden;\n  white-space: nowrap;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nexport const GreyBadge = styled(Card)`\n  width: fit-content;\n  border-radius: 8px;\n  background: ${({ theme }) => theme.bg3};\n  color: ${({ theme }) => theme.text1};\n  padding: 4px 6px;\n  font-weight: 400;\n`\n","import { ThemeContext } from 'styled-components'\nimport { useContext } from 'react'\n\nexport default function useTheme() {\n  return useContext(ThemeContext)\n}\n","import React, { HTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport { darken, lighten } from 'polished'\n\nimport { RowBetween } from '../Row'\nimport { ChevronDown, Check, Star } from 'react-feather'\nimport { Button as RebassButton, ButtonProps } from 'rebass/styled-components'\nimport useTheme from 'hooks/useTheme'\n\nconst Base = styled(RebassButton)<{\n  padding?: string\n  width?: string\n  borderRadius?: string\n  altDisabledStyle?: boolean\n}>`\n  padding: ${({ padding }) => (padding ? padding : '8px 16px')};\n  width: ${({ width }) => (width ? width : '100%')};\n  font-weight: 500;\n  text-align: center;\n  border-radius: 12px;\n  border-radius: ${({ borderRadius }) => borderRadius && borderRadius};\n  outline: none;\n  border: 1px solid transparent;\n  color: white;\n  text-decoration: none;\n  display: flex;\n  justify-content: center;\n  flex-wrap: nowrap;\n  align-items: center;\n  cursor: pointer;\n  position: relative;\n  z-index: 1;\n  &:disabled {\n    cursor: auto;\n  }\n\n  > * {\n    user-select: none;\n  }\n`\n\nexport const ButtonPrimary = styled(Base)<{ bgColor?: string }>`\n  background-color: ${({ theme, bgColor }) => bgColor ?? theme.primary1};\n  color: white;\n  &:focus {\n    box-shadow: 0 0 0 1pt ${({ theme, bgColor }) => darken(0.05, bgColor ?? theme.primary1)};\n    background-color: ${({ theme, bgColor }) => darken(0.05, bgColor ?? theme.primary1)};\n  }\n  &:hover {\n    background-color: ${({ theme, bgColor }) => darken(0.05, bgColor ?? theme.primary1)};\n  }\n  &:active {\n    box-shadow: 0 0 0 1pt ${({ theme, bgColor }) => darken(0.1, bgColor ?? theme.primary1)};\n    background-color: ${({ theme, bgColor }) => darken(0.1, bgColor ?? theme.primary1)};\n  }\n  &:disabled {\n    background-color: ${({ theme, altDisabledStyle, disabled }) =>\n      altDisabledStyle ? (disabled ? theme.bg3 : theme.primary1) : theme.bg3};\n    color: ${({ theme, altDisabledStyle, disabled }) =>\n      altDisabledStyle ? (disabled ? theme.text3 : 'white') : theme.text3};\n    cursor: auto;\n    box-shadow: none;\n    border: 1px solid transparent;\n    outline: none;\n    opacity: ${({ altDisabledStyle }) => (altDisabledStyle ? '0.5' : '1')};\n  }\n`\n\nexport const ButtonLight = styled(Base)`\n  background-color: ${({ theme }) => theme.primary5};\n  color: ${({ theme }) => theme.primaryText1};\n  font-size: 16px;\n  font-weight: 500;\n  &:focus {\n    box-shadow: 0 0 0 1pt ${({ theme, disabled }) => !disabled && darken(0.03, theme.primary5)};\n    background-color: ${({ theme, disabled }) => !disabled && darken(0.03, theme.primary5)};\n  }\n  &:hover {\n    background-color: ${({ theme, disabled }) => !disabled && darken(0.03, theme.primary5)};\n  }\n  &:active {\n    box-shadow: 0 0 0 1pt ${({ theme, disabled }) => !disabled && darken(0.05, theme.primary5)};\n    background-color: ${({ theme, disabled }) => !disabled && darken(0.05, theme.primary5)};\n  }\n  :disabled {\n    opacity: 0.4;\n    :hover {\n      cursor: auto;\n      background-color: ${({ theme }) => theme.primary5};\n      box-shadow: none;\n      border: 1px solid transparent;\n      outline: none;\n    }\n  }\n`\n\nexport const ButtonGray = styled(Base)`\n  background-color: ${({ theme }) => theme.bg3};\n  color: ${({ theme }) => theme.text2};\n  font-size: 16px;\n  font-weight: 500;\n  outline: none;\n  &:focus {\n    background-color: ${({ theme, disabled }) => !disabled && darken(0.05, theme.bg4)};\n    outline: none;\n  }\n  &:hover {\n    background-color: ${({ theme, disabled }) => !disabled && darken(0.05, theme.bg4)};\n    outline: none;\n  }\n  &:active {\n    background-color: ${({ theme, disabled }) => !disabled && darken(0.1, theme.bg4)};\n    outline: none;\n  }\n`\n\nexport const ButtonSecondary = styled(Base)`\n  border: 1px solid ${({ theme }) => theme.primary4};\n  color: ${({ theme }) => theme.primary1};\n  background-color: transparent;\n  font-size: 16px;\n  border-radius: 12px;\n  padding: ${({ padding }) => (padding ? padding : '10px')};\n\n  &:focus {\n    box-shadow: 0 0 0 1pt ${({ theme }) => theme.primary4};\n    border: 1px solid ${({ theme }) => theme.primary3};\n  }\n  &:hover {\n    border: 1px solid ${({ theme }) => theme.primary3};\n  }\n  &:active {\n    box-shadow: 0 0 0 1pt ${({ theme }) => theme.primary4};\n    border: 1px solid ${({ theme }) => theme.primary3};\n  }\n  &:disabled {\n    opacity: 50%;\n    cursor: auto;\n  }\n  a:hover {\n    text-decoration: none;\n  }\n`\n\nexport const ButtonPink = styled(Base)`\n  background-color: ${({ theme }) => theme.primary1};\n  color: white;\n\n  &:focus {\n    box-shadow: 0 0 0 1pt ${({ theme }) => darken(0.05, theme.primary1)};\n    background-color: ${({ theme }) => darken(0.05, theme.primary1)};\n  }\n  &:hover {\n    background-color: ${({ theme }) => darken(0.05, theme.primary1)};\n  }\n  &:active {\n    box-shadow: 0 0 0 1pt ${({ theme }) => darken(0.1, theme.primary1)};\n    background-color: ${({ theme }) => darken(0.1, theme.primary1)};\n  }\n  &:disabled {\n    background-color: ${({ theme }) => theme.primary1};\n    opacity: 50%;\n    cursor: auto;\n  }\n`\n\nexport const ButtonUNIGradient = styled(ButtonPrimary)`\n  color: white;\n  padding: 4px 8px;\n  height: 36px;\n  font-weight: 500;\n  background-color: ${({ theme }) => theme.bg3};\n  background: radial-gradient(174.47% 188.91% at 1.84% 0%, #ff007a 0%, #c5b856 100%), #edeef2;\n  width: fit-content;\n  position: relative;\n  cursor: pointer;\n  border: none;\n  white-space: no-wrap;\n  :hover {\n    opacity: 0.8;\n  }\n  :active {\n    opacity: 0.9;\n  }\n`\n\nexport const ButtonOutlined = styled(Base)`\n  border: 1px solid ${({ theme }) => theme.bg2};\n  background-color: transparent;\n  color: ${({ theme }) => theme.text1};\n\n  &:focus {\n    box-shadow: 0 0 0 1px ${({ theme }) => theme.bg4};\n  }\n  &:hover {\n    box-shadow: 0 0 0 1px ${({ theme }) => theme.bg4};\n  }\n  &:active {\n    box-shadow: 0 0 0 1px ${({ theme }) => theme.bg4};\n  }\n  &:disabled {\n    opacity: 50%;\n    cursor: auto;\n  }\n`\n\nexport const ButtonEmpty = styled(Base)`\n  background-color: transparent;\n  color: ${({ theme }) => theme.primary1};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:focus {\n    text-decoration: underline;\n  }\n  &:hover {\n    text-decoration: none;\n  }\n  &:active {\n    text-decoration: none;\n  }\n  &:disabled {\n    opacity: 50%;\n    cursor: auto;\n  }\n`\n\nexport const ButtonWhite = styled(Base)`\n  border: 1px solid #edeef2;\n  background-color: ${({ theme }) => theme.bg1};\n  color: black;\n\n  &:focus {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    box-shadow: 0 0 0 1pt ${darken(0.05, '#edeef2')};\n  }\n  &:hover {\n    box-shadow: 0 0 0 1pt ${darken(0.1, '#edeef2')};\n  }\n  &:active {\n    box-shadow: 0 0 0 1pt ${darken(0.1, '#edeef2')};\n  }\n  &:disabled {\n    opacity: 50%;\n    cursor: auto;\n  }\n`\n\nconst ButtonConfirmedStyle = styled(Base)`\n  background-color: ${({ theme }) => lighten(0.5, theme.green1)};\n  color: ${({ theme }) => theme.green1};\n  border: 1px solid ${({ theme }) => theme.green1};\n\n  &:disabled {\n    opacity: 50%;\n    cursor: auto;\n  }\n`\n\nconst ButtonErrorStyle = styled(Base)`\n  background-color: ${({ theme }) => theme.red1};\n  border: 1px solid ${({ theme }) => theme.red1};\n\n  &:focus {\n    box-shadow: 0 0 0 1pt ${({ theme }) => darken(0.05, theme.red1)};\n    background-color: ${({ theme }) => darken(0.05, theme.red1)};\n  }\n  &:hover {\n    background-color: ${({ theme }) => darken(0.05, theme.red1)};\n  }\n  &:active {\n    box-shadow: 0 0 0 1pt ${({ theme }) => darken(0.1, theme.red1)};\n    background-color: ${({ theme }) => darken(0.1, theme.red1)};\n  }\n  &:disabled {\n    opacity: 50%;\n    cursor: auto;\n    box-shadow: none;\n    background-color: ${({ theme }) => theme.red1};\n    border: 1px solid ${({ theme }) => theme.red1};\n  }\n`\n\nexport function ButtonConfirmed({\n  confirmed,\n  altDisabledStyle,\n  ...rest\n}: { confirmed?: boolean; altDisabledStyle?: boolean } & ButtonProps) {\n  if (confirmed) {\n    return <ButtonConfirmedStyle {...rest} />\n  } else {\n    return <ButtonPrimary {...rest} altDisabledStyle={altDisabledStyle} />\n  }\n}\n\nexport function ButtonError({ error, ...rest }: { error?: boolean } & ButtonProps) {\n  if (error) {\n    return <ButtonErrorStyle {...rest} />\n  } else {\n    return <ButtonPrimary {...rest} />\n  }\n}\n\nexport function ButtonDropdown({ disabled = false, children, ...rest }: { disabled?: boolean } & ButtonProps) {\n  return (\n    <ButtonPrimary {...rest} disabled={disabled}>\n      <RowBetween>\n        <div style={{ display: 'flex', alignItems: 'center' }}>{children}</div>\n        <ChevronDown size={24} />\n      </RowBetween>\n    </ButtonPrimary>\n  )\n}\n\nexport function ButtonDropdownGrey({ disabled = false, children, ...rest }: { disabled?: boolean } & ButtonProps) {\n  return (\n    <ButtonGray {...rest} disabled={disabled} style={{ borderRadius: '20px' }}>\n      <RowBetween>\n        <div style={{ display: 'flex', alignItems: 'center' }}>{children}</div>\n        <ChevronDown size={24} />\n      </RowBetween>\n    </ButtonGray>\n  )\n}\n\nexport function ButtonDropdownLight({ disabled = false, children, ...rest }: { disabled?: boolean } & ButtonProps) {\n  return (\n    <ButtonOutlined {...rest} disabled={disabled}>\n      <RowBetween>\n        <div style={{ display: 'flex', alignItems: 'center' }}>{children}</div>\n        <ChevronDown size={24} />\n      </RowBetween>\n    </ButtonOutlined>\n  )\n}\n\nexport function ButtonRadio({ active, ...rest }: { active?: boolean } & ButtonProps) {\n  if (!active) {\n    return <ButtonWhite {...rest} />\n  } else {\n    return <ButtonPrimary {...rest} />\n  }\n}\n\nconst ActiveOutlined = styled(ButtonOutlined)`\n  border: 1px solid;\n  border-color: ${({ theme }) => theme.primary1};\n`\n\nconst Circle = styled.div`\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.primary1};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst CheckboxWrapper = styled.div`\n  width: 30px;\n  padding: 0 10px;\n`\n\nexport function ButtonRadioChecked({ active = false, children, ...rest }: { active?: boolean } & ButtonProps) {\n  if (!active) {\n    return (\n      <ButtonOutlined borderRadius=\"12px\" padding=\"12px 8px\" {...rest}>\n        {<RowBetween>{children}</RowBetween>}\n      </ButtonOutlined>\n    )\n  } else {\n    return (\n      <ActiveOutlined {...rest} padding=\"12px 8px\" borderRadius=\"12px\">\n        {\n          <RowBetween>\n            {children}\n            <CheckboxWrapper>\n              <Circle>\n                <Check size={13} />\n              </Circle>\n            </CheckboxWrapper>\n          </RowBetween>\n        }\n      </ActiveOutlined>\n    )\n  }\n}\n\nconst HoverIcon = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 9999;\n  :hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nexport const SavedIcon = ({\n  fill = false,\n  size = '20px',\n  ...rest\n}: { fill: boolean; size?: string } & HTMLAttributes<HTMLDivElement>) => {\n  const theme = useTheme()\n  return (\n    <HoverIcon {...rest}>\n      <Star stroke={theme.text2} fill={fill ? theme.text2 : 'transparent'} size={size} />\n    </HoverIcon>\n  )\n}\n\nexport const SmallOptionButton = styled(Base)<{ active?: boolean }>`\n  padding: 4px;\n  width: fit-content;\n  font-size: 12px;\n  border-radius: 4px;\n  min-width: 36px;\n  background-color: ${({ active, theme }) => (active ? theme.bg2 : theme.bg1)};\n  color: ${({ active, theme }) => (active ? theme.text1 : theme.text2)};\n\n  :hover {\n    opacity: 0.6;\n  }\n`\n","import { Placement } from '@popperjs/core'\nimport { transparentize } from 'polished'\nimport React, { useCallback, useState } from 'react'\nimport { usePopper } from 'react-popper'\nimport styled from 'styled-components'\nimport useInterval from '../../hooks/useInterval'\nimport Portal from '@reach/portal'\n\nconst PopoverContainer = styled.div<{ show: boolean }>`\n  z-index: 9999;\n\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\n  opacity: ${(props) => (props.show ? 1 : 0)};\n  transition: visibility 150ms linear, opacity 150ms linear;\n\n  background: ${({ theme }) => theme.bg2};\n  border: 1px solid ${({ theme }) => theme.bg3};\n  box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.9, theme.shadow1)};\n  color: ${({ theme }) => theme.text2};\n  border-radius: 8px;\n`\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nconst Arrow = styled.div`\n  width: 8px;\n  height: 8px;\n  z-index: 9998;\n\n  ::before {\n    position: absolute;\n    width: 8px;\n    height: 8px;\n    z-index: 9998;\n\n    content: '';\n    border: 1px solid ${({ theme }) => theme.bg3};\n    transform: rotate(45deg);\n    background: ${({ theme }) => theme.bg2};\n  }\n\n  &.arrow-top {\n    bottom: -5px;\n    ::before {\n      border-top: none;\n      border-left: none;\n    }\n  }\n\n  &.arrow-bottom {\n    top: -5px;\n    ::before {\n      border-bottom: none;\n      border-right: none;\n    }\n  }\n\n  &.arrow-left {\n    right: -5px;\n\n    ::before {\n      border-bottom: none;\n      border-left: none;\n    }\n  }\n\n  &.arrow-right {\n    left: -5px;\n    ::before {\n      border-right: none;\n      border-top: none;\n    }\n  }\n`\n\nexport interface PopoverProps {\n  content: React.ReactNode\n  show: boolean\n  children: React.ReactNode\n  placement?: Placement\n}\n\nexport default function Popover({ content, show, children, placement = 'auto' }: PopoverProps) {\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>(null)\n  const [popperElement, setPopperElement] = useState<HTMLDivElement | null>(null)\n  const [arrowElement, setArrowElement] = useState<HTMLDivElement | null>(null)\n  const { styles, update, attributes } = usePopper(referenceElement, popperElement, {\n    placement,\n    strategy: 'fixed',\n    modifiers: [\n      { name: 'offset', options: { offset: [8, 8] } },\n      { name: 'arrow', options: { element: arrowElement } },\n    ],\n  })\n  const updateCallback = useCallback(() => {\n    update && update()\n  }, [update])\n  useInterval(updateCallback, show ? 100 : null)\n\n  return (\n    <>\n      <ReferenceElement ref={setReferenceElement as any}>{children}</ReferenceElement>\n      <Portal>\n        <PopoverContainer show={show} ref={setPopperElement as any} style={styles.popper} {...attributes.popper}>\n          {content}\n          <Arrow\n            className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\n            ref={setArrowElement as any}\n            style={styles.arrow}\n            {...attributes.arrow}\n          />\n        </PopoverContainer>\n      </Portal>\n    </>\n  )\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const current = savedCallback.current\n      current && current()\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport Popover, { PopoverProps } from '../Popover'\n\nconst TooltipContainer = styled.div`\n  width: 228px;\n  padding: 0.6rem 1rem;\n  line-height: 150%;\n  font-weight: 400;\n`\n\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\n  text: string\n}\n\nexport default function Tooltip({ text, ...rest }: TooltipProps) {\n  return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\n}\n\nexport function MouseoverTooltip({ children, ...rest }: Omit<TooltipProps, 'show'>) {\n  const [show, setShow] = useState(false)\n  const open = useCallback(() => setShow(true), [setShow])\n  const close = useCallback(() => setShow(false), [setShow])\n  return (\n    <Tooltip {...rest} show={show}>\n      <div onMouseEnter={open} onMouseLeave={close}>\n        {children}\n      </div>\n    </Tooltip>\n  )\n}\n","import Tooltip from 'components/Tooltip'\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\n\nconst TextWrapper = styled.div<{\n  margin: boolean\n  link: boolean\n  color?: string\n  fontSize?: string\n  adjustSize?: boolean\n}>`\n  position: relative;\n  margin-left: ${({ margin }) => margin && '4px'};\n  color: ${({ theme, link, color }) => (link ? theme.blue1 : color ?? theme.text1)};\n  font-size: ${({ fontSize }) => fontSize ?? 'inherit'};\n\n  :hover {\n    cursor: pointer;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: ${({ adjustSize }) => adjustSize && '12px'};\n  }\n`\n\nconst HoverInlineText = ({\n  text,\n  maxCharacters = 20,\n  margin = false,\n  adjustSize = false,\n  fontSize,\n  color,\n  link,\n  ...rest\n}: {\n  text: string\n  maxCharacters?: number\n  margin?: boolean\n  adjustSize?: boolean\n  fontSize?: string\n  color?: string\n  link?: boolean\n}) => {\n  const [showHover, setShowHover] = useState(false)\n\n  if (!text) {\n    return <span></span>\n  }\n\n  if (text.length > maxCharacters) {\n    return (\n      <Tooltip text={text} show={showHover}>\n        <TextWrapper\n          onMouseEnter={() => setShowHover(true)}\n          onMouseLeave={() => setShowHover(false)}\n          margin={margin}\n          adjustSize={adjustSize}\n          link={!!link}\n          color={color}\n          fontSize={fontSize}\n          {...rest}\n        >\n          {' ' + text.slice(0, maxCharacters - 1) + '...'}\n        </TextWrapper>\n      </Tooltip>\n    )\n  }\n\n  return (\n    <TextWrapper color={color} margin={margin} adjustSize={adjustSize} link={!!link} fontSize={fontSize} {...rest}>\n      {text}\n    </TextWrapper>\n  )\n}\n\nexport default HoverInlineText\n","import React, { useRef, useCallback, useState, useEffect, useMemo } from 'react'\nimport styled from 'styled-components'\nimport Row, { RowFixed } from 'components/Row'\nimport { HideSmall, TYPE } from 'theme'\nimport Hotkeys from 'react-hot-keys'\nimport { useFetchSearchResults } from 'data/search'\nimport { AutoColumn } from 'components/Column'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport { formatDollarAmount } from 'utils/numbers'\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\nimport { GreyBadge } from 'components/Card'\nimport { feeTierPercent } from 'utils'\nimport { useSavedTokens, useSavedPools } from 'state/user/hooks'\nimport { SavedIcon } from 'components/Button'\nimport { useHistory } from 'react-router-dom'\nimport { useTokenDatas } from 'state/tokens/hooks'\nimport { usePoolDatas } from 'state/pools/hooks'\nimport HoverInlineText from 'components/HoverInlineText'\nimport { TOKEN_HIDE, POOL_HIDE } from '../../constants/index'\n\nconst Container = styled.div`\n  position: relative;\n  z-index: 30;\n  width: 100%;\n`\n\nconst Wrapper = styled(Row)`\n  background-color: ${({ theme }) => theme.black};\n  padding: 10px 16px;\n  width: 500px;\n  height: 38px;\n  border-radius: 20px;\n  positon: relative;\n  z-index: 9999;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    width: 100%;\n  `};\n`\n\nconst StyledInput = styled.input`\n  position: relative;\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  background: none;\n  border: none;\n  width: 100%;\n  font-size: 16px;\n  outline: none;\n  color: ${({ theme }) => theme.text1};\n\n  ::placeholder {\n    color: ${({ theme }) => theme.text3};\n    font-size: 16px;\n  }\n\n  @media screen and (max-width: 640px) {\n    ::placeholder {\n      font-size: 1rem;\n    }\n  }\n`\n\nconst Menu = styled.div<{ hide: boolean }>`\n  display: flex;\n  flex-direction: column;\n  z-index: 9999;\n  width: 800px;\n  top: 50px;\n  max-height: 600px;\n  overflow: auto;\n  right: 0;\n  padding: 1.5rem;\n  padding-bottom: 1.5rem;\n  position: absolute;\n  background: ${({ theme }) => theme.bg0};\n  border-radius: 8px;\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.04);\n  display: ${({ hide }) => hide && 'none'};\n  border: 1px solid ${({ theme }) => theme.pink1};\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    position: absolute;\n    margin-top: 4px;\n    z-index: 9999;\n    width: 100%;\n    max-height: 400px;\n  `};\n`\n\nconst Blackout = styled.div`\n  position: absolute;\n  min-height: 100vh;\n  width: 100vw;\n  z-index: -40;\n  background-color: black;\n  opacity: 0.7;\n  left: 0;\n  top: 0;\n`\n\nconst ResponsiveGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 1.5fr repeat(3, 1fr);\n  align-items: center;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    grid-template-columns: 1fr;\n  `};\n`\n\nconst Break = styled.div`\n  height: 1px;\n  background-color: ${({ theme }) => theme.bg1};\n  width: 100%;\n`\n\nconst HoverText = styled.div<{ hide?: boolean | undefined }>`\n  color: ${({ theme }) => theme.blue1}\n  display: ${({ hide = false }) => hide && 'none'};\n  :hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst HoverRowLink = styled.div`\n  :hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst OptionButton = styled.div<{ enabled: boolean }>`\n  width: fit-content;\n  padding: 4px 8px;\n  border-radius: 8px;\n  display: flex;\n  font-size: 12px;\n  font-weight: 600;\n  margin-right: 10px;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ theme, enabled }) => (enabled ? theme.pink1 : 'transparent')};\n  color: ${({ theme, enabled }) => (enabled ? theme.white : theme.pink1)};\n  :hover {\n    opacity: 0.6;\n    cursor: pointer;\n  }\n`\n\nconst Search = ({ ...rest }: React.HTMLAttributes<HTMLDivElement>) => {\n  const history = useHistory()\n\n  const ref = useRef<HTMLInputElement>(null)\n  const menuRef = useRef<HTMLDivElement>(null)\n  const textRef = useRef<HTMLDivElement>(null)\n\n  const handleDown = useCallback(() => {\n    if (ref != null && ref.current !== null) {\n      ref.current.focus()\n    }\n  }, [])\n\n  const [focused, setFocused] = useState<boolean>(false)\n  const [showMenu, setShowMenu] = useState(false)\n  const [value, setValue] = useState('')\n\n  const { tokens, pools } = useFetchSearchResults(value)\n\n  useEffect(() => {\n    if (value !== '') {\n      setFocused(true)\n    } else {\n      setFocused(false)\n    }\n  }, [value])\n\n  const [tokensShown, setTokensShown] = useState(3)\n  const [poolsShown, setPoolsShown] = useState(3)\n\n  const handleClick = (e: any) => {\n    if (!(menuRef.current && menuRef.current.contains(e.target)) && !(ref.current && ref.current.contains(e.target))) {\n      setPoolsShown(3)\n      setTokensShown(3)\n      setShowMenu(false)\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('click', handleClick)\n    return () => {\n      document.removeEventListener('click', handleClick)\n    }\n  })\n\n  // watchlist\n  const [savedTokens, addSavedToken] = useSavedTokens()\n  const [savedPools, addSavedPool] = useSavedPools()\n\n  const handleNav = (to: string) => {\n    setShowMenu(false)\n    setPoolsShown(3)\n    setTokensShown(3)\n    history.push(to)\n  }\n\n  // get date for watchlist\n  const watchListTokenData = useTokenDatas(savedTokens)\n  const watchListPoolData = usePoolDatas(savedPools)\n\n  // filter on view\n  const [showWatchlist, setShowWatchlist] = useState(false)\n  const tokensForList = useMemo(\n    () => (showWatchlist ? watchListTokenData ?? [] : tokens.sort((t0, t1) => (t0.volumeUSD > t1.volumeUSD ? -1 : 1))),\n    [showWatchlist, tokens, watchListTokenData]\n  )\n  const poolForList = useMemo(\n    () => (showWatchlist ? watchListPoolData ?? [] : pools.sort((p0, p1) => (p0.volumeUSD > p1.volumeUSD ? -1 : 1))),\n    [pools, showWatchlist, watchListPoolData]\n  )\n\n  return (\n    <Hotkeys keyName=\"command+/\" onKeyDown={handleDown}>\n      {showMenu ? <Blackout /> : null}\n      <Container>\n        <Wrapper {...rest}>\n          <StyledInput\n            type=\"text\"\n            value={value}\n            onChange={(e) => {\n              setValue(e.target.value)\n            }}\n            placeholder=\"Search pools or tokens\"\n            ref={ref}\n            onFocus={() => {\n              setFocused(true)\n              setShowMenu(true)\n            }}\n            onBlur={() => setFocused(false)}\n          />\n          {!focused && <TYPE.gray pl=\"2px\">⌘/</TYPE.gray>}\n        </Wrapper>\n        <Menu hide={!showMenu} ref={menuRef}>\n          <AutoColumn gap=\"lg\">\n            <AutoColumn gap=\"sm\">\n              <RowFixed>\n                <OptionButton enabled={!showWatchlist} onClick={() => setShowWatchlist(false)}>\n                  Search\n                </OptionButton>\n                <OptionButton enabled={showWatchlist} onClick={() => setShowWatchlist(true)}>\n                  Watchlist\n                </OptionButton>\n              </RowFixed>\n            </AutoColumn>\n            <ResponsiveGrid>\n              <TYPE.main>Tokens</TYPE.main>\n              <HideSmall>\n                <TYPE.main textAlign=\"end\" fontSize=\"12px\">\n                  Volume 24H\n                </TYPE.main>\n              </HideSmall>\n              <HideSmall>\n                <TYPE.main textAlign=\"end\" fontSize=\"12px\">\n                  TVL\n                </TYPE.main>\n              </HideSmall>\n              <HideSmall>\n                <TYPE.main textAlign=\"end\" fontSize=\"12px\">\n                  Price\n                </TYPE.main>\n              </HideSmall>\n            </ResponsiveGrid>\n            {tokensForList\n              .filter((t) => !TOKEN_HIDE.includes(t.address))\n              .slice(0, tokensShown)\n              .map((t, i) => {\n                return (\n                  <HoverRowLink onClick={() => handleNav('/tokens/' + t.address)} key={i}>\n                    <ResponsiveGrid>\n                      <RowFixed>\n                        <CurrencyLogo address={t.address} />\n                        <TYPE.label ml=\"10px\">\n                          <HoverInlineText text={`${t.name} (${t.symbol})`} />{' '}\n                        </TYPE.label>\n                        <SavedIcon\n                          id=\"watchlist-icon\"\n                          size={'16px'}\n                          style={{ marginLeft: '8px' }}\n                          fill={savedTokens.includes(t.address)}\n                          onClick={(e) => {\n                            e.stopPropagation()\n                            addSavedToken(t.address)\n                          }}\n                        />\n                      </RowFixed>\n                      <HideSmall>\n                        <TYPE.label textAlign=\"end\">{formatDollarAmount(t.volumeUSD)}</TYPE.label>\n                      </HideSmall>\n                      <HideSmall>\n                        <TYPE.label textAlign=\"end\">{formatDollarAmount(t.tvlUSD)}</TYPE.label>\n                      </HideSmall>\n                      <HideSmall>\n                        <TYPE.label textAlign=\"end\">{formatDollarAmount(t.priceUSD)}</TYPE.label>\n                      </HideSmall>\n                    </ResponsiveGrid>\n                  </HoverRowLink>\n                )\n              })}\n            {tokensForList.length === 0 ? (\n              <TYPE.main>{showWatchlist ? 'Saved tokens will appear here' : 'No results'}</TYPE.main>\n            ) : null}\n            <HoverText\n              onClick={() => {\n                setTokensShown(tokensShown + 5)\n              }}\n              hide={!(tokensForList.length > 3 && tokensForList.length >= tokensShown)}\n              ref={textRef}\n            >\n              See more...\n            </HoverText>\n            <Break />\n            <ResponsiveGrid>\n              <TYPE.main>Pools</TYPE.main>\n              <HideSmall>\n                <TYPE.main textAlign=\"end\" fontSize=\"12px\">\n                  Volume 24H\n                </TYPE.main>\n              </HideSmall>\n              <HideSmall>\n                <TYPE.main textAlign=\"end\" fontSize=\"12px\">\n                  TVL\n                </TYPE.main>\n              </HideSmall>\n              <HideSmall>\n                <TYPE.main textAlign=\"end\" fontSize=\"12px\">\n                  Price\n                </TYPE.main>\n              </HideSmall>\n            </ResponsiveGrid>\n            {poolForList\n              .filter((p) => !POOL_HIDE.includes(p.address))\n              .slice(0, poolsShown)\n              .map((p, i) => {\n                return (\n                  <HoverRowLink onClick={() => handleNav('/pools/' + p.address)} key={i}>\n                    <ResponsiveGrid key={i}>\n                      <RowFixed>\n                        <DoubleCurrencyLogo address0={p.token0.address} address1={p.token1.address} />\n                        <TYPE.label ml=\"10px\" style={{ whiteSpace: 'nowrap' }}>\n                          <HoverInlineText maxCharacters={12} text={`${p.token0.symbol} / ${p.token1.symbol}`} />\n                        </TYPE.label>\n                        <GreyBadge ml=\"10px\">{feeTierPercent(p.feeTier)}</GreyBadge>\n                        <SavedIcon\n                          id=\"watchlist-icon\"\n                          size={'16px'}\n                          style={{ marginLeft: '10px' }}\n                          fill={savedPools.includes(p.address)}\n                          onClick={(e) => {\n                            e.stopPropagation()\n                            addSavedPool(p.address)\n                          }}\n                        />\n                      </RowFixed>\n                      <HideSmall>\n                        <TYPE.label textAlign=\"end\">{formatDollarAmount(p.volumeUSD)}</TYPE.label>\n                      </HideSmall>\n                      <HideSmall>\n                        <TYPE.label textAlign=\"end\">{formatDollarAmount(p.tvlUSD)}</TYPE.label>\n                      </HideSmall>\n                      <HideSmall>\n                        <TYPE.label textAlign=\"end\">{formatDollarAmount(p.token0Price)}</TYPE.label>\n                      </HideSmall>\n                    </ResponsiveGrid>\n                  </HoverRowLink>\n                )\n              })}\n            {poolForList.length === 0 ? (\n              <TYPE.main>{showWatchlist ? 'Saved pools will appear here' : 'No results'}</TYPE.main>\n            ) : null}\n            <HoverText\n              onClick={() => {\n                setPoolsShown(poolsShown + 5)\n              }}\n              hide={!(poolForList.length > 3 && poolForList.length >= poolsShown)}\n              ref={textRef}\n            >\n              See more...\n            </HoverText>\n          </AutoColumn>\n        </Menu>\n      </Container>\n    </Hotkeys>\n  )\n}\n\nexport default Search\n","/* eslint-disable @typescript-eslint/no-var-requires */\n// import { ChainId } from '@uniswap/sdk'\nimport React from 'react'\n// import { Text } from 'rebass'\nimport { NavLink } from 'react-router-dom'\nimport { darken } from 'polished'\n\nimport styled from 'styled-components'\n\n// import Logo from '../../assets/svg/logo.svg'\nimport LogoDark from '../../assets/svg/logo_white.svg'\n// import { useActiveWeb3React } from '../../hooks'\n// import { useDarkModeManager } from '../../state/user/hooks'\n// import { useETHBalances } from '../../state/wallet/hooks'\n\n// import { YellowCard } from '../Card'\n// import { Moon, Sun } from 'react-feather'\nimport Menu from '../Menu'\n\nimport Row, { RowFixed } from '../Row'\n// import Web3Status from '../Web3Status'\nimport SearchSmall from 'components/Search'\nimport { HideMedium } from 'theme'\n\nconst HeaderFrame = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 120px;\n  align-items: center;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: row;\n  width: 100%;\n  top: 0;\n  position: relative;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 1rem;\n  z-index: 2;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n\n  background-color: ${({ theme }) => theme.bg0};\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    grid-template-columns: 1fr;\n    padding: 0 1rem;\n    width: calc(100%);\n    position: relative;\n  `};\n\n  ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n        padding: 0.5rem 1rem;\n  `}\n`\n\nconst HeaderControls = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-self: flex-end;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n      padding-bottom: 1rem;\n      width: 100%;\n  `};\n`\n\n// const HeaderElement = styled.div`\n//   display: flex;\n//   align-items: center;\n\n//   /* addresses safari's lack of support for \"gap\" */\n//   & > *:not(:first-child) {\n//     margin-left: 8px;\n//   }\n\n//   ${({ theme }) => theme.mediaWidth.upToMedium`\n//    flex-direction: row-reverse;\n//     align-items: center;\n//   `};\n// `\n\nconst HeaderElementWrap = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst HeaderRow = styled(RowFixed)`\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n   width: 100%;\n  `};\n`\n\nconst HeaderLinks = styled(Row)`\n  justify-content: center;\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    padding: 1rem 0 1rem 1rem;\n    justify-content: flex-end;\n`};\n`\n\n// const AccountElement = styled.div<{ active: boolean }>`\n//   display: flex;\n//   flex-direction: row;\n//   align-items: center;\n//   background-color: ${({ theme, active }) => (!active ? theme.bg0 : theme.bg1)};\n//   border-radius: 12px;\n//   white-space: nowrap;\n//   width: 100%;\n//   cursor: pointer;\n\n//   :focus {\n//     border: 1px solid blue;\n//   }\n// `\n\n// const HideSmall = styled.span`\n//   ${({ theme }) => theme.mediaWidth.upToSmall`\n//     display: none;\n//   `};\n// `\n\n// const NetworkCard = styled(YellowCard)`\n//   border-radius: 12px;\n//   padding: 8px 12px;\n//   ${({ theme }) => theme.mediaWidth.upToSmall`\n//     margin: 0;\n//     margin-right: 0.5rem;\n//     width: initial;\n//     overflow: hidden;\n//     text-overflow: ellipsis;\n//     flex-shrink: 1;\n//   `};\n// `\n\n// const BalanceText = styled(Text)`\n//   ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n//     display: none;\n//   `};\n// `\n\nconst Title = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  pointer-events: auto;\n  justify-self: flex-start;\n  margin-right: 12px;\n  :hover {\n    cursor: pointer;\n  }\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    justify-self: center;\n  `};\n`\n\nconst UniIcon = styled.div`\n  transition: transform 0.3s ease;\n  :hover {\n    transform: rotate(-5deg);\n  }\n`\n\nconst activeClassName = 'ACTIVE'\n\nconst StyledNavLink = styled(NavLink).attrs({\n  activeClassName,\n})`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: left;\n  border-radius: 3rem;\n  outline: none;\n  cursor: pointer;\n  text-decoration: none;\n  color: ${({ theme }) => theme.text3};\n  font-size: 1rem;\n  width: fit-content;\n  margin: 0 6px;\n  padding: 8px 12px;\n  font-weight: 500;\n\n  &.${activeClassName} {\n    border-radius: 12px;\n    background-color: ${({ theme }) => theme.bg2};\n    color: ${({ theme }) => theme.text1};\n  }\n\n  :hover,\n  :focus {\n    color: ${({ theme }) => darken(0.1, theme.text1)};\n  }\n`\n\nexport const StyledMenuButton = styled.button`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border: none;\n  background-color: transparent;\n  margin: 0;\n  padding: 0;\n  height: 35px;\n  background-color: ${({ theme }) => theme.bg3};\n  margin-left: 8px;\n  padding: 0.15rem 0.5rem;\n  border-radius: 0.5rem;\n\n  :hover,\n  :focus {\n    cursor: pointer;\n    outline: none;\n    background-color: ${({ theme }) => theme.bg4};\n  }\n\n  svg {\n    margin-top: 2px;\n  }\n  > * {\n    stroke: ${({ theme }) => theme.text1};\n  }\n`\n\n// const NETWORK_LABELS: { [chainId in ChainId]?: string } = {\n//   [ChainId.RINKEBY]: 'Rinkeby',\n//   [ChainId.ROPSTEN]: 'Ropsten',\n//   [ChainId.GÖRLI]: 'Görli',\n//   [ChainId.AVALANCHE]: 'Avalanche',\n// }\n\nexport default function Header() {\n  // const { account, chainId } = useActiveWeb3React()\n\n  // const userEthBalance = useETHBalances(account ? [account] : [])?.[account ?? '']\n  // const [isDark] = useDarkModeManager()\n  // const [darkMode, toggleDarkMode] = useDarkModeManager()\n\n  return (\n    <HeaderFrame>\n      <HeaderRow>\n        <Title to=\"/\">\n          <UniIcon>\n            <img width={'24px'} src={LogoDark} alt=\"logo\" />\n          </UniIcon>\n        </Title>\n        <HeaderLinks>\n          <StyledNavLink id={`pool-nav-link`} to={'/'} isActive={(match, { pathname }) => pathname === '/'}>\n            Overview\n          </StyledNavLink>\n          {/* <StyledNavLink id={`swap-nav-link`} to={'/protocol'}>\n            Protocol\n          </StyledNavLink> */}\n          <StyledNavLink id={`stake-nav-link`} to={'/pools'}>\n            Pools\n          </StyledNavLink>\n          <StyledNavLink id={`stake-nav-link`} to={'/tokens'}>\n            Tokens\n          </StyledNavLink>\n          {/* <StyledNavLink id={`stake-nav-link`} to={'/wallet'}>\n            Wallet\n          </StyledNavLink> */}\n        </HeaderLinks>\n      </HeaderRow>\n      <HeaderControls>\n        <SearchSmall />\n        {/* <HeaderElement>\n          <HideSmall>\n            {chainId && NETWORK_LABELS[chainId] && (\n              <NetworkCard title={NETWORK_LABELS[chainId]}>{NETWORK_LABELS[chainId]}</NetworkCard>\n            )}\n          </HideSmall>\n          <AccountElement active={!!account} style={{ pointerEvents: 'auto' }}>\n            {account && userEthBalance ? (\n              <BalanceText style={{ flexShrink: 0 }} pl=\"0.75rem\" pr=\"0.5rem\" fontWeight={500}>\n                {userEthBalance?.toSignificant(4)} ETH\n              </BalanceText>\n            ) : null}\n            <Web3Status />\n          </AccountElement>\n        </HeaderElement> */}\n        <HideMedium>\n          <HeaderElementWrap>\n            {/* <StyledMenuButton onClick={() => toggleDarkMode()}>\n            {darkMode ? <Moon size={20} /> : <Sun size={20} />}\n          </StyledMenuButton> */}\n            <Menu />\n          </HeaderElementWrap>\n        </HideMedium>\n      </HeaderControls>\n    </HeaderFrame>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { AlertTriangle, X } from 'react-feather'\nimport { useURLWarningToggle, useURLWarningVisible } from '../../state/user/hooks'\nimport { isMobile } from 'react-device-detect'\n\nconst PhishAlert = styled.div<{ isActive: any }>`\n  width: 100%;\n  padding: 6px 6px;\n  background-color: ${({ theme }) => theme.blue1};\n  color: white;\n  font-size: 11px;\n  justify-content: space-between;\n  align-items: center;\n  display: ${({ isActive }) => (isActive ? 'flex' : 'none')};\n`\n\nexport const StyledClose = styled(X)`\n  :hover {\n    cursor: pointer;\n  }\n`\n\nexport default function URLWarning() {\n  const toggleURLWarning = useURLWarningToggle()\n  const showURLWarning = useURLWarningVisible()\n\n  return isMobile ? (\n    <PhishAlert isActive={showURLWarning}>\n      <div style={{ display: 'flex' }}>\n        <AlertTriangle style={{ marginRight: 6 }} size={12} /> Make sure the URL is\n        <code style={{ padding: '0 4px', display: 'inline', fontWeight: 'bold' }}>app.uniswap.org</code>\n      </div>\n      <StyledClose size={12} onClick={toggleURLWarning} />\n    </PhishAlert>\n  ) : window.location.hostname === 'app.uniswap.org' ? (\n    <PhishAlert isActive={showURLWarning}>\n      <div style={{ display: 'flex' }}>\n        <AlertTriangle style={{ marginRight: 6 }} size={12} /> Always make sure the URL is\n        <code style={{ padding: '0 4px', display: 'inline', fontWeight: 'bold' }}>app.uniswap.org</code> - bookmark it\n        to be safe.\n      </div>\n      <StyledClose size={12} onClick={toggleURLWarning} />\n    </PhishAlert>\n  ) : null\n}\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { Version } from '@uniswap/token-lists'\n\nexport default function listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n","import { diffTokenLists, TokenList } from '@uniswap/token-lists'\nimport React, { useCallback, useMemo } from 'react'\nimport ReactGA from 'react-ga'\nimport { useDispatch } from 'react-redux'\nimport { Text } from 'rebass'\nimport styled from 'styled-components'\nimport { AppDispatch } from '../../state'\nimport { useRemovePopup } from '../../state/application/hooks'\nimport { acceptListUpdate } from '../../state/lists/actions'\nimport { TYPE } from '../../theme'\nimport listVersionLabel from '../../utils/listVersionLabel'\nimport { ButtonSecondary } from '../Button'\nimport { AutoColumn } from '../Column'\nimport { AutoRow } from '../Row'\n\nexport const ChangesList = styled.ul`\n  max-height: 400px;\n  overflow: auto;\n`\n\nexport default function ListUpdatePopup({\n  popKey,\n  listUrl,\n  oldList,\n  newList,\n  auto,\n}: {\n  popKey: string\n  listUrl: string\n  oldList: TokenList\n  newList: TokenList\n  auto: boolean\n}) {\n  const removePopup = useRemovePopup()\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup])\n  const dispatch = useDispatch<AppDispatch>()\n\n  const handleAcceptUpdate = useCallback(() => {\n    if (auto) return\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Update List from Popup',\n      label: listUrl,\n    })\n    dispatch(acceptListUpdate(listUrl))\n    removeThisPopup()\n  }, [auto, dispatch, listUrl, removeThisPopup])\n\n  const { added: tokensAdded, changed: tokensChanged, removed: tokensRemoved } = useMemo(() => {\n    return diffTokenLists(oldList.tokens, newList.tokens)\n  }, [newList.tokens, oldList.tokens])\n  const numTokensChanged = useMemo(\n    () =>\n      Object.keys(tokensChanged).reduce((memo, chainId: any) => memo + Object.keys(tokensChanged[chainId]).length, 0),\n    [tokensChanged]\n  )\n\n  return (\n    <AutoRow>\n      <AutoColumn style={{ flex: '1' }} gap=\"8px\">\n        {auto ? (\n          <TYPE.body fontWeight={500}>\n            The token list &quot;{oldList.name}&quot; has been updated to{' '}\n            <strong>{listVersionLabel(newList.version)}</strong>.\n          </TYPE.body>\n        ) : (\n          <>\n            <div>\n              <Text>\n                An update is available for the token list &quot;{oldList.name}&quot; (\n                {listVersionLabel(oldList.version)} to {listVersionLabel(newList.version)}).\n              </Text>\n              <ChangesList>\n                {tokensAdded.length > 0 ? (\n                  <li>\n                    {tokensAdded.map((token, i) => (\n                      <React.Fragment key={`${token.chainId}-${token.address}`}>\n                        <strong title={token.address}>{token.symbol}</strong>\n                        {i === tokensAdded.length - 1 ? null : ', '}\n                      </React.Fragment>\n                    ))}{' '}\n                    added\n                  </li>\n                ) : null}\n                {tokensRemoved.length > 0 ? (\n                  <li>\n                    {tokensRemoved.map((token, i) => (\n                      <React.Fragment key={`${token.chainId}-${token.address}`}>\n                        <strong title={token.address}>{token.symbol}</strong>\n                        {i === tokensRemoved.length - 1 ? null : ', '}\n                      </React.Fragment>\n                    ))}{' '}\n                    removed\n                  </li>\n                ) : null}\n                {numTokensChanged > 0 ? <li>{numTokensChanged} tokens updated</li> : null}\n              </ChangesList>\n            </div>\n            <AutoRow>\n              <div style={{ flexGrow: 1, marginRight: 12 }}>\n                <ButtonSecondary onClick={handleAcceptUpdate}>Accept update</ButtonSecondary>\n              </div>\n              <div style={{ flexGrow: 1 }}>\n                <ButtonSecondary onClick={removeThisPopup}>Dismiss</ButtonSecondary>\n              </div>\n            </AutoRow>\n          </>\n        )}\n      </AutoColumn>\n    </AutoRow>\n  )\n}\n","import React, { useContext } from 'react'\nimport { AlertCircle, CheckCircle } from 'react-feather'\nimport styled, { ThemeContext } from 'styled-components'\nimport { useActiveWeb3React } from '../../hooks'\nimport { TYPE } from '../../theme'\nimport { ExternalLink } from '../../theme/components'\nimport { getEtherscanLink } from '../../utils'\nimport { AutoColumn } from '../Column'\nimport { AutoRow } from '../Row'\n\nconst RowNoFlex = styled(AutoRow)`\n  flex-wrap: nowrap;\n`\n\nexport default function TransactionPopup({\n  hash,\n  success,\n  summary,\n}: {\n  hash: string\n  success?: boolean\n  summary?: string\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const theme = useContext(ThemeContext)\n\n  return (\n    <RowNoFlex>\n      <div style={{ paddingRight: 16 }}>\n        {success ? <CheckCircle color={theme.green1} size={24} /> : <AlertCircle color={theme.red1} size={24} />}\n      </div>\n      <AutoColumn gap=\"8px\">\n        <TYPE.body fontWeight={500}>{summary ?? 'Hash: ' + hash.slice(0, 8) + '...' + hash.slice(58, 65)}</TYPE.body>\n        {chainId && (\n          <ExternalLink href={getEtherscanLink(chainId, hash, 'transaction')}>View on Etherscan</ExternalLink>\n        )}\n      </AutoColumn>\n    </RowNoFlex>\n  )\n}\n","import React, { useCallback, useContext, useEffect } from 'react'\nimport { X } from 'react-feather'\nimport { useSpring } from 'react-spring/web'\nimport styled, { ThemeContext } from 'styled-components'\nimport { animated } from 'react-spring'\nimport { PopupContent } from '../../state/application/actions'\nimport { useRemovePopup } from '../../state/application/hooks'\nimport ListUpdatePopup from './ListUpdatePopup'\nimport TransactionPopup from './TransactionPopup'\n\nexport const StyledClose = styled(X)`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n\n  :hover {\n    cursor: pointer;\n  }\n`\nexport const Popup = styled.div`\n  display: inline-block;\n  width: 100%;\n  padding: 1em;\n  background-color: ${({ theme }) => theme.bg1};\n  position: relative;\n  border-radius: 10px;\n  padding: 20px;\n  padding-right: 35px;\n  overflow: hidden;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    min-width: 290px;\n    &:not(:last-of-type) {\n      margin-right: 20px;\n    }\n  `}\n`\nconst Fader = styled.div`\n  position: absolute;\n  bottom: 0px;\n  left: 0px;\n  width: 100%;\n  height: 2px;\n  background-color: ${({ theme }) => theme.bg3};\n`\n\nconst AnimatedFader = animated(Fader)\n\nexport default function PopupItem({\n  removeAfterMs,\n  content,\n  popKey,\n}: {\n  removeAfterMs: number | null\n  content: PopupContent\n  popKey: string\n}) {\n  const removePopup = useRemovePopup()\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup])\n  useEffect(() => {\n    if (removeAfterMs === null) return undefined\n\n    const timeout = setTimeout(() => {\n      removeThisPopup()\n    }, removeAfterMs)\n\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [removeAfterMs, removeThisPopup])\n\n  const theme = useContext(ThemeContext)\n\n  let popupContent\n  if ('txn' in content) {\n    const {\n      txn: { hash, success, summary },\n    } = content\n    popupContent = <TransactionPopup hash={hash} success={success} summary={summary} />\n  } else if ('listUpdate' in content) {\n    const {\n      listUpdate: { listUrl, oldList, newList, auto },\n    } = content\n    popupContent = <ListUpdatePopup popKey={popKey} listUrl={listUrl} oldList={oldList} newList={newList} auto={auto} />\n  }\n\n  const faderStyle = useSpring({\n    from: { width: '100%' },\n    to: { width: '0%' },\n    config: { duration: removeAfterMs ?? undefined },\n  })\n\n  return (\n    <Popup>\n      <StyledClose color={theme.text2} onClick={removeThisPopup} />\n      {popupContent}\n      {removeAfterMs !== null ? <AnimatedFader style={faderStyle} /> : null}\n    </Popup>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useActivePopups } from '../../state/application/hooks'\nimport { AutoColumn } from '../Column'\nimport PopupItem from './PopupItem'\nimport { useURLWarningVisible } from '../../state/user/hooks'\n\nconst MobilePopupWrapper = styled.div<{ height: string | number }>`\n  position: relative;\n  max-width: 100%;\n  height: ${({ height }) => height};\n  margin: ${({ height }) => (height ? '0 auto;' : 0)};\n  margin-bottom: ${({ height }) => (height ? '20px' : 0)}};\n\n  display: none;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    display: block;\n  `};\n`\n\nconst MobilePopupInner = styled.div`\n  height: 99%;\n  overflow-x: auto;\n  overflow-y: hidden;\n  display: flex;\n  flex-direction: row;\n  -webkit-overflow-scrolling: touch;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst FixedPopupColumn = styled(AutoColumn)<{ extraPadding: boolean }>`\n  position: fixed;\n  top: ${({ extraPadding }) => (extraPadding ? '108px' : '88px')};\n  right: 1rem;\n  max-width: 355px !important;\n  width: 100%;\n  z-index: 3;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    display: none;\n  `};\n`\n\nexport default function Popups() {\n  // get all popups\n  const activePopups = useActivePopups()\n\n  const urlWarningActive = useURLWarningVisible()\n\n  return (\n    <>\n      <FixedPopupColumn gap=\"20px\" extraPadding={urlWarningActive}>\n        {activePopups.map((item) => (\n          <PopupItem key={item.key} content={item.content} popKey={item.key} removeAfterMs={item.removeAfterMs} />\n        ))}\n      </FixedPopupColumn>\n      <MobilePopupWrapper height={activePopups?.length > 0 ? 'fit-content' : 0}>\n        <MobilePopupInner>\n          {activePopups // reverse so new items up front\n            .slice(0)\n            .reverse()\n            .map((item) => (\n              <PopupItem key={item.key} content={item.content} popKey={item.key} removeAfterMs={item.removeAfterMs} />\n            ))}\n        </MobilePopupInner>\n      </MobilePopupWrapper>\n    </>\n  )\n}\n","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { parse } from 'qs'\nimport { AppDispatch } from '../state'\nimport { updateUserDarkMode } from '../state/user/actions'\n\nexport default function DarkModeQueryParamReader({ location: { search } }: RouteComponentProps): null {\n  const dispatch = useDispatch<AppDispatch>()\n\n  useEffect(() => {\n    if (!search) return\n    if (search.length < 2) return\n\n    const parsed = parse(search, {\n      parseArrays: false,\n      ignoreQueryPrefix: true,\n    })\n\n    const theme = parsed.theme\n\n    if (typeof theme !== 'string') return\n\n    if (theme.toLowerCase() === 'light') {\n      dispatch(updateUserDarkMode({ userDarkMode: false }))\n    } else if (theme.toLowerCase() === 'dark') {\n      dispatch(updateUserDarkMode({ userDarkMode: true }))\n    }\n  }, [dispatch, search])\n\n  return null\n}\n","import React, { Dispatch, SetStateAction, ReactNode } from 'react'\nimport { ResponsiveContainer, XAxis, Tooltip, AreaChart, Area } from 'recharts'\nimport styled from 'styled-components'\nimport Card from 'components/Card'\nimport { RowBetween } from 'components/Row'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport useTheme from 'hooks/useTheme'\nimport { darken } from 'polished'\ndayjs.extend(utc)\n\nconst DEFAULT_HEIGHT = 300\n\nconst Wrapper = styled(Card)`\n  width: 100%;\n  height: ${DEFAULT_HEIGHT}px;\n  padding: 1rem;\n  padding-right: 2rem;\n  display: flex;\n  background-color: ${({ theme }) => theme.bg0}\n  flex-direction: column;\n  > * {\n    font-size: 1rem;\n  }\n`\n\nexport type LineChartProps = {\n  data: any[]\n  color?: string | undefined\n  height?: number | undefined\n  minHeight?: number\n  setValue?: Dispatch<SetStateAction<number | undefined>> // used for value on hover\n  setLabel?: Dispatch<SetStateAction<string | undefined>> // used for label of valye\n  value?: number\n  label?: string\n  topLeft?: ReactNode | undefined\n  topRight?: ReactNode | undefined\n  bottomLeft?: ReactNode | undefined\n  bottomRight?: ReactNode | undefined\n} & React.HTMLAttributes<HTMLDivElement>\n\nconst Chart = ({\n  data,\n  color = '#56B2A4',\n  value,\n  label,\n  setValue,\n  setLabel,\n  topLeft,\n  topRight,\n  bottomLeft,\n  bottomRight,\n  minHeight = DEFAULT_HEIGHT,\n  ...rest\n}: LineChartProps) => {\n  const theme = useTheme()\n  const parsedValue = value\n\n  return (\n    <Wrapper minHeight={minHeight} {...rest}>\n      <RowBetween>\n        {topLeft ?? null}\n        {topRight ?? null}\n      </RowBetween>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <AreaChart\n          width={500}\n          height={300}\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n          onMouseLeave={() => {\n            setLabel && setLabel(undefined)\n            setValue && setValue(undefined)\n          }}\n        >\n          <defs>\n            <linearGradient id=\"gradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"5%\" stopColor={darken(0.36, color)} stopOpacity={0.5} />\n              <stop offset=\"100%\" stopColor={color} stopOpacity={0} />\n            </linearGradient>\n          </defs>\n          <XAxis\n            dataKey=\"time\"\n            axisLine={false}\n            tickLine={false}\n            tickFormatter={(time) => dayjs(time).format('DD')}\n            minTickGap={10}\n          />\n          <Tooltip\n            cursor={{ stroke: theme.bg2 }}\n            contentStyle={{ display: 'none' }}\n            formatter={(value: number, name: string, props: { payload: { time: string; value: number } }) => {\n              if (setValue && parsedValue !== props.payload.value) {\n                setValue(props.payload.value)\n              }\n              const formattedTime = dayjs(props.payload.time).format('MMM D, YYYY')\n              if (setLabel && label !== formattedTime) setLabel(formattedTime)\n            }}\n          />\n          <Area dataKey=\"value\" type=\"monotone\" stroke={color} fill=\"url(#gradient)\" strokeWidth={2} />\n        </AreaChart>\n      </ResponsiveContainer>\n      <RowBetween>\n        {bottomLeft ?? null}\n        {bottomRight ?? null}\n      </RowBetween>\n    </Wrapper>\n  )\n}\n\nexport default Chart\n","import { ProtocolData } from './reducer'\nimport { createAction } from '@reduxjs/toolkit'\nimport { ChartDayData, Transaction } from 'types'\n\n// protocol wide info\nexport const updateProtocolData = createAction<{ protocolData: ProtocolData }>('protocol/updateProtocolData')\nexport const updateChartData = createAction<{ chartData: ChartDayData[] }>('protocol/updateChartData')\nexport const updateTransactions = createAction<{ transactions: Transaction[] }>('protocol/updateTransactions')\n","import { updateProtocolData, updateChartData, updateTransactions } from './actions'\nimport { AppState, AppDispatch } from './../index'\nimport { ProtocolData } from './reducer'\nimport { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ChartDayData, Transaction } from 'types'\n\nexport function useProtocolData(): [ProtocolData | undefined, (protocolData: ProtocolData) => void] {\n  const protocolData: ProtocolData | undefined = useSelector((state: AppState) => state.protocol.data)\n\n  const dispatch = useDispatch<AppDispatch>()\n  const setProtocolData: (protocolData: ProtocolData) => void = useCallback(\n    (protocolData: ProtocolData) => dispatch(updateProtocolData({ protocolData })),\n    [dispatch]\n  )\n\n  return [protocolData, setProtocolData]\n}\n\nexport function useProtocolChartData(): [ChartDayData[] | undefined, (chartData: ChartDayData[]) => void] {\n  const chartData: ChartDayData[] | undefined = useSelector((state: AppState) => state.protocol.chartData)\n  const dispatch = useDispatch<AppDispatch>()\n  const setChartData: (chartData: ChartDayData[]) => void = useCallback(\n    (chartData: ChartDayData[]) => dispatch(updateChartData({ chartData })),\n    [dispatch]\n  )\n  return [chartData, setChartData]\n}\n\nexport function useProtocolTransactions(): [Transaction[] | undefined, (transactions: Transaction[]) => void] {\n  const transactions: Transaction[] | undefined = useSelector((state: AppState) => state.protocol.transactions)\n  const dispatch = useDispatch<AppDispatch>()\n  const setTransactions: (transactions: Transaction[]) => void = useCallback(\n    (transactions: Transaction[]) => dispatch(updateTransactions({ transactions })),\n    [dispatch]\n  )\n  return [transactions, setTransactions]\n}\n","import React from 'react'\nimport { TYPE } from 'theme'\nimport styled from 'styled-components'\n\nconst Wrapper = styled(TYPE.main)<{ fontWeight: number; fontSize: string; negative: boolean; neutral: boolean }>`\n  font-size: ${({ fontSize }) => fontSize};\n  font-weight: ${({ fontWeight }) => fontWeight};\n  color: ${({ theme, negative }) => (negative ? theme.red1 : theme.green1)};\n`\n\nexport interface LogoProps {\n  value: number | undefined\n  decimals?: number\n  fontSize?: string\n  fontWeight?: number\n  wrap?: boolean\n  simple?: boolean\n}\n\nexport default function Percent({\n  value,\n  decimals = 2,\n  fontSize = '16px',\n  fontWeight = 500,\n  wrap = false,\n  simple = false,\n  ...rest\n}: LogoProps) {\n  if (value === undefined || value === null) {\n    return (\n      <TYPE.main fontWeight={fontWeight} fontSize={fontSize}>\n        -\n      </TYPE.main>\n    )\n  }\n\n  const truncated = parseFloat(value.toFixed(decimals))\n\n  if (simple) {\n    return (\n      <Wrapper {...rest} fontWeight={fontWeight} fontSize={fontSize} negative={false} neutral={true}>\n        {Math.abs(value).toFixed(decimals)}%\n      </Wrapper>\n    )\n  }\n\n  return (\n    <Wrapper {...rest} fontWeight={fontWeight} fontSize={fontSize} negative={truncated < 0} neutral={truncated === 0}>\n      {wrap && '('}\n      {truncated < 0 && '↓'}\n      {truncated > 0 && '↑'}\n      {Math.abs(value).toFixed(decimals)}%{wrap && ')'}\n    </Wrapper>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/whitev3.8354e9b6.svg\";","import React from 'react'\nimport v3 from '../../assets/images/whitev3.svg'\nimport styled, { keyframes, css } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.primary1};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function Loader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n\nconst pulse = keyframes`\n  0% { transform: scale(1); }\n  60% { transform: scale(1.1); }\n  100% { transform: scale(1); }\n`\n\nconst Wrapper = styled.div<{ fill: number; height?: string }>`\n  pointer-events: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme, fill }) => (fill ? 'black' : theme.bg0)};\n  height: 100%;\n  width: 100%;\n  ${(props) =>\n    props.fill && !props.height\n      ? css`\n          height: 100vh;\n        `\n      : css`\n          height: 180px;\n        `}\n`\n\nconst AnimatedImg = styled.div`\n  animation: ${pulse} 800ms linear infinite;\n  & > * {\n    width: 72px;\n  }\n`\n\nexport const LocalLoader = ({ fill }: { fill: boolean }) => {\n  return (\n    <Wrapper fill={fill ? 1 : 0}>\n      <AnimatedImg>\n        <img src={v3} alt=\"loading-icon\" />\n      </AnimatedImg>\n    </Wrapper>\n  )\n}\n\nconst loadingAnimation = keyframes`\n  0% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`\n\nexport const LoadingRows = styled.div`\n  display: grid;\n  min-width: 75%;\n  max-width: 100%;\n  grid-column-gap: 0.5em;\n  grid-row-gap: 0.8em;\n  grid-template-columns: repeat(3, 1fr);\n  & > div {\n    animation: ${loadingAnimation} 1.5s infinite;\n    animation-fill-mode: both;\n    background: linear-gradient(\n      to left,\n      ${({ theme }) => theme.bg1} 25%,\n      ${({ theme }) => theme.bg2} 50%,\n      ${({ theme }) => theme.bg1} 75%\n    );\n    background-size: 400%;\n    border-radius: 12px;\n    height: 2.4em;\n    will-change: background-position;\n  }\n  & > div:nth-child(4n + 1) {\n    grid-column: 1 / 3;\n  }\n  & > div:nth-child(4n) {\n    grid-column: 3 / 4;\n    margin-bottom: 2em;\n  }\n`\n","import styled from 'styled-components'\nimport { TYPE } from 'theme'\n\n// responsive text\nexport const Label = styled(TYPE.label)<{ end?: number }>`\n  display: flex;\n  font-size: 16px;\n  font-weight: 400;\n  justify-content: ${({ end }) => (end ? 'flex-end' : 'flex-start')};\n  align-items: center;\n  font-variant-numeric: tabular-nums;\n  @media screen and (max-width: 640px) {\n    font-size: 14px;\n  }\n`\n\nexport const ClickableText = styled(Label)`\n  text-align: end;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n  user-select: none;\n  @media screen and (max-width: 640px) {\n    font-size: 12px;\n  }\n`\n","import Row from 'components/Row'\nimport React from 'react'\nimport styled from 'styled-components'\n\nexport const PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 0.2em;\n  margin-bottom: 0.5em;\n`\n\nexport const Arrow = styled.div<{ faded: boolean }>`\n  color: ${({ theme }) => theme.primary1};\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nexport const Break = styled.div`\n  height: 1px;\n  background-color: ${({ theme }) => theme.bg1};\n  width: 100%;\n`\n\nexport const FixedSpan = styled.span<{ width?: string | null }>`\n  width: ${({ width }) => width ?? ''};\n`\n\nexport const MonoSpace = styled.span`\n  font-variant-numeric: tabular-nums;\n`\n","import React, { useState, useMemo, useCallback, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ExtraSmallOnly, HideExtraSmall, TYPE } from 'theme'\nimport { DarkGreyCard } from 'components/Card'\nimport { TokenData } from '../../state/tokens/reducer'\nimport Loader, { LoadingRows } from 'components/Loader'\nimport { Link } from 'react-router-dom'\nimport { AutoColumn } from 'components/Column'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport { RowFixed } from 'components/Row'\nimport { formatDollarAmount } from 'utils/numbers'\nimport Percent from 'components/Percent'\nimport { Label, ClickableText } from '../Text'\nimport { PageButtons, Arrow, Break } from 'components/shared'\nimport HoverInlineText from '../HoverInlineText'\nimport useTheme from 'hooks/useTheme'\nimport { TOKEN_HIDE } from '../../constants/index'\n\nconst Wrapper = styled(DarkGreyCard)`\n  width: 100%;\n`\n\nconst ResponsiveGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  align-items: center;\n\n  grid-template-columns: 20px 3fr repeat(4, 1fr);\n\n  @media screen and (max-width: 900px) {\n    grid-template-columns: 20px 1.5fr repeat(3, 1fr);\n    & :nth-child(4) {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 20px 1.5fr repeat(2, 1fr);\n    & :nth-child(6) {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 670px) {\n    grid-template-columns: repeat(2, 1fr);\n    > *:first-child {\n      display: none;\n    }\n    > *:nth-child(3) {\n      display: none;\n    }\n  }\n`\n\nconst LinkWrapper = styled(Link)`\n  text-decoration: none;\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`\n\nconst ResponsiveLogo = styled(CurrencyLogo)`\n  @media screen and (max-width: 670px) {\n    width: 16px;\n    height: 16px;\n  }\n`\n\nconst DataRow = ({ tokenData, index }: { tokenData: TokenData; index: number }) => {\n  const theme = useTheme()\n  return (\n    <LinkWrapper to={'tokens/' + tokenData.address}>\n      <ResponsiveGrid>\n        <Label>{index + 1}</Label>\n        <Label>\n          <RowFixed>\n            <ResponsiveLogo address={tokenData.address} />\n          </RowFixed>\n          <ExtraSmallOnly style={{ marginLeft: '6px' }}>\n            <Label ml=\"8px\">{tokenData.symbol}</Label>\n          </ExtraSmallOnly>\n          <HideExtraSmall style={{ marginLeft: '10px' }}>\n            <RowFixed>\n              <HoverInlineText text={tokenData.name} />\n              <Label ml=\"8px\" color={theme.text3}>\n                ({tokenData.symbol})\n              </Label>\n            </RowFixed>\n          </HideExtraSmall>\n        </Label>\n        <Label end={1} fontWeight={400}>\n          {formatDollarAmount(tokenData.priceUSD)}\n        </Label>\n        <Label end={1} fontWeight={400}>\n          <Percent value={tokenData.priceUSDChange} fontWeight={400} />\n        </Label>\n        <Label end={1} fontWeight={400}>\n          {formatDollarAmount(tokenData.volumeUSD)}\n        </Label>\n        <Label end={1} fontWeight={400}>\n          {formatDollarAmount(tokenData.tvlUSD)}\n        </Label>\n      </ResponsiveGrid>\n    </LinkWrapper>\n  )\n}\n\nconst SORT_FIELD = {\n  name: 'name',\n  volumeUSD: 'volumeUSD',\n  tvlUSD: 'tvlUSD',\n  priceUSD: 'priceUSD',\n  priceUSDChange: 'priceUSDChange',\n  priceUSDChangeWeek: 'priceUSDChangeWeek',\n}\n\nconst MAX_ITEMS = 10\n\nexport default function TokenTable({\n  tokenDatas,\n  maxItems = MAX_ITEMS,\n}: {\n  tokenDatas: TokenData[] | undefined\n  maxItems?: number\n}) {\n  // theming\n  const theme = useTheme()\n\n  // for sorting\n  const [sortField, setSortField] = useState(SORT_FIELD.tvlUSD)\n  const [sortDirection, setSortDirection] = useState<boolean>(true)\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  useEffect(() => {\n    let extraPages = 1\n    if (tokenDatas) {\n      if (tokenDatas.length % maxItems === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(tokenDatas.length / maxItems) + extraPages)\n    }\n  }, [maxItems, tokenDatas])\n\n  const sortedTokens = useMemo(() => {\n    return tokenDatas\n      ? tokenDatas\n          .filter((x) => !!x && !TOKEN_HIDE.includes(x.address))\n          .sort((a, b) => {\n            if (a && b) {\n              return a[sortField as keyof TokenData] > b[sortField as keyof TokenData]\n                ? (sortDirection ? -1 : 1) * 1\n                : (sortDirection ? -1 : 1) * -1\n            } else {\n              return -1\n            }\n          })\n          .slice(maxItems * (page - 1), page * maxItems)\n      : []\n  }, [tokenDatas, maxItems, page, sortDirection, sortField])\n\n  const handleSort = useCallback(\n    (newField: string) => {\n      setSortField(newField)\n      setSortDirection(sortField !== newField ? true : !sortDirection)\n    },\n    [sortDirection, sortField]\n  )\n\n  const arrow = useCallback(\n    (field: string) => {\n      return sortField === field ? (!sortDirection ? '↑' : '↓') : ''\n    },\n    [sortDirection, sortField]\n  )\n\n  if (!tokenDatas) {\n    return <Loader />\n  }\n\n  return (\n    <Wrapper>\n      {sortedTokens.length > 0 ? (\n        <AutoColumn gap=\"16px\">\n          <ResponsiveGrid>\n            <Label color={theme.text2}>#</Label>\n            <ClickableText color={theme.text2} onClick={() => handleSort(SORT_FIELD.name)}>\n              Name {arrow(SORT_FIELD.name)}\n            </ClickableText>\n            <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.priceUSD)}>\n              Price {arrow(SORT_FIELD.priceUSD)}\n            </ClickableText>\n            <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.priceUSDChange)}>\n              Price Change {arrow(SORT_FIELD.priceUSDChange)}\n            </ClickableText>\n            {/* <ClickableText end={1} onClick={() => handleSort(SORT_FIELD.priceUSDChangeWeek)}>\n            7d {arrow(SORT_FIELD.priceUSDChangeWeek)}\n          </ClickableText> */}\n            <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.volumeUSD)}>\n              Volume 24H {arrow(SORT_FIELD.volumeUSD)}\n            </ClickableText>\n            <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.tvlUSD)}>\n              TVL {arrow(SORT_FIELD.tvlUSD)}\n            </ClickableText>\n          </ResponsiveGrid>\n\n          <Break />\n          {sortedTokens.map((data, i) => {\n            if (data) {\n              return (\n                <React.Fragment key={i}>\n                  <DataRow index={(page - 1) * MAX_ITEMS + i} tokenData={data} />\n                  <Break />\n                </React.Fragment>\n              )\n            }\n            return null\n          })}\n          <PageButtons>\n            <div\n              onClick={() => {\n                setPage(page === 1 ? page : page - 1)\n              }}\n            >\n              <Arrow faded={page === 1 ? true : false}>←</Arrow>\n            </div>\n            <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n            <div\n              onClick={() => {\n                setPage(page === maxPage ? page : page + 1)\n              }}\n            >\n              <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n            </div>\n          </PageButtons>\n        </AutoColumn>\n      ) : (\n        <LoadingRows>\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n        </LoadingRows>\n      )}\n    </Wrapper>\n  )\n}\n","import React, { useCallback, useState, useMemo, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { TYPE } from 'theme'\nimport { DarkGreyCard, GreyBadge } from 'components/Card'\nimport Loader, { LoadingRows } from 'components/Loader'\nimport { AutoColumn } from 'components/Column'\nimport { RowFixed } from 'components/Row'\nimport { formatDollarAmount } from 'utils/numbers'\nimport { PoolData } from 'state/pools/reducer'\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\nimport { feeTierPercent } from 'utils'\nimport { Label, ClickableText } from 'components/Text'\nimport { PageButtons, Arrow, Break } from 'components/shared'\nimport { POOL_HIDE } from '../../constants/index'\nimport useTheme from 'hooks/useTheme'\n\nconst Wrapper = styled(DarkGreyCard)`\n  width: 100%;\n`\n\nconst ResponsiveGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  align-items: center;\n\n  grid-template-columns: 20px 3.5fr repeat(3, 1fr);\n\n  @media screen and (max-width: 900px) {\n    grid-template-columns: 20px 1.5fr repeat(2, 1fr);\n    & :nth-child(3) {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 20px 1.5fr repeat(1, 1fr);\n    & :nth-child(5) {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 480px) {\n    grid-template-columns: 2.5fr repeat(1, 1fr);\n    > *:nth-child(1) {\n      display: none;\n    }\n  }\n`\n\nconst LinkWrapper = styled(Link)`\n  text-decoration: none;\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`\n\nconst SORT_FIELD = {\n  feeTier: 'feeTier',\n  volumeUSD: 'volumeUSD',\n  tvlUSD: 'tvlUSD',\n  volumeUSDWeek: 'volumeUSDWeek',\n}\n\nconst DataRow = ({ poolData, index }: { poolData: PoolData; index: number }) => {\n  return (\n    <LinkWrapper to={'/pools/' + poolData.address}>\n      <ResponsiveGrid>\n        <Label fontWeight={400}>{index + 1}</Label>\n        <Label fontWeight={400}>\n          <RowFixed>\n            <DoubleCurrencyLogo address0={poolData.token0.address} address1={poolData.token1.address} />\n            <TYPE.label ml=\"8px\">\n              {poolData.token0.symbol}/{poolData.token1.symbol}\n            </TYPE.label>\n            <GreyBadge ml=\"10px\" fontSize=\"14px\">\n              {feeTierPercent(poolData.feeTier)}\n            </GreyBadge>\n          </RowFixed>\n        </Label>\n        <Label end={1} fontWeight={400}>\n          {formatDollarAmount(poolData.tvlUSD)}\n        </Label>\n        <Label end={1} fontWeight={400}>\n          {formatDollarAmount(poolData.volumeUSD)}\n        </Label>\n        <Label end={1} fontWeight={400}>\n          {formatDollarAmount(poolData.volumeUSDWeek)}\n        </Label>\n      </ResponsiveGrid>\n    </LinkWrapper>\n  )\n}\n\nconst MAX_ITEMS = 10\n\nexport default function PoolTable({ poolDatas, maxItems = MAX_ITEMS }: { poolDatas: PoolData[]; maxItems?: number }) {\n  // theming\n  const theme = useTheme()\n\n  // for sorting\n  const [sortField, setSortField] = useState(SORT_FIELD.tvlUSD)\n  const [sortDirection, setSortDirection] = useState<boolean>(true)\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  useEffect(() => {\n    let extraPages = 1\n    if (poolDatas.length % maxItems === 0) {\n      extraPages = 0\n    }\n    setMaxPage(Math.floor(poolDatas.length / maxItems) + extraPages)\n  }, [maxItems, poolDatas])\n\n  const sortedPools = useMemo(() => {\n    return poolDatas\n      ? poolDatas\n          .filter((x) => !!x && !POOL_HIDE.includes(x.address))\n          .sort((a, b) => {\n            if (a && b) {\n              return a[sortField as keyof PoolData] > b[sortField as keyof PoolData]\n                ? (sortDirection ? -1 : 1) * 1\n                : (sortDirection ? -1 : 1) * -1\n            } else {\n              return -1\n            }\n          })\n          .slice(maxItems * (page - 1), page * maxItems)\n      : []\n  }, [maxItems, page, poolDatas, sortDirection, sortField])\n\n  const handleSort = useCallback(\n    (newField: string) => {\n      setSortField(newField)\n      setSortDirection(sortField !== newField ? true : !sortDirection)\n    },\n    [sortDirection, sortField]\n  )\n\n  const arrow = useCallback(\n    (field: string) => {\n      return sortField === field ? (!sortDirection ? '↑' : '↓') : ''\n    },\n    [sortDirection, sortField]\n  )\n\n  if (!poolDatas) {\n    return <Loader />\n  }\n\n  return (\n    <Wrapper>\n      {sortedPools.length > 0 ? (\n        <AutoColumn gap=\"16px\">\n          <ResponsiveGrid>\n            <Label color={theme.text2}>#</Label>\n            <ClickableText color={theme.text2} onClick={() => handleSort(SORT_FIELD.feeTier)}>\n              Pool {arrow(SORT_FIELD.feeTier)}\n            </ClickableText>\n            <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.tvlUSD)}>\n              TVL {arrow(SORT_FIELD.tvlUSD)}\n            </ClickableText>\n            <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.volumeUSD)}>\n              Volume 24H {arrow(SORT_FIELD.volumeUSD)}\n            </ClickableText>\n            <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.volumeUSDWeek)}>\n              Volume 7D {arrow(SORT_FIELD.volumeUSDWeek)}\n            </ClickableText>\n          </ResponsiveGrid>\n          <Break />\n          {sortedPools.map((poolData, i) => {\n            if (poolData) {\n              return (\n                <React.Fragment key={i}>\n                  <DataRow index={(page - 1) * MAX_ITEMS + i} poolData={poolData} />\n                  <Break />\n                </React.Fragment>\n              )\n            }\n            return null\n          })}\n          <PageButtons>\n            <div\n              onClick={() => {\n                setPage(page === 1 ? page : page - 1)\n              }}\n            >\n              <Arrow faded={page === 1 ? true : false}>←</Arrow>\n            </div>\n            <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n            <div\n              onClick={() => {\n                setPage(page === maxPage ? page : page + 1)\n              }}\n            >\n              <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n            </div>\n          </PageButtons>\n        </AutoColumn>\n      ) : (\n        <LoadingRows>\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n        </LoadingRows>\n      )}\n    </Wrapper>\n  )\n}\n","import styled from 'styled-components'\n\nexport const PageWrapper = styled.div`\n  width: 90%;\n`\n\nexport const ThemedBackground = styled.div<{ backgroundColor: string }>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  pointer-events: none;\n  max-width: 100vw !important;\n  height: 200vh;\n  mix-blend-mode: color;\n  background: ${({ backgroundColor }) =>\n    `radial-gradient(50% 50% at 50% 50%, ${backgroundColor} 0%, rgba(255, 255, 255, 0) 100%)`};\n  transform: translateY(-176vh);\n`\n\nexport const ThemedBackgroundGlobal = styled.div<{ backgroundColor: string }>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  pointer-events: none;\n  max-width: 100vw !important;\n  height: 200vh;\n  mix-blend-mode: color;\n  background: ${({ backgroundColor }) =>\n    `radial-gradient(50% 50% at 50% 50%, ${backgroundColor} 0%, rgba(255, 255, 255, 0) 100%)`};\n  transform: translateY(-150vh);\n`\n","import dayjs from 'dayjs'\n\nexport function unixToDate(unix: number, format = 'YYYY-MM-DD'): string {\n  return dayjs.unix(unix).format(format)\n}\n\nexport const formatTime = (unix: string) => {\n  const now = dayjs()\n  const timestamp = dayjs.unix(parseInt(unix))\n\n  const inSeconds = now.diff(timestamp, 'second')\n  const inMinutes = now.diff(timestamp, 'minute')\n  const inHours = now.diff(timestamp, 'hour')\n  const inDays = now.diff(timestamp, 'day')\n\n  if (inHours >= 24) {\n    return `${inDays} ${inDays === 1 ? 'day' : 'days'} ago`\n  } else if (inMinutes >= 60) {\n    return `${inHours} ${inHours === 1 ? 'hour' : 'hours'} ago`\n  } else if (inSeconds >= 60) {\n    return `${inMinutes} ${inMinutes === 1 ? 'minute' : 'minutes'} ago`\n  } else {\n    return `${inSeconds} ${inSeconds === 1 ? 'second' : 'seconds'} ago`\n  }\n}\n","import React, { Dispatch, SetStateAction, ReactNode } from 'react'\nimport { BarChart, ResponsiveContainer, XAxis, Tooltip, Bar } from 'recharts'\nimport styled from 'styled-components'\nimport Card from 'components/Card'\nimport { RowBetween } from 'components/Row'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport useTheme from 'hooks/useTheme'\ndayjs.extend(utc)\n\nconst DEFAULT_HEIGHT = 300\n\nconst Wrapper = styled(Card)`\n  width: 100%;\n  height: ${DEFAULT_HEIGHT}px;\n  padding: 1rem;\n  padding-right: 2rem;\n  display: flex;\n  background-color: ${({ theme }) => theme.bg0}\n  flex-direction: column;\n  > * {\n    font-size: 1rem;\n  }\n`\n\nexport type LineChartProps = {\n  data: any[]\n  color?: string | undefined\n  height?: number | undefined\n  minHeight?: number\n  setValue?: Dispatch<SetStateAction<number | undefined>> // used for value on hover\n  setLabel?: Dispatch<SetStateAction<string | undefined>> // used for label of valye\n  value?: number\n  label?: string\n  topLeft?: ReactNode | undefined\n  topRight?: ReactNode | undefined\n  bottomLeft?: ReactNode | undefined\n  bottomRight?: ReactNode | undefined\n} & React.HTMLAttributes<HTMLDivElement>\n\nconst CustomBar = ({\n  x,\n  y,\n  width,\n  height,\n  fill,\n}: {\n  x: number\n  y: number\n  width: number\n  height: number\n  fill: string\n}) => {\n  return (\n    <g>\n      <rect x={x} y={y} fill={fill} width={width} height={height} rx=\"2\" />\n    </g>\n  )\n}\n\nconst Chart = ({\n  data,\n  color = '#56B2A4',\n  setValue,\n  setLabel,\n  value,\n  label,\n  topLeft,\n  topRight,\n  bottomLeft,\n  bottomRight,\n  minHeight = DEFAULT_HEIGHT,\n  ...rest\n}: LineChartProps) => {\n  const theme = useTheme()\n  const parsedValue = value\n\n  return (\n    <Wrapper minHeight={minHeight} {...rest}>\n      <RowBetween>\n        {topLeft ?? null}\n        {topRight ?? null}\n      </RowBetween>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          width={500}\n          height={300}\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n          onMouseLeave={() => {\n            setLabel && setLabel(undefined)\n            setValue && setValue(undefined)\n          }}\n        >\n          <XAxis\n            dataKey=\"time\"\n            axisLine={false}\n            tickLine={false}\n            tickFormatter={(time) => dayjs(time).format('DD')}\n            minTickGap={10}\n          />\n          <Tooltip\n            cursor={{ fill: theme.bg2 }}\n            contentStyle={{ display: 'none' }}\n            formatter={(value: number, name: string, props: { payload: { time: string; value: number } }) => {\n              if (setValue && parsedValue !== props.payload.value) {\n                setValue(props.payload.value)\n              }\n              const formattedTime = dayjs(props.payload.time).format('MMM D, YYYY')\n              if (setLabel && label !== formattedTime) setLabel(formattedTime)\n            }}\n          />\n          <Bar\n            dataKey=\"value\"\n            fill={color}\n            shape={(props) => {\n              return <CustomBar height={props.height} width={props.width} x={props.x} y={props.y} fill={color} />\n            }}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n      <RowBetween>\n        {bottomLeft ?? null}\n        {bottomRight ?? null}\n      </RowBetween>\n    </Wrapper>\n  )\n}\n\nexport default Chart\n","import React, { useCallback, useState, useMemo, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { DarkGreyCard } from 'components/Card'\nimport Loader from 'components/Loader'\nimport { AutoColumn } from 'components/Column'\nimport { formatDollarAmount, formatAmount } from 'utils/numbers'\nimport { shortenAddress, getEtherscanLink } from 'utils'\nimport { Label, ClickableText } from 'components/Text'\nimport { Transaction, TransactionType } from 'types'\nimport { formatTime } from 'utils/date'\nimport { RowFixed } from 'components/Row'\nimport { ExternalLink, TYPE } from 'theme'\nimport { PageButtons, Arrow, Break } from 'components/shared'\nimport useTheme from 'hooks/useTheme'\nimport HoverInlineText from 'components/HoverInlineText'\n\nconst Wrapper = styled(DarkGreyCard)`\n  width: 100%;\n`\n\nconst ResponsiveGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  align-items: center;\n\n  grid-template-columns: 1.5fr repeat(5, 1fr);\n\n  @media screen and (max-width: 940px) {\n    grid-template-columns: 1.5fr repeat(4, 1fr);\n    & > *:nth-child(5) {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 1.5fr repeat(2, 1fr);\n    & > *:nth-child(5) {\n      display: none;\n    }\n    & > *:nth-child(3) {\n      display: none;\n    }\n    & > *:nth-child(4) {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 1.5fr repeat(1, 1fr);\n    & > *:nth-child(5) {\n      display: none;\n    }\n    & > *:nth-child(3) {\n      display: none;\n    }\n    & > *:nth-child(4) {\n      display: none;\n    }\n    & > *:nth-child(2) {\n      display: none;\n    }\n  }\n`\n\nconst SortText = styled.button<{ active: boolean }>`\n  cursor: pointer;\n  font-weight: ${({ active }) => (active ? 500 : 400)};\n  margin-right: 0.75rem !important;\n  border: none;\n  background-color: transparent;\n  font-size: 1rem;\n  padding: 0px;\n  color: ${({ active, theme }) => (active ? theme.text1 : theme.text3)};\n  outline: none;\n  @media screen and (max-width: 600px) {\n    font-size: 14px;\n  }\n`\n\nconst SORT_FIELD = {\n  amountUSD: 'amountUSD',\n  timestamp: 'timestamp',\n  sender: 'sender',\n  amountToken0: 'amountToken0',\n  amountToken1: 'amountToken1',\n}\n\nconst DataRow = ({ transaction, color }: { transaction: Transaction; color?: string }) => {\n  const abs0 = Math.abs(transaction.amountToken0)\n  const abs1 = Math.abs(transaction.amountToken1)\n  const outputTokenSymbol = transaction.amountToken0 < 0 ? transaction.token0Symbol : transaction.token1Symbol\n  const inputTokenSymbol = transaction.amountToken1 < 0 ? transaction.token0Symbol : transaction.token1Symbol\n\n  const theme = useTheme()\n\n  return (\n    <ResponsiveGrid>\n      <ExternalLink href={getEtherscanLink(1, transaction.hash, 'transaction')}>\n        <Label color={color ?? theme.blue1} fontWeight={400}>\n          {transaction.type === TransactionType.MINT\n            ? `Add ${transaction.token0Symbol} and ${transaction.token1Symbol}`\n            : transaction.type === TransactionType.SWAP\n            ? `Swap ${inputTokenSymbol} for ${outputTokenSymbol}`\n            : `Remove ${transaction.token0Symbol} and ${transaction.token1Symbol}`}\n        </Label>\n      </ExternalLink>\n      <Label end={1} fontWeight={400}>\n        {formatDollarAmount(transaction.amountUSD)}\n      </Label>\n      <Label end={1} fontWeight={400}>\n        <HoverInlineText text={`${formatAmount(abs0)}  ${transaction.token0Symbol}`} maxCharacters={16} />\n      </Label>\n      <Label end={1} fontWeight={400}>\n        <HoverInlineText text={`${formatAmount(abs1)}  ${transaction.token1Symbol}`} maxCharacters={16} />\n      </Label>\n      <Label end={1} fontWeight={400}>\n        <ExternalLink href={getEtherscanLink(1, transaction.sender, 'address')} style={{ color: color ?? theme.blue1 }}>\n          {shortenAddress(transaction.sender)}\n        </ExternalLink>\n      </Label>\n      <Label end={1} fontWeight={400}>\n        {formatTime(transaction.timestamp)}\n      </Label>\n    </ResponsiveGrid>\n  )\n}\n\nexport default function TransactionTable({\n  transactions,\n  maxItems = 10,\n  color,\n}: {\n  transactions: Transaction[]\n  maxItems?: number\n  color?: string\n}) {\n  // theming\n  const theme = useTheme()\n\n  // for sorting\n  const [sortField, setSortField] = useState(SORT_FIELD.timestamp)\n  const [sortDirection, setSortDirection] = useState<boolean>(true)\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n\n  useEffect(() => {\n    let extraPages = 1\n    if (transactions.length % maxItems === 0) {\n      extraPages = 0\n    }\n    setMaxPage(Math.floor(transactions.length / maxItems) + extraPages)\n  }, [maxItems, transactions])\n\n  // filter on txn type\n  const [txFilter, setTxFilter] = useState<TransactionType | undefined>(undefined)\n\n  const sortedTransactions = useMemo(() => {\n    return transactions\n      ? transactions\n          .slice()\n          .sort((a, b) => {\n            if (a && b) {\n              return a[sortField as keyof Transaction] > b[sortField as keyof Transaction]\n                ? (sortDirection ? -1 : 1) * 1\n                : (sortDirection ? -1 : 1) * -1\n            } else {\n              return -1\n            }\n          })\n          .filter((x) => {\n            return txFilter === undefined || x.type === txFilter\n          })\n          .slice(maxItems * (page - 1), page * maxItems)\n      : []\n  }, [transactions, maxItems, page, sortField, sortDirection, txFilter])\n\n  const handleSort = useCallback(\n    (newField: string) => {\n      setSortField(newField)\n      setSortDirection(sortField !== newField ? true : !sortDirection)\n    },\n    [sortDirection, sortField]\n  )\n\n  const arrow = useCallback(\n    (field: string) => {\n      return sortField === field ? (!sortDirection ? '↑' : '↓') : ''\n    },\n    [sortDirection, sortField]\n  )\n\n  if (!transactions) {\n    return <Loader />\n  }\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"16px\">\n        <ResponsiveGrid>\n          <RowFixed>\n            <SortText\n              onClick={() => {\n                setTxFilter(undefined)\n              }}\n              active={txFilter === undefined}\n            >\n              All\n            </SortText>\n            <SortText\n              onClick={() => {\n                setTxFilter(TransactionType.SWAP)\n              }}\n              active={txFilter === TransactionType.SWAP}\n            >\n              Swaps\n            </SortText>\n            <SortText\n              onClick={() => {\n                setTxFilter(TransactionType.MINT)\n              }}\n              active={txFilter === TransactionType.MINT}\n            >\n              Adds\n            </SortText>\n            <SortText\n              onClick={() => {\n                setTxFilter(TransactionType.BURN)\n              }}\n              active={txFilter === TransactionType.BURN}\n            >\n              Removes\n            </SortText>\n          </RowFixed>\n          <ClickableText color={theme.text2} onClick={() => handleSort(SORT_FIELD.amountUSD)} end={1}>\n            Total Value {arrow(SORT_FIELD.amountUSD)}\n          </ClickableText>\n          <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.amountToken0)}>\n            Token Amount {arrow(SORT_FIELD.amountToken0)}\n          </ClickableText>\n          <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.amountToken1)}>\n            Token Amount {arrow(SORT_FIELD.amountToken1)}\n          </ClickableText>\n          <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.sender)}>\n            Account {arrow(SORT_FIELD.sender)}\n          </ClickableText>\n          <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.timestamp)}>\n            Time {arrow(SORT_FIELD.timestamp)}\n          </ClickableText>\n        </ResponsiveGrid>\n        <Break />\n\n        {sortedTransactions.map((t, i) => {\n          if (t) {\n            return (\n              <React.Fragment key={i}>\n                <DataRow transaction={t} color={color} />\n                <Break />\n              </React.Fragment>\n            )\n          }\n          return null\n        })}\n        {sortedTransactions.length === 0 ? <TYPE.main>No Transactions</TYPE.main> : undefined}\n        <PageButtons>\n          <div\n            onClick={() => {\n              setPage(page === 1 ? page : page - 1)\n            }}\n          >\n            <Arrow faded={page === 1 ? true : false}>←</Arrow>\n          </div>\n          <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n          <div\n            onClick={() => {\n              setPage(page === maxPage ? page : page + 1)\n            }}\n          >\n            <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n          </div>\n        </PageButtons>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n","import React, { useState, useEffect, useMemo } from 'react'\nimport styled from 'styled-components'\nimport { AutoColumn } from 'components/Column'\nimport { TYPE } from 'theme'\nimport { ResponsiveRow, RowBetween, RowFixed } from 'components/Row'\nimport LineChart from 'components/LineChart/alt'\nimport useTheme from 'hooks/useTheme'\nimport { useProtocolData, useProtocolChartData, useProtocolTransactions } from 'state/protocol/hooks'\nimport { DarkGreyCard } from 'components/Card'\nimport { formatDollarAmount } from 'utils/numbers'\nimport Percent from 'components/Percent'\nimport { HideMedium, HideSmall, StyledInternalLink } from '../../theme/components'\nimport TokenTable from 'components/tokens/TokenTable'\nimport PoolTable from 'components/pools/PoolTable'\nimport { PageWrapper, ThemedBackgroundGlobal } from 'pages/styled'\nimport { unixToDate } from 'utils/date'\nimport BarChart from 'components/BarChart/alt'\nimport { useAllPoolData } from 'state/pools/hooks'\nimport { notEmpty } from 'utils'\nimport TransactionsTable from '../../components/TransactionsTable'\nimport { useAllTokenData } from 'state/tokens/hooks'\nimport { MonoSpace } from 'components/shared'\nimport dayjs from 'dayjs'\n\nconst ChartWrapper = styled.div`\n  width: 49%;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    width: 100%;\n  `};\n`\n\nexport default function Home() {\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  const theme = useTheme()\n\n  const [protocolData] = useProtocolData()\n  const [chartData] = useProtocolChartData()\n  const [transactions] = useProtocolTransactions()\n\n  const [volumeHover, setVolumeHover] = useState<number | undefined>()\n  const [liquidityHover, setLiquidityHover] = useState<number | undefined>()\n  const [leftLabel, setLeftLabel] = useState<string | undefined>()\n  const [rightLabel, setRightLabel] = useState<string | undefined>()\n\n  // get all the pool datas that exist\n  const allPoolData = useAllPoolData()\n  const poolDatas = useMemo(() => {\n    return Object.values(allPoolData)\n      .map((p) => p.data)\n      .filter(notEmpty)\n  }, [allPoolData])\n\n  // if hover value undefined, reset to current day value\n  useEffect(() => {\n    if (!volumeHover && protocolData) {\n      setVolumeHover(protocolData.volumeUSD)\n    }\n  }, [protocolData, volumeHover])\n  useEffect(() => {\n    if (!liquidityHover && protocolData) {\n      setLiquidityHover(protocolData.tvlUSD)\n    }\n  }, [liquidityHover, protocolData])\n\n  const formattedTvlData = useMemo(() => {\n    if (chartData) {\n      return chartData.map((day) => {\n        return {\n          time: unixToDate(day.date),\n          value: day.tvlUSD,\n        }\n      })\n    } else {\n      return []\n    }\n  }, [chartData])\n\n  const formattedVolumeData = useMemo(() => {\n    if (chartData) {\n      return chartData.map((day) => {\n        return {\n          time: unixToDate(day.date),\n          value: day.volumeUSD,\n        }\n      })\n    } else {\n      return []\n    }\n  }, [chartData])\n\n  const allTokens = useAllTokenData()\n\n  const formattedTokens = useMemo(() => {\n    return Object.values(allTokens)\n      .map((t) => t.data)\n      .filter(notEmpty)\n  }, [allTokens])\n\n  return (\n    <PageWrapper>\n      <ThemedBackgroundGlobal backgroundColor={'#fc077d'} />\n      <AutoColumn gap=\"16px\">\n        <TYPE.main>Hayden V3 Overview</TYPE.main>\n        <ResponsiveRow>\n          <ChartWrapper>\n            <LineChart\n              data={formattedTvlData}\n              height={220}\n              minHeight={332}\n              color={theme.pink1}\n              value={liquidityHover}\n              label={leftLabel}\n              setValue={setLiquidityHover}\n              setLabel={setLeftLabel}\n              topLeft={\n                <AutoColumn gap=\"4px\">\n                  <TYPE.mediumHeader fontSize=\"16px\">TVL</TYPE.mediumHeader>\n                  <TYPE.largeHeader fontSize=\"32px\">\n                    <MonoSpace>{formatDollarAmount(liquidityHover, 2, true)} </MonoSpace>\n                  </TYPE.largeHeader>\n                  <TYPE.main fontSize=\"12px\" height=\"14px\">\n                    {leftLabel ? (\n                      <MonoSpace>{leftLabel}</MonoSpace>\n                    ) : (\n                      <MonoSpace>{dayjs.utc().format('MMM D, YYYY')}</MonoSpace>\n                    )}\n                  </TYPE.main>\n                </AutoColumn>\n              }\n            />\n          </ChartWrapper>\n          <ChartWrapper>\n            <BarChart\n              height={220}\n              minHeight={332}\n              data={formattedVolumeData}\n              color={theme.blue1}\n              setValue={setVolumeHover}\n              setLabel={setRightLabel}\n              value={volumeHover}\n              label={rightLabel}\n              topLeft={\n                <AutoColumn gap=\"4px\">\n                  <TYPE.mediumHeader fontSize=\"16px\">Volume 24H</TYPE.mediumHeader>\n                  <TYPE.largeHeader fontSize=\"32px\">\n                    <MonoSpace> {formatDollarAmount(volumeHover, 2)}</MonoSpace>\n                  </TYPE.largeHeader>\n                  <TYPE.main fontSize=\"12px\" height=\"14px\">\n                    {rightLabel ? (\n                      <MonoSpace>{rightLabel}</MonoSpace>\n                    ) : (\n                      <MonoSpace>{dayjs.utc().format('MMM D, YYYY')}</MonoSpace>\n                    )}\n                  </TYPE.main>\n                </AutoColumn>\n              }\n            />\n          </ChartWrapper>\n        </ResponsiveRow>\n        <HideSmall>\n          <DarkGreyCard>\n            <RowBetween>\n              <RowFixed>\n                <RowFixed mr=\"20px\">\n                  <TYPE.main mr=\"4px\">Volume 24H: </TYPE.main>\n                  <TYPE.label mr=\"4px\">{formatDollarAmount(protocolData?.volumeUSD)}</TYPE.label>\n                  <Percent value={protocolData?.volumeUSDChange} wrap={true} />\n                </RowFixed>\n                <RowFixed mr=\"20px\">\n                  <TYPE.main mr=\"4px\">Fees 24H: </TYPE.main>\n                  <TYPE.label mr=\"4px\">{formatDollarAmount(protocolData?.feesUSD)}</TYPE.label>\n                  <Percent value={protocolData?.feeChange} wrap={true} />\n                </RowFixed>\n                <HideMedium>\n                  <RowFixed mr=\"20px\">\n                    <TYPE.main mr=\"4px\">TVL: </TYPE.main>\n                    <TYPE.label mr=\"4px\">{formatDollarAmount(protocolData?.tvlUSD)}</TYPE.label>\n                    <TYPE.main></TYPE.main>\n                    <Percent value={protocolData?.tvlUSDChange} wrap={true} />\n                  </RowFixed>\n                </HideMedium>\n              </RowFixed>\n            </RowBetween>\n          </DarkGreyCard>\n        </HideSmall>\n        <RowBetween>\n          <TYPE.main>Top Tokens</TYPE.main>\n          <StyledInternalLink to=\"/tokens\">Explore</StyledInternalLink>\n        </RowBetween>\n        <TokenTable tokenDatas={formattedTokens} />\n        <RowBetween>\n          <TYPE.main>Top Pools</TYPE.main>\n          <StyledInternalLink to=\"/pools\">Explore</StyledInternalLink>\n        </RowBetween>\n        <PoolTable poolDatas={poolDatas} />\n        <RowBetween>\n          <TYPE.main>Transactions</TYPE.main>\n        </RowBetween>\n        {transactions ? <TransactionsTable transactions={transactions} /> : null}\n      </AutoColumn>\n    </PageWrapper>\n  )\n}\n","import React from 'react'\n\nexport default function Protocol() {\n  return <div></div>\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { PageWrapper } from 'pages/styled'\nimport { AutoColumn } from 'components/Column'\nimport { TYPE } from 'theme'\nimport PoolTable from 'components/pools/PoolTable'\nimport { useAllPoolData, usePoolDatas } from 'state/pools/hooks'\nimport { notEmpty } from 'utils'\nimport { useSavedPools } from 'state/user/hooks'\nimport { DarkGreyCard } from 'components/Card'\n// import TopPoolMovers from 'components/pools/TopPoolMovers'\n\nexport default function PoolPage() {\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  // get all the pool datas that exist\n  const allPoolData = useAllPoolData()\n  const poolDatas = useMemo(() => {\n    return Object.values(allPoolData)\n      .map((p) => p.data)\n      .filter(notEmpty)\n  }, [allPoolData])\n\n  const [savedPools] = useSavedPools()\n  const watchlistPools = usePoolDatas(savedPools)\n\n  return (\n    <PageWrapper>\n      <AutoColumn gap=\"lg\">\n        <TYPE.main>Your Watchlist</TYPE.main>\n        {watchlistPools.length > 0 ? (\n          <PoolTable poolDatas={watchlistPools} />\n        ) : (\n          <DarkGreyCard>\n            <TYPE.main>Saved pools will appear here</TYPE.main>\n          </DarkGreyCard>\n        )}\n        {/* <HideSmall>\n          <DarkGreyCard style={{ paddingTop: '12px' }}>\n            <AutoColumn gap=\"md\">\n              <TYPE.mediumHeader fontSize=\"16px\">Trending by 24H Volume</TYPE.mediumHeader>\n              <TopPoolMovers />\n            </AutoColumn>\n          </DarkGreyCard>\n        </HideSmall> */}\n        <TYPE.main>All Pools</TYPE.main>\n        <PoolTable poolDatas={poolDatas} />\n      </AutoColumn>\n    </PageWrapper>\n  )\n}\n","import React, { useMemo, useRef, useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useAllTokenData } from 'state/tokens/hooks'\nimport { GreyCard } from 'components/Card'\nimport { TokenData } from 'state/tokens/reducer'\nimport { AutoColumn } from 'components/Column'\nimport { RowFixed, RowFlat } from 'components/Row'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport { TYPE, StyledInternalLink } from 'theme'\nimport { formatDollarAmount } from 'utils/numbers'\nimport Percent from 'components/Percent'\nimport HoverInlineText from 'components/HoverInlineText'\n\nconst CardWrapper = styled(StyledInternalLink)`\n  min-width: 190px;\n  margin-right: 16px;\n\n  :hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst FixedContainer = styled(AutoColumn)``\n\nexport const ScrollableRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  overflow-x: auto;\n  white-space: nowrap;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst DataCard = ({ tokenData }: { tokenData: TokenData }) => {\n  return (\n    <CardWrapper to={'tokens/' + tokenData.address}>\n      <GreyCard padding=\"16px\">\n        <RowFixed>\n          <CurrencyLogo address={tokenData.address} size=\"32px\" />\n          <AutoColumn gap=\"3px\" style={{ marginLeft: '12px' }}>\n            <TYPE.label fontSize=\"14px\">\n              <HoverInlineText text={tokenData.symbol} />\n            </TYPE.label>\n            <RowFlat>\n              <TYPE.label fontSize=\"14px\" mr=\"6px\" lineHeight=\"16px\">\n                {formatDollarAmount(tokenData.priceUSD)}\n              </TYPE.label>\n              <Percent fontSize=\"14px\" value={tokenData.priceUSDChange} />\n            </RowFlat>\n          </AutoColumn>\n        </RowFixed>\n      </GreyCard>\n    </CardWrapper>\n  )\n}\n\nexport default function TopTokenMovers() {\n  const allTokens = useAllTokenData()\n\n  const topPriceIncrease = useMemo(() => {\n    return Object.values(allTokens)\n      .sort(({ data: a }, { data: b }) => {\n        return a && b ? (Math.abs(a?.priceUSDChange) > Math.abs(b?.priceUSDChange) ? -1 : 1) : -1\n      })\n      .slice(0, Math.min(20, Object.values(allTokens).length))\n  }, [allTokens])\n\n  const increaseRef = useRef<HTMLDivElement>(null)\n  const [increaseSet, setIncreaseSet] = useState(false)\n  // const [pauseAnimation, setPauseAnimation] = useState(false)\n  // const [resetInterval, setClearInterval] = useState<() => void | undefined>()\n\n  useEffect(() => {\n    if (!increaseSet && increaseRef && increaseRef.current) {\n      setInterval(() => {\n        if (increaseRef.current && increaseRef.current.scrollLeft !== increaseRef.current.scrollWidth) {\n          increaseRef.current.scrollTo(increaseRef.current.scrollLeft + 1, 0)\n        }\n      }, 30)\n      setIncreaseSet(true)\n    }\n  }, [increaseRef, increaseSet])\n\n  // function handleHover() {\n  //   if (resetInterval) {\n  //     resetInterval()\n  //   }\n  //   setPauseAnimation(true)\n  // }\n\n  return (\n    <FixedContainer gap=\"md\">\n      <ScrollableRow ref={increaseRef}>\n        {topPriceIncrease.map((entry) =>\n          entry.data ? <DataCard key={'top-card-token-' + entry.data?.address} tokenData={entry.data} /> : null\n        )}\n      </ScrollableRow>\n    </FixedContainer>\n  )\n}\n","import React, { useMemo, useEffect } from 'react'\nimport { PageWrapper } from 'pages/styled'\nimport { AutoColumn } from 'components/Column'\nimport { TYPE, HideSmall } from 'theme'\nimport TokenTable from 'components/tokens/TokenTable'\nimport { useAllTokenData, useTokenDatas } from 'state/tokens/hooks'\nimport { notEmpty } from 'utils'\nimport { useSavedTokens } from 'state/user/hooks'\nimport { DarkGreyCard } from 'components/Card'\nimport TopTokenMovers from 'components/tokens/TopTokenMovers'\n\nexport default function TokensOverview() {\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  const allTokens = useAllTokenData()\n\n  const formattedTokens = useMemo(() => {\n    return Object.values(allTokens)\n      .map((t) => t.data)\n      .filter(notEmpty)\n  }, [allTokens])\n\n  const [savedTokens] = useSavedTokens()\n  const watchListTokens = useTokenDatas(savedTokens)\n\n  return (\n    <PageWrapper>\n      <AutoColumn gap=\"lg\">\n        <TYPE.main>Your Watchlist</TYPE.main>\n        {savedTokens.length > 0 ? (\n          <TokenTable tokenDatas={watchListTokens} />\n        ) : (\n          <DarkGreyCard>\n            <TYPE.main>Saved tokens will appear here</TYPE.main>\n          </DarkGreyCard>\n        )}\n        <HideSmall>\n          <DarkGreyCard style={{ paddingTop: '12px' }}>\n            <AutoColumn gap=\"md\">\n              <TYPE.mediumHeader fontSize=\"16px\">Top Movers</TYPE.mediumHeader>\n              <TopTokenMovers />\n            </AutoColumn>\n          </DarkGreyCard>\n        </HideSmall>\n        <TYPE.main>All Tokens</TYPE.main>\n        <TokenTable tokenDatas={formattedTokens} />\n      </AutoColumn>\n    </PageWrapper>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { TYPE, ExternalLink } from '../../theme'\n\nimport { useSubgraphStatus } from '../../state/application/hooks'\nimport { getEtherscanLink } from '../../utils'\nimport useTheme from 'hooks/useTheme'\n\nconst StyledPolling = styled.div`\n  display: flex;\n  color: white;\n  margin-right: 1rem;\n  border-radius: 4px;\n  width: 192px;\n  padding: 4px;\n  background-color: ${({ theme }) => theme.bg2};\n  transition: opacity 0.25s ease;\n  color: ${({ theme }) => theme.green1};\n  :hover {\n    opacity: 1;\n  }\n  z-index: 9999;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    display: none;\n  `}\n`\nconst StyledPollingDot = styled.div`\n  width: 8px;\n  height: 8px;\n  min-height: 8px;\n  min-width: 8px;\n  margin-left: 0.4rem;\n  margin-top: 3px;\n  border-radius: 50%;\n  position: relative;\n  background-color: ${({ theme }) => theme.green1};\n`\n\nconst rotate360 = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst Spinner = styled.div`\n  animation: ${rotate360} 1s cubic-bezier(0.83, 0, 0.17, 1) infinite;\n  transform: translateZ(0);\n  border-top: 1px solid transparent;\n  border-right: 1px solid transparent;\n  border-bottom: 1px solid transparent;\n  border-left: 2px solid ${({ theme }) => theme.green1};\n  background: transparent;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  position: relative;\n  left: -3px;\n  top: -3px;\n`\n\nexport default function Polling() {\n  const theme = useTheme()\n\n  const [status] = useSubgraphStatus()\n\n  const [isMounted, setIsMounted] = useState(true)\n\n  const latestBlock = status.syncedBlock\n\n  useEffect(\n    () => {\n      const timer1 = setTimeout(() => setIsMounted(true), 1000)\n\n      // this will clear Timeout when component unmount like in willComponentUnmount\n      return () => {\n        setIsMounted(false)\n        clearTimeout(timer1)\n      }\n    },\n    [status] //useEffect will run only one time\n    //if you pass a value to array, like this [data] than clearTimeout will run every time this value changes (useEffect re-run)\n  )\n\n  return (\n    <ExternalLink href={latestBlock ? getEtherscanLink(43114, latestBlock.toString(), 'block') : ''}>\n      <StyledPolling>\n        <TYPE.small mr=\"4px\" color={theme.text3}>\n          Latest synced block:{' '}\n        </TYPE.small>\n        <TYPE.small style={{ opacity: isMounted ? '0.6' : '0.8' }}>{latestBlock}</TYPE.small>\n        <StyledPollingDot>{!isMounted && <Spinner />}</StyledPollingDot>\n      </StyledPolling>\n    </ExternalLink>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween, RowFixed, AutoRow } from 'components/Row'\nimport { TYPE, ExternalLink } from 'theme'\nimport { useEthPrices } from 'hooks/useEthPrices'\nimport { formatDollarAmount } from 'utils/numbers'\nimport Polling from './Polling'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.black};\n  padding: 10px 20px;\n`\n\nconst Item = styled(TYPE.main)`\n  font-size: 12px;\n`\n\nconst StyledLink = styled(ExternalLink)`\n  font-size: 12px;\n  color: ${({ theme }) => theme.text1};\n`\n\nconst TopBar = () => {\n  const ethPrices = useEthPrices()\n  return (\n    <Wrapper>\n      <RowBetween>\n        <Polling />\n        <AutoRow gap=\"6px\">\n          <RowFixed>\n            <Item>AVAX Price:</Item>\n            <Item fontWeight=\"700\" ml=\"4px\">\n              {formatDollarAmount(ethPrices?.current)}\n            </Item>\n          </RowFixed>\n        </AutoRow>\n        <AutoRow gap=\"6px\" style={{ justifyContent: 'flex-end' }}>\n          <StyledLink href=\"https://v2.info.uniswap.org/#/\">V2 Analytics</StyledLink>\n          <StyledLink href=\"https://docs.uniswap.org/\">Docs</StyledLink>\n          <StyledLink href=\"https://wavax.org/#/swap\">App</StyledLink>\n        </AutoRow>\n      </RowBetween>\n    </Wrapper>\n  )\n}\n\nexport default TopBar\n","import { useState, useLayoutEffect, useMemo } from 'react'\nimport { shade } from 'polished'\nimport Vibrant from 'node-vibrant'\nimport { hex } from 'wcag-contrast'\nimport { Token, ChainId } from '@uniswap/sdk-core'\nimport uriToHttp from 'utils/uriToHttp'\nimport { isAddress } from 'utils'\n\nasync function getColorFromToken(token: Token): Promise<string | null> {\n  if (token.chainId === ChainId.RINKEBY && token.address === '0xc7AD46e0b8a400Bb3C915120d284AafbA8fc4735') {\n    return Promise.resolve('#FAAB14')\n  }\n\n  const path = `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${token.address}/logo.png`\n\n  return Vibrant.from(path)\n    .getPalette()\n    .then((palette) => {\n      if (palette?.Vibrant) {\n        let detectedHex = palette.Vibrant.hex\n        let AAscore = hex(detectedHex, '#FFF')\n        while (AAscore < 3) {\n          detectedHex = shade(0.005, detectedHex)\n          AAscore = hex(detectedHex, '#FFF')\n        }\n        return detectedHex\n      }\n      return null\n    })\n    .catch(() => null)\n}\n\nasync function getColorFromUriPath(uri: string): Promise<string | null> {\n  const formattedPath = uriToHttp(uri)[0]\n\n  return Vibrant.from(formattedPath)\n    .getPalette()\n    .then((palette) => {\n      if (palette?.Vibrant) {\n        return palette.Vibrant.hex\n      }\n      return null\n    })\n    .catch(() => null)\n}\n\nexport function useColor(address?: string) {\n  const [color, setColor] = useState('#ffffff')\n\n  const formattedAddress = isAddress(address)\n\n  const token = useMemo(() => {\n    return formattedAddress ? new Token(1, formattedAddress, 0) : undefined\n  }, [formattedAddress])\n\n  useLayoutEffect(() => {\n    let stale = false\n\n    if (token) {\n      getColorFromToken(token).then((tokenColor) => {\n        if (!stale && tokenColor !== null) {\n          setColor(tokenColor)\n        }\n      })\n    }\n\n    return () => {\n      stale = true\n      setColor('#ffffff')\n    }\n  }, [token])\n\n  return color\n}\n\nexport function useListColor(listImageUri?: string) {\n  const [color, setColor] = useState('#ffffff')\n\n  useLayoutEffect(() => {\n    let stale = false\n\n    if (listImageUri) {\n      getColorFromUriPath(listImageUri).then((color) => {\n        if (!stale && color !== null) {\n          setColor(color)\n        }\n      })\n    }\n\n    return () => {\n      stale = true\n      setColor('#ffffff')\n    }\n  }, [listImageUri])\n\n  return color\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst ToggleElement = styled.span<{ isActive?: boolean; isOnSwitch?: boolean }>`\n  padding: 0.25rem 0.5rem;\n  border-radius: 14px;\n  background: ${({ theme, isActive, isOnSwitch }) => (isActive ? (isOnSwitch ? theme.primary1 : theme.text4) : 'none')};\n  color: ${({ theme, isActive, isOnSwitch }) => (isActive ? (isOnSwitch ? theme.white : theme.text2) : theme.text3)};\n  font-size: 1rem;\n  font-weight: 400;\n\n  padding: 0.35rem 0.6rem;\n  border-radius: 12px;\n  background: ${({ theme, isActive, isOnSwitch }) => (isActive ? (isOnSwitch ? theme.primary1 : theme.text4) : 'none')};\n  color: ${({ theme, isActive, isOnSwitch }) => (isActive ? (isOnSwitch ? theme.white : theme.text2) : theme.text2)};\n  font-size: 1rem;\n  font-weight: ${({ isOnSwitch }) => (isOnSwitch ? '500' : '400')};\n  :hover {\n    user-select: ${({ isOnSwitch }) => (isOnSwitch ? 'none' : 'initial')};\n    background: ${({ theme, isActive, isOnSwitch }) =>\n      isActive ? (isOnSwitch ? theme.primary1 : theme.text3) : 'none'};\n    color: ${({ theme, isActive, isOnSwitch }) => (isActive ? (isOnSwitch ? theme.white : theme.text2) : theme.text3)};\n  }\n`\n\nconst StyledToggle = styled.button<{ isActive?: boolean; activeElement?: boolean }>`\n  border-radius: 12px;\n  border: none;\n  background: ${({ theme }) => theme.bg3};\n  display: flex;\n  width: fit-content;\n  cursor: pointer;\n  outline: none;\n  padding: 0;\n`\n\nexport interface ToggleProps {\n  id?: string\n  isActive: boolean\n  toggle: () => void\n}\n\nexport default function Toggle({ id, isActive, toggle }: ToggleProps) {\n  return (\n    <StyledToggle id={id} isActive={isActive} onClick={toggle}>\n      <ToggleElement isActive={isActive} isOnSwitch={true}>\n        On\n      </ToggleElement>\n      <ToggleElement isActive={!isActive} isOnSwitch={false}>\n        Off\n      </ToggleElement>\n    </StyledToggle>\n  )\n}\n\nexport const ToggleWrapper = styled.button<{ width?: string }>`\n  display: flex;\n  align-items: center;\n  width: ${({ width }) => width ?? '100%'}\n  padding: 1px;\n  background: ${({ theme }) => theme.bg2};\n  border-radius: 12px;\n  border: ${({ theme }) => '2px solid ' + theme.bg2};\n  cursor: pointer;\n  outline: none;\n  color: ${({ theme }) => theme.text2};\n\n`\n\nexport const ToggleElementFree = styled.span<{ isActive?: boolean; fontSize?: string }>`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 2px 10px;\n  border-radius: 12px;\n  justify-content: center;\n  height: 100%;\n  background: ${({ theme, isActive }) => (isActive ? theme.black : 'none')};\n  color: ${({ theme, isActive }) => (isActive ? theme.text1 : theme.text2)};\n  font-size: ${({ fontSize }) => fontSize ?? '1rem'};\n  font-weight: 600;\n  white-space: nowrap;\n  :hover {\n    user-select: initial;\n    color: ${({ theme, isActive }) => (isActive ? theme.text2 : theme.text3)};\n  }\n  margin-top: 0.5px;\n`\n","import React, { useRef, useState, useEffect, useCallback, Dispatch, SetStateAction, ReactNode } from 'react'\nimport { createChart, IChartApi } from 'lightweight-charts'\nimport { RowBetween } from 'components/Row'\nimport Card from '../Card'\nimport styled from 'styled-components'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport useTheme from 'hooks/useTheme'\n\ndayjs.extend(utc)\n\nconst Wrapper = styled(Card)`\n  width: 100%;\n  padding: 1rem;\n  display: flex;\n  background-color: ${({ theme }) => theme.bg0}\n  flex-direction: column;\n  > * {\n    font-size: 1rem;\n  }\n`\n\nconst DEFAULT_HEIGHT = 300\n\nexport type LineChartProps = {\n  data: any[]\n  color?: string | undefined\n  height?: number | undefined\n  minHeight?: number\n  setValue?: Dispatch<SetStateAction<number | undefined>> // used for value on hover\n  setLabel?: Dispatch<SetStateAction<string | undefined>> // used for value label on hover\n  topLeft?: ReactNode | undefined\n  topRight?: ReactNode | undefined\n  bottomLeft?: ReactNode | undefined\n  bottomRight?: ReactNode | undefined\n} & React.HTMLAttributes<HTMLDivElement>\n\nconst CandleChart = ({\n  data,\n  color = '#56B2A4',\n  setValue,\n  setLabel,\n  topLeft,\n  topRight,\n  bottomLeft,\n  bottomRight,\n  height = DEFAULT_HEIGHT,\n  minHeight = DEFAULT_HEIGHT,\n  ...rest\n}: LineChartProps) => {\n  const theme = useTheme()\n  const textColor = theme.text3\n  const chartRef = useRef<HTMLDivElement>(null)\n  const [chartCreated, setChart] = useState<IChartApi | undefined>()\n\n  const handleResize = useCallback(() => {\n    if (chartCreated && chartRef?.current?.parentElement) {\n      chartCreated.resize(chartRef.current.parentElement.clientWidth - 32, height)\n      chartCreated.timeScale().fitContent()\n      chartCreated.timeScale().scrollToPosition(0, false)\n    }\n  }, [chartCreated, chartRef, height])\n\n  // add event listener for resize\n  const isClient = typeof window === 'object'\n  useEffect(() => {\n    if (!isClient) {\n      return\n    }\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [isClient, chartRef, handleResize]) // Empty array ensures that effect is only run on mount and unmount\n\n  // if chart not instantiated in canvas, create it\n  useEffect(() => {\n    if (!chartCreated && data && !!chartRef?.current?.parentElement) {\n      const chart = createChart(chartRef.current, {\n        height: height,\n        width: chartRef.current.parentElement.clientWidth - 32,\n        layout: {\n          backgroundColor: 'transparent',\n          textColor: '#565A69',\n          fontFamily: 'Inter var',\n        },\n        rightPriceScale: {\n          scaleMargins: {\n            top: 0.1,\n            bottom: 0.1,\n          },\n          borderVisible: false,\n        },\n        timeScale: {\n          borderVisible: false,\n          secondsVisible: true,\n          tickMarkFormatter: (unixTime: number) => {\n            return dayjs.unix(unixTime).format('MM/DD h:mm A')\n          },\n        },\n        watermark: {\n          visible: false,\n        },\n        grid: {\n          horzLines: {\n            visible: false,\n          },\n          vertLines: {\n            visible: false,\n          },\n        },\n        crosshair: {\n          horzLine: {\n            visible: false,\n            labelVisible: false,\n          },\n          mode: 1,\n          vertLine: {\n            visible: true,\n            labelVisible: false,\n            style: 3,\n            width: 1,\n            color: '#505050',\n            labelBackgroundColor: color,\n          },\n        },\n      })\n\n      chart.timeScale().fitContent()\n      setChart(chart)\n    }\n  }, [color, chartCreated, data, height, setValue, textColor, theme])\n\n  useEffect(() => {\n    if (chartCreated && data) {\n      const series = chartCreated.addCandlestickSeries({\n        upColor: 'green',\n        downColor: 'red',\n        borderDownColor: 'red',\n        borderUpColor: 'green',\n        wickDownColor: 'red',\n        wickUpColor: 'green',\n      })\n\n      series.setData(data)\n\n      // update the title when hovering on the chart\n      chartCreated.subscribeCrosshairMove(function (param) {\n        if (\n          chartRef?.current &&\n          (param === undefined ||\n            param.time === undefined ||\n            (param && param.point && param.point.x < 0) ||\n            (param && param.point && param.point.x > chartRef.current.clientWidth) ||\n            (param && param.point && param.point.y < 0) ||\n            (param && param.point && param.point.y > height))\n        ) {\n          // reset values\n          setValue && setValue(undefined)\n          setLabel && setLabel(undefined)\n        } else if (series && param) {\n          const timestamp = param.time as number\n          const time = dayjs.unix(timestamp).utc().format('MMM D, YYYY h:mm A') + ' (UTC)'\n          const parsed = param.seriesPrices.get(series) as { open: number } | undefined\n          setValue && setValue(parsed?.open)\n          setLabel && setLabel(time)\n        }\n      })\n    }\n  }, [chartCreated, color, data, height, setValue, setLabel, theme.bg0])\n\n  return (\n    <Wrapper minHeight={minHeight}>\n      <RowBetween>\n        {topLeft ?? null}\n        {topRight ?? null}\n      </RowBetween>\n      <div ref={chartRef} id={'candle-chart'} {...rest} />\n      <RowBetween>\n        {bottomLeft ?? null}\n        {bottomRight ?? null}\n      </RowBetween>\n    </Wrapper>\n  )\n}\n\nexport default CandleChart\n","import React, { useMemo, useState, useEffect } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\nimport {\n  useTokenData,\n  usePoolsForToken,\n  useTokenChartData,\n  useTokenPriceData,\n  useTokenTransactions,\n} from 'state/tokens/hooks'\nimport styled from 'styled-components'\nimport { useColor } from 'hooks/useColor'\nimport { ThemedBackground, PageWrapper } from 'pages/styled'\nimport { shortenAddress, getEtherscanLink, currentTimestamp } from 'utils'\nimport { AutoColumn } from 'components/Column'\nimport { RowBetween, RowFixed, AutoRow, RowFlat } from 'components/Row'\nimport { TYPE, StyledInternalLink } from 'theme'\nimport Loader, { LocalLoader } from 'components/Loader'\nimport { ExternalLink, Download } from 'react-feather'\nimport { ExternalLink as StyledExternalLink } from '../../theme/components'\nimport useTheme from 'hooks/useTheme'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport { formatDollarAmount } from 'utils/numbers'\nimport Percent from 'components/Percent'\nimport { ButtonPrimary, ButtonGray, SavedIcon } from 'components/Button'\nimport { DarkGreyCard, LightGreyCard } from 'components/Card'\nimport { usePoolDatas } from 'state/pools/hooks'\nimport PoolTable from 'components/pools/PoolTable'\nimport LineChart from 'components/LineChart/alt'\nimport { unixToDate } from 'utils/date'\nimport { ToggleWrapper, ToggleElementFree } from 'components/Toggle/index'\nimport BarChart from 'components/BarChart/alt'\nimport CandleChart from 'components/CandleChart'\nimport TransactionTable from 'components/TransactionsTable'\nimport { useSavedTokens } from 'state/user/hooks'\nimport { ONE_HOUR_SECONDS, TimeWindow } from 'constants/intervals'\nimport { MonoSpace } from 'components/shared'\nimport dayjs from 'dayjs'\n// import { SmallOptionButton } from '../../components/Button'\n\nconst PriceText = styled(TYPE.label)`\n  font-size: 36px;\n  line-height: 0.8;\n`\n\nconst ContentLayout = styled.div`\n  margin-top: 16px;\n  display: grid;\n  grid-template-columns: 260px 1fr;\n  grid-gap: 1em;\n\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr;\n  }\n`\n\nconst ResponsiveRow = styled(RowBetween)`\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    flex-direction: column;\n    align-items: flex-start;\n    row-gap: 24px;\n    width: 100%:\n  `};\n`\n\nenum ChartView {\n  TVL,\n  VOL,\n  PRICE,\n}\n\nconst DEFAULT_TIME_WINDOW = TimeWindow.WEEK\n\nexport default function TokenPage({\n  match: {\n    params: { address },\n  },\n}: RouteComponentProps<{ address: string }>) {\n  address = address.toLowerCase()\n  // theming\n  const backgroundColor = useColor(address)\n  const theme = useTheme()\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  const tokenData = useTokenData(address)\n  const poolsForToken = usePoolsForToken(address)\n  const poolDatas = usePoolDatas(poolsForToken ?? [])\n  const transactions = useTokenTransactions(address)\n  const chartData = useTokenChartData(address)\n\n  // format for chart component\n  const formattedTvlData = useMemo(() => {\n    if (chartData) {\n      return chartData.map((day) => {\n        return {\n          time: unixToDate(day.date),\n          value: day.totalValueLockedUSD,\n        }\n      })\n    } else {\n      return []\n    }\n  }, [chartData])\n  const formattedVolumeData = useMemo(() => {\n    if (chartData) {\n      return chartData.map((day) => {\n        return {\n          time: unixToDate(day.date),\n          value: day.volumeUSD,\n        }\n      })\n    } else {\n      return []\n    }\n  }, [chartData])\n\n  // chart labels\n  const [view, setView] = useState(ChartView.PRICE)\n  const [latestValue, setLatestValue] = useState<number | undefined>()\n  const [valueLabel, setValueLabel] = useState<string | undefined>()\n  const [timeWindow] = useState(DEFAULT_TIME_WINDOW)\n\n  // pricing data\n  const priceData = useTokenPriceData(address, ONE_HOUR_SECONDS, timeWindow)\n  const adjustedToCurrent = useMemo(() => {\n    if (priceData && tokenData && priceData.length > 0) {\n      const adjusted = Object.assign([], priceData)\n      adjusted.push({\n        time: currentTimestamp() / 1000,\n        open: priceData[priceData.length - 1].close,\n        close: tokenData?.priceUSD,\n        high: tokenData?.priceUSD,\n        low: priceData[priceData.length - 1].close,\n      })\n      return adjusted\n    } else {\n      return undefined\n    }\n  }, [priceData, tokenData])\n\n  // watchlist\n  const [savedTokens, addSavedToken] = useSavedTokens()\n\n  return (\n    <PageWrapper>\n      <ThemedBackground backgroundColor={backgroundColor} />\n      {tokenData ? (\n        !tokenData.exists ? (\n          <LightGreyCard style={{ textAlign: 'center' }}>\n            No pool has been created with this token yet. Create one\n            <StyledExternalLink style={{ marginLeft: '4px' }} href={`https://wavax.org/#/add/${address}`}>\n              here.\n            </StyledExternalLink>\n          </LightGreyCard>\n        ) : (\n          <AutoColumn gap=\"lg\">\n            <AutoColumn gap=\"40px\">\n              <RowBetween>\n                <AutoRow gap=\"4px\">\n                  <StyledInternalLink to={'/'}>\n                    <TYPE.main>{`Home > `}</TYPE.main>\n                  </StyledInternalLink>\n                  <StyledInternalLink to={'/tokens'}>\n                    <TYPE.label>{` Tokens `}</TYPE.label>\n                  </StyledInternalLink>\n                  <TYPE.main>{` > `}</TYPE.main>\n                  <TYPE.label>{` ${tokenData.symbol} `}</TYPE.label>\n                  <StyledExternalLink href={getEtherscanLink(1, address, 'address')}>\n                    <TYPE.main>{` (${shortenAddress(address)}) `}</TYPE.main>\n                  </StyledExternalLink>\n                </AutoRow>\n                <RowFixed gap=\"10px\" align=\"center\">\n                  <SavedIcon fill={savedTokens.includes(address)} onClick={() => addSavedToken(address)} />\n                  <StyledExternalLink href={getEtherscanLink(1, address, 'address')}>\n                    <ExternalLink stroke={theme.text2} size={'17px'} style={{ marginLeft: '12px' }} />\n                  </StyledExternalLink>\n                </RowFixed>\n              </RowBetween>\n              <ResponsiveRow align=\"flex-end\">\n                <AutoColumn gap=\"md\">\n                  <RowFixed gap=\"4px\">\n                    <CurrencyLogo address={address} />\n                    <TYPE.label ml={'12px'} fontSize=\"20px\">\n                      {tokenData.name}\n                    </TYPE.label>\n                    <TYPE.main ml={'12px'} fontSize=\"20px\">\n                      ({tokenData.symbol})\n                    </TYPE.main>\n                  </RowFixed>\n                  <RowFlat style={{ marginTop: '8px' }}>\n                    <PriceText mr=\"10px\"> {formatDollarAmount(tokenData.priceUSD)}</PriceText>\n                    (<Percent value={tokenData.priceUSDChange} />)\n                  </RowFlat>\n                </AutoColumn>\n                <RowFixed>\n                  <StyledExternalLink href={`https://wavax.org/#/add/${address}`}>\n                    <ButtonGray width=\"170px\" mr=\"12px\" height={'100%'} style={{ height: '44px' }}>\n                      <RowBetween>\n                        <Download size={24} />\n                        <div style={{ display: 'flex', alignItems: 'center' }}>Add Liquidity</div>\n                      </RowBetween>\n                    </ButtonGray>\n                  </StyledExternalLink>\n                  <StyledExternalLink href={`https://wavax.org/#/swap?inputCurrency=${address}`}>\n                    <ButtonPrimary width=\"100px\" bgColor={backgroundColor} style={{ height: '44px' }}>\n                      Trade\n                    </ButtonPrimary>\n                  </StyledExternalLink>\n                </RowFixed>\n              </ResponsiveRow>\n            </AutoColumn>\n            <ContentLayout>\n              <DarkGreyCard>\n                <AutoColumn gap=\"lg\">\n                  <AutoColumn gap=\"4px\">\n                    <TYPE.main fontWeight={400}>TVL</TYPE.main>\n                    <TYPE.label fontSize=\"24px\">{formatDollarAmount(tokenData.tvlUSD)}</TYPE.label>\n                    <Percent value={tokenData.tvlUSDChange} />\n                  </AutoColumn>\n                  <AutoColumn gap=\"4px\">\n                    <TYPE.main fontWeight={400}>24h Trading Vol</TYPE.main>\n                    <TYPE.label fontSize=\"24px\">{formatDollarAmount(tokenData.volumeUSD)}</TYPE.label>\n                    <Percent value={tokenData.volumeUSDChange} />\n                  </AutoColumn>\n                  <AutoColumn gap=\"4px\">\n                    <TYPE.main fontWeight={400}>7d Trading Vol</TYPE.main>\n                    <TYPE.label fontSize=\"24px\">{formatDollarAmount(tokenData.volumeUSDWeek)}</TYPE.label>\n                  </AutoColumn>\n                  <AutoColumn gap=\"4px\">\n                    <TYPE.main fontWeight={400}>24h Fees</TYPE.main>\n                    <TYPE.label fontSize=\"24px\">{formatDollarAmount(tokenData.feesUSD)}</TYPE.label>\n                  </AutoColumn>\n                </AutoColumn>\n              </DarkGreyCard>\n              <DarkGreyCard>\n                <RowBetween align=\"flex-start\">\n                  <AutoColumn>\n                    <RowFixed>\n                      <TYPE.label fontSize=\"24px\" height=\"30px\">\n                        <MonoSpace>\n                          {latestValue\n                            ? formatDollarAmount(latestValue, 2)\n                            : view === ChartView.VOL\n                            ? formatDollarAmount(formattedVolumeData[formattedVolumeData.length - 1]?.value)\n                            : view === ChartView.TVL\n                            ? formatDollarAmount(formattedTvlData[formattedTvlData.length - 1]?.value)\n                            : formatDollarAmount(tokenData.priceUSD, 2)}\n                        </MonoSpace>\n                      </TYPE.label>\n                    </RowFixed>\n                    <TYPE.main height=\"20px\" fontSize=\"12px\">\n                      {valueLabel ? (\n                        <MonoSpace>{valueLabel}</MonoSpace>\n                      ) : (\n                        <MonoSpace>{dayjs.utc().format('MMM D, YYYY')}</MonoSpace>\n                      )}\n                    </TYPE.main>\n                  </AutoColumn>\n                  <ToggleWrapper width=\"180px\">\n                    <ToggleElementFree\n                      isActive={view === ChartView.VOL}\n                      fontSize=\"12px\"\n                      onClick={() => (view === ChartView.VOL ? setView(ChartView.TVL) : setView(ChartView.VOL))}\n                    >\n                      Volume\n                    </ToggleElementFree>\n                    <ToggleElementFree\n                      isActive={view === ChartView.TVL}\n                      fontSize=\"12px\"\n                      onClick={() => (view === ChartView.TVL ? setView(ChartView.PRICE) : setView(ChartView.TVL))}\n                    >\n                      TVL\n                    </ToggleElementFree>\n                    <ToggleElementFree\n                      isActive={view === ChartView.PRICE}\n                      fontSize=\"12px\"\n                      onClick={() => setView(ChartView.PRICE)}\n                    >\n                      Price\n                    </ToggleElementFree>\n                  </ToggleWrapper>\n                </RowBetween>\n                {view === ChartView.TVL ? (\n                  <LineChart\n                    data={formattedTvlData}\n                    color={backgroundColor}\n                    minHeight={340}\n                    value={latestValue}\n                    label={valueLabel}\n                    setValue={setLatestValue}\n                    setLabel={setValueLabel}\n                  />\n                ) : view === ChartView.VOL ? (\n                  <BarChart\n                    data={formattedVolumeData}\n                    color={backgroundColor}\n                    minHeight={340}\n                    value={latestValue}\n                    label={valueLabel}\n                    setValue={setLatestValue}\n                    setLabel={setValueLabel}\n                  />\n                ) : view === ChartView.PRICE ? (\n                  adjustedToCurrent ? (\n                    <CandleChart\n                      data={adjustedToCurrent}\n                      setValue={setLatestValue}\n                      setLabel={setValueLabel}\n                      color={backgroundColor}\n                    />\n                  ) : (\n                    <LocalLoader fill={false} />\n                  )\n                ) : null}\n                {/* <RowBetween width=\"100%\">\n                  <div> </div>\n                  <AutoRow gap=\"4px\" width=\"fit-content\">\n                    <SmallOptionButton\n                      active={timeWindow === TimeWindow.DAY}\n                      onClick={() => setTimeWindow(TimeWindow.DAY)}\n                    >\n                      24H\n                    </SmallOptionButton>\n                    <SmallOptionButton\n                      active={timeWindow === TimeWindow.WEEK}\n                      onClick={() => setTimeWindow(TimeWindow.WEEK)}\n                    >\n                      1W\n                    </SmallOptionButton>\n                    <SmallOptionButton\n                      active={timeWindow === TimeWindow.MONTH}\n                      onClick={() => setTimeWindow(TimeWindow.MONTH)}\n                    >\n                      1M\n                    </SmallOptionButton>\n                    <SmallOptionButton\n                      active={timeWindow === TimeWindow.DAY}\n                      onClick={() => setTimeWindow(TimeWindow.DAY)}\n                    >\n                      All\n                    </SmallOptionButton>\n                  </AutoRow>\n                </RowBetween> */}\n              </DarkGreyCard>\n            </ContentLayout>\n            <TYPE.main>Pools</TYPE.main>\n            <DarkGreyCard>\n              <PoolTable poolDatas={poolDatas} />\n            </DarkGreyCard>\n            <TYPE.main>Transactions</TYPE.main>\n            <DarkGreyCard>\n              {transactions ? (\n                <TransactionTable transactions={transactions} color={backgroundColor} />\n              ) : (\n                <LocalLoader fill={false} />\n              )}\n            </DarkGreyCard>\n          </AutoColumn>\n        )\n      ) : (\n        <Loader />\n      )}\n    </PageWrapper>\n  )\n}\n","/**\n * Constanst for historical data fetching.\n *\n */\n\nimport { OpUnitType } from 'dayjs'\n\nexport const ONE_HOUR_SECONDS = 3600\n\nexport const TimeWindow: {\n  [key: string]: OpUnitType\n} = {\n  DAY: 'day',\n  WEEK: 'week',\n  MONTH: 'month',\n}\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport TokenPage from './TokenPage'\nimport { isAddress } from 'ethers/lib/utils'\n\nexport function RedirectInvalidToken(props: RouteComponentProps<{ address: string }>) {\n  const {\n    match: {\n      params: { address },\n    },\n  } = props\n\n  if (!isAddress(address)) {\n    return <Redirect to={`/`} />\n  }\n  return <TokenPage {...props} />\n}\n","import gql from 'graphql-tag'\nimport { client } from 'apollo/client'\nimport JSBI from 'jsbi'\nimport keyBy from 'lodash.keyby'\nimport { TickMath, tickToPrice } from '@uniswap/v3-sdk'\nimport { Token } from '@uniswap/sdk-core'\n\nconst PRICE_FIXED_DIGITS = 4\nconst DEFAULT_SURROUNDING_TICKS = 300\nconst FEE_TIER_TO_TICK_SPACING = (feeTier: string): number => {\n  switch (feeTier) {\n    case '10000':\n      return 200\n    case '3000':\n      return 60\n    case '500':\n      return 10\n    default:\n      throw Error(`Tick spacing for fee tier ${feeTier} undefined.`)\n  }\n}\n\ninterface TickPool {\n  tick: string\n  feeTier: string\n  token0: {\n    symbol: string\n    id: string\n    decimals: string\n  }\n  token1: {\n    symbol: string\n    id: string\n    decimals: string\n  }\n  sqrtPrice: string\n  liquidity: string\n}\n\ninterface PoolResult {\n  pool: TickPool\n}\n\n// Raw tick returned from GQL\ninterface Tick {\n  tickIdx: string\n  liquidityGross: string\n  liquidityNet: string\n  price0: string\n  price1: string\n}\n\ninterface SurroundingTicksResult {\n  ticks: Tick[]\n}\n\n// Tick with fields parsed to JSBIs, and active liquidity computed.\nexport interface TickProcessed {\n  liquidityGross: JSBI\n  liquidityNet: JSBI\n  tickIdx: number\n  liquidityActive: JSBI\n  price0: string\n  price1: string\n}\n\nconst fetchInitializedTicks = async (\n  poolAddress: string,\n  tickIdxLowerBound: number,\n  tickIdxUpperBound: number\n): Promise<{ loading?: boolean; error?: boolean; ticks?: Tick[] }> => {\n  const tickQuery = gql`\n    query surroundingTicks(\n      $poolAddress: String!\n      $tickIdxLowerBound: BigInt!\n      $tickIdxUpperBound: BigInt!\n      $skip: Int!\n    ) {\n      ticks(\n        first: 1000\n        skip: $skip\n        where: { poolAddress: $poolAddress, tickIdx_lte: $tickIdxUpperBound, tickIdx_gte: $tickIdxLowerBound }\n      ) {\n        tickIdx\n        liquidityGross\n        liquidityNet\n        price0\n        price1\n      }\n    }\n  `\n\n  let surroundingTicks: Tick[] = []\n  let surroundingTicksResult: Tick[] = []\n  let skip = 0\n  do {\n    const { data, error, loading } = await client.query<SurroundingTicksResult>({\n      query: tickQuery,\n      fetchPolicy: 'network-only',\n      variables: {\n        poolAddress,\n        tickIdxLowerBound,\n        tickIdxUpperBound,\n        skip,\n      },\n    })\n\n    // console.log({ data, error, loading }, 'Result. Skip: ' + skip)\n\n    if (loading) {\n      continue\n    }\n\n    if (error) {\n      return { error: Boolean(error), loading, ticks: surroundingTicksResult }\n    }\n\n    surroundingTicks = data.ticks\n    surroundingTicksResult = surroundingTicksResult.concat(surroundingTicks)\n    skip += 1000\n  } while (surroundingTicks.length > 0)\n\n  return { ticks: surroundingTicksResult, loading: false, error: false }\n}\n\nexport interface PoolTickData {\n  ticksProcessed: TickProcessed[]\n  feeTier: string\n  tickSpacing: number\n  activeTickIdx: number\n}\n\nconst poolQuery = gql`\n  query pool($poolAddress: String!) {\n    pool(id: $poolAddress) {\n      tick\n      token0 {\n        symbol\n        id\n        decimals\n      }\n      token1 {\n        symbol\n        id\n        decimals\n      }\n      feeTier\n      sqrtPrice\n      liquidity\n    }\n  }\n`\n\nexport const fetchTicksSurroundingPrice = async (\n  poolAddress: string,\n  numSurroundingTicks = DEFAULT_SURROUNDING_TICKS\n): Promise<{\n  loading?: boolean\n  error?: boolean\n  data?: PoolTickData\n}> => {\n  const { data: poolResult, error, loading } = await client.query<PoolResult>({\n    query: poolQuery,\n    variables: {\n      poolAddress,\n    },\n  })\n\n  if (loading || error || !poolResult) {\n    return {\n      loading,\n      error: Boolean(error),\n      data: undefined,\n    }\n  }\n\n  const {\n    pool: {\n      tick: poolCurrentTick,\n      feeTier,\n      liquidity,\n      token0: { id: token0Address, decimals: token0Decimals },\n      token1: { id: token1Address, decimals: token1Decimals },\n    },\n  } = poolResult\n\n  const poolCurrentTickIdx = parseInt(poolCurrentTick)\n  const tickSpacing = FEE_TIER_TO_TICK_SPACING(feeTier)\n\n  // The pools current tick isn't necessarily a tick that can actually be initialized.\n  // Find the nearest valid tick given the tick spacing.\n  const activeTickIdx = Math.floor(poolCurrentTickIdx / tickSpacing) * tickSpacing\n\n  // Our search bounds must take into account fee spacing. i.e. for fee tier 1%, only\n  // ticks with index 200, 400, 600, etc can be active.\n  const tickIdxLowerBound = activeTickIdx - numSurroundingTicks * tickSpacing\n  const tickIdxUpperBound = activeTickIdx + numSurroundingTicks * tickSpacing\n\n  const initializedTicksResult = await fetchInitializedTicks(poolAddress, tickIdxLowerBound, tickIdxUpperBound)\n  if (initializedTicksResult.error || initializedTicksResult.loading) {\n    return {\n      error: initializedTicksResult.error,\n      loading: initializedTicksResult.loading,\n    }\n  }\n\n  const { ticks: initializedTicks } = initializedTicksResult\n\n  const tickIdxToInitializedTick = keyBy(initializedTicks, 'tickIdx')\n\n  const token0 = new Token(1, token0Address, parseInt(token0Decimals))\n  const token1 = new Token(1, token1Address, parseInt(token1Decimals))\n\n  // console.log({ activeTickIdx, poolCurrentTickIdx }, 'Active ticks')\n\n  // If the pool's tick is MIN_TICK (-887272), then when we find the closest\n  // initializable tick to its left, the value would be smaller than MIN_TICK.\n  // In this case we must ensure that the prices shown never go below/above.\n  // what actual possible from the protocol.\n  let activeTickIdxForPrice = activeTickIdx\n  if (activeTickIdxForPrice < TickMath.MIN_TICK) {\n    activeTickIdxForPrice = TickMath.MIN_TICK\n  }\n  if (activeTickIdxForPrice > TickMath.MAX_TICK) {\n    activeTickIdxForPrice = TickMath.MAX_TICK\n  }\n\n  const activeTickProcessed: TickProcessed = {\n    liquidityActive: JSBI.BigInt(liquidity),\n    tickIdx: activeTickIdx,\n    liquidityNet: JSBI.BigInt(0),\n    price0: tickToPrice(token0, token1, activeTickIdxForPrice).toFixed(PRICE_FIXED_DIGITS),\n    price1: tickToPrice(token1, token0, activeTickIdxForPrice).toFixed(PRICE_FIXED_DIGITS),\n    liquidityGross: JSBI.BigInt(0),\n  }\n\n  // If our active tick happens to be initialized (i.e. there is a position that starts or\n  // ends at that tick), ensure we set the gross and net.\n  // correctly.\n  const activeTick = tickIdxToInitializedTick[activeTickIdx]\n  if (activeTick) {\n    activeTickProcessed.liquidityGross = JSBI.BigInt(activeTick.liquidityGross)\n    activeTickProcessed.liquidityNet = JSBI.BigInt(activeTick.liquidityNet)\n  }\n\n  enum Direction {\n    ASC,\n    DESC,\n  }\n\n  // Computes the numSurroundingTicks above or below the active tick.\n  const computeSurroundingTicks = (\n    activeTickProcessed: TickProcessed,\n    tickSpacing: number,\n    numSurroundingTicks: number,\n    direction: Direction\n  ) => {\n    let previousTickProcessed: TickProcessed = {\n      ...activeTickProcessed,\n    }\n\n    // Iterate outwards (either up or down depending on 'Direction') from the active tick,\n    // building active liquidity for every tick.\n    let processedTicks: TickProcessed[] = []\n    for (let i = 0; i < numSurroundingTicks; i++) {\n      const currentTickIdx =\n        direction == Direction.ASC\n          ? previousTickProcessed.tickIdx + tickSpacing\n          : previousTickProcessed.tickIdx - tickSpacing\n\n      if (currentTickIdx < TickMath.MIN_TICK || currentTickIdx > TickMath.MAX_TICK) {\n        break\n      }\n\n      const currentTickProcessed: TickProcessed = {\n        liquidityActive: previousTickProcessed.liquidityActive,\n        tickIdx: currentTickIdx,\n        liquidityNet: JSBI.BigInt(0),\n        price0: tickToPrice(token0, token1, currentTickIdx).toFixed(PRICE_FIXED_DIGITS),\n        price1: tickToPrice(token1, token0, currentTickIdx).toFixed(PRICE_FIXED_DIGITS),\n        liquidityGross: JSBI.BigInt(0),\n      }\n\n      // Check if there is an initialized tick at our current tick.\n      // If so copy the gross and net liquidity from the initialized tick.\n      const currentInitializedTick = tickIdxToInitializedTick[currentTickIdx.toString()]\n      if (currentInitializedTick) {\n        currentTickProcessed.liquidityGross = JSBI.BigInt(currentInitializedTick.liquidityGross)\n        currentTickProcessed.liquidityNet = JSBI.BigInt(currentInitializedTick.liquidityNet)\n      }\n\n      // Update the active liquidity.\n      // If we are iterating ascending and we found an initialized tick we immediately apply\n      // it to the current processed tick we are building.\n      // If we are iterating descending, we don't want to apply the net liquidity until the following tick.\n      if (direction == Direction.ASC && currentInitializedTick) {\n        currentTickProcessed.liquidityActive = JSBI.add(\n          previousTickProcessed.liquidityActive,\n          JSBI.BigInt(currentInitializedTick.liquidityNet)\n        )\n      } else if (direction == Direction.DESC && JSBI.notEqual(previousTickProcessed.liquidityNet, JSBI.BigInt(0))) {\n        // We are iterating descending, so look at the previous tick and apply any net liquidity.\n        currentTickProcessed.liquidityActive = JSBI.subtract(\n          previousTickProcessed.liquidityActive,\n          previousTickProcessed.liquidityNet\n        )\n      }\n\n      processedTicks.push(currentTickProcessed)\n      previousTickProcessed = currentTickProcessed\n    }\n\n    if (direction == Direction.DESC) {\n      processedTicks = processedTicks.reverse()\n    }\n\n    return processedTicks\n  }\n\n  const subsequentTicks: TickProcessed[] = computeSurroundingTicks(\n    activeTickProcessed,\n    tickSpacing,\n    numSurroundingTicks,\n    Direction.ASC\n  )\n\n  const previousTicks: TickProcessed[] = computeSurroundingTicks(\n    activeTickProcessed,\n    tickSpacing,\n    numSurroundingTicks,\n    Direction.DESC\n  )\n\n  const ticksProcessed = previousTicks.concat(activeTickProcessed).concat(subsequentTicks)\n\n  return {\n    data: {\n      ticksProcessed,\n      feeTier,\n      tickSpacing,\n      activeTickIdx,\n    },\n  }\n}\n","import React from 'react'\nimport { ChartEntry } from './index'\nimport { PoolData } from 'state/pools/reducer'\nimport useTheme from 'hooks/useTheme'\nimport styled from 'styled-components'\nimport { AutoColumn } from 'components/Column'\nimport { RowFixed } from 'components/Row'\nimport { TYPE } from 'theme'\n\nconst Wrapper = styled.div`\n  border-radius: 8px;\n  padding: 6px 12px;\n  color: white;\n  width: fit-content;\n  font-size: 14px;\n  background-color: ${({ theme }) => theme.bg2};\n`\n\ninterface LabelProps {\n  x: number\n  y: number\n  index: number\n}\n\ninterface CurrentPriceLabelProps {\n  data: ChartEntry[] | undefined\n  chartProps: any\n  poolData: PoolData\n}\n\nexport function CurrentPriceLabel({ data, chartProps, poolData }: CurrentPriceLabelProps) {\n  const theme = useTheme()\n  const labelData = chartProps as LabelProps\n  const entryData = data?.[labelData.index]\n  if (entryData?.isCurrent) {\n    const price0 = entryData.price0\n    const price1 = entryData.price1\n    return (\n      <g>\n        <foreignObject x={labelData.x - 80} y={318} width={'100%'} height={100}>\n          <Wrapper>\n            <AutoColumn gap=\"6px\">\n              <RowFixed align=\"center\">\n                <TYPE.main mr=\"6px\">Current Price</TYPE.main>\n                <div\n                  style={{\n                    marginTop: '2px',\n                    height: '6px',\n                    width: '6px',\n                    borderRadius: '50%',\n                    backgroundColor: theme.pink1,\n                  }}\n                ></div>\n              </RowFixed>\n              <TYPE.label>{`1 ${poolData.token0.symbol} = ${Number(price0).toLocaleString(undefined, {\n                minimumSignificantDigits: 1,\n              })} ${poolData.token1.symbol}`}</TYPE.label>\n              <TYPE.label>{`1 ${poolData.token1.symbol} = ${Number(price1).toLocaleString(undefined, {\n                minimumSignificantDigits: 1,\n              })} ${poolData.token0.symbol}`}</TYPE.label>\n            </AutoColumn>\n          </Wrapper>\n        </foreignObject>\n      </g>\n    )\n  }\n  return null\n}\n","import React from 'react'\nimport { PoolData } from 'state/pools/reducer'\nimport styled from 'styled-components'\nimport { LightCard } from 'components/Card'\nimport useTheme from 'hooks/useTheme'\nimport { AutoColumn } from 'components/Column'\nimport { TYPE } from 'theme'\nimport { RowBetween } from 'components/Row'\nimport { formatAmount } from 'utils/numbers'\n\nconst TooltipWrapper = styled(LightCard)`\n  padding: 12px;\n  width: 320px;\n  opacity: 0.6;\n  font-size: 12px;\n  z-index: 10;\n`\n\ninterface CustomToolTipProps {\n  chartProps: any\n  poolData: PoolData\n  currentPrice: number | undefined\n}\n\nexport function CustomToolTip({ chartProps, poolData, currentPrice }: CustomToolTipProps) {\n  const theme = useTheme()\n  const price0 = chartProps?.payload?.[0]?.payload.price0\n  const price1 = chartProps?.payload?.[0]?.payload.price1\n  const tvlToken0 = chartProps?.payload?.[0]?.payload.tvlToken0\n  const tvlToken1 = chartProps?.payload?.[0]?.payload.tvlToken1\n\n  return (\n    <TooltipWrapper>\n      <AutoColumn gap=\"sm\">\n        <TYPE.main color={theme.text3}>Tick stats</TYPE.main>\n        <RowBetween>\n          <TYPE.label>{poolData?.token0?.symbol} Price: </TYPE.label>\n          <TYPE.label>\n            {price0\n              ? Number(price0).toLocaleString(undefined, {\n                  minimumSignificantDigits: 1,\n                })\n              : ''}{' '}\n            {poolData?.token1?.symbol}\n          </TYPE.label>\n        </RowBetween>\n        <RowBetween>\n          <TYPE.label>{poolData?.token1?.symbol} Price: </TYPE.label>\n          <TYPE.label>\n            {price1\n              ? Number(price1).toLocaleString(undefined, {\n                  minimumSignificantDigits: 1,\n                })\n              : ''}{' '}\n            {poolData?.token0?.symbol}\n          </TYPE.label>\n        </RowBetween>\n        {currentPrice && price0 && currentPrice > price1 ? (\n          <RowBetween>\n            <TYPE.label>{poolData?.token0?.symbol} Locked: </TYPE.label>\n            <TYPE.label>\n              {tvlToken0 ? formatAmount(tvlToken0) : ''} {poolData?.token0?.symbol}\n            </TYPE.label>\n          </RowBetween>\n        ) : (\n          <RowBetween>\n            <TYPE.label>{poolData?.token1?.symbol} Locked: </TYPE.label>\n            <TYPE.label>\n              {tvlToken1 ? formatAmount(tvlToken1) : ''} {poolData?.token1?.symbol}\n            </TYPE.label>\n          </RowBetween>\n        )}\n      </AutoColumn>\n    </TooltipWrapper>\n  )\n}\n\nexport default CustomToolTip\n","import { fetchTicksSurroundingPrice, TickProcessed } from 'data/pools/tickData'\nimport React, { useEffect, useMemo, useState, useCallback } from 'react'\nimport { BarChart, Bar, LabelList, XAxis, Tooltip, ResponsiveContainer, Cell } from 'recharts'\nimport Loader from 'components/Loader'\nimport styled from 'styled-components'\nimport useTheme from 'hooks/useTheme'\nimport { usePoolDatas, usePoolTickData } from 'state/pools/hooks'\nimport { MAX_UINT128 } from '../../constants/index'\nimport { isAddress } from 'utils'\nimport { Pool, TickMath, TICK_SPACINGS, FeeAmount } from '@uniswap/v3-sdk'\nimport { PoolData } from 'state/pools/reducer'\nimport { CurrentPriceLabel } from './CurrentPriceLabel'\nimport CustomToolTip from './CustomToolTip'\nimport { Token, CurrencyAmount } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 400px;\n`\n\nconst ControlsWrapper = styled.div`\n  position: absolute;\n  right: 40px;\n  bottom: 100px;\n  padding: 4px;\n  border-radius: 8px;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-column-gap: 6px;\n`\n\nconst ActionButton = styled.div<{ disabled?: boolean }>`\n  width: 32x;\n  border-radius: 50%;\n  background-color: black;\n  padding: 4px 8px;\n  display: flex;\n  justify-content: center;\n  font-size: 18px;\n  font-weight: 500;\n  align-items: center;\n  opacity: ${({ disabled }) => (disabled ? 0.4 : 0.9)};\n  background-color: ${({ theme, disabled }) => (disabled ? theme.bg3 : theme.bg2)};\n  user-select: none;\n\n  :hover {\n    cursor: pointer;\n    opacity: 0.4;\n  }\n`\n\ninterface DensityChartProps {\n  address: string\n}\n\nexport interface ChartEntry {\n  index: number\n  isCurrent: boolean\n  activeLiquidity: number\n  price0: number\n  price1: number\n  tvlToken0: number\n  tvlToken1: number\n}\n\ninterface ZoomStateProps {\n  left: number\n  right: number\n  refAreaLeft: string | number\n  refAreaRight: string | number\n}\n\nconst INITIAL_TICKS_TO_FETCH = 200\nconst ZOOM_INTERVAL = 20\n\nconst initialState = {\n  left: 0,\n  right: INITIAL_TICKS_TO_FETCH * 2 + 1,\n  refAreaLeft: '',\n  refAreaRight: '',\n}\n\nexport default function DensityChart({ address }: DensityChartProps) {\n  const theme = useTheme()\n\n  // poolData\n  const poolData: PoolData = usePoolDatas([address])[0]\n  const formattedAddress0 = isAddress(poolData.token0.address)\n  const formattedAddress1 = isAddress(poolData.token1.address)\n  const feeTier = poolData?.feeTier\n\n  // parsed tokens\n  const token0 = useMemo(() => {\n    return poolData && formattedAddress0 && formattedAddress1\n      ? new Token(1, formattedAddress0, poolData.token0.decimals)\n      : undefined\n  }, [formattedAddress0, formattedAddress1, poolData])\n  const token1 = useMemo(() => {\n    return poolData && formattedAddress1 && formattedAddress1\n      ? new Token(1, formattedAddress1, poolData.token1.decimals)\n      : undefined\n  }, [formattedAddress1, poolData])\n\n  // tick data tracking\n  const [poolTickData, updatePoolTickData] = usePoolTickData(address)\n  const [ticksToFetch, setTicksToFetch] = useState(INITIAL_TICKS_TO_FETCH)\n  const amountTicks = ticksToFetch * 2 + 1\n\n  const [loading, setLoading] = useState(false)\n  const [zoomState, setZoomState] = useState<ZoomStateProps>(initialState)\n\n  useEffect(() => {\n    async function fetch() {\n      const { data } = await fetchTicksSurroundingPrice(address, ticksToFetch)\n      if (data) {\n        updatePoolTickData(address, data)\n      }\n    }\n    if (!poolTickData || (poolTickData && poolTickData.ticksProcessed.length < amountTicks)) {\n      fetch()\n    }\n  }, [address, poolTickData, updatePoolTickData, ticksToFetch, amountTicks])\n\n  const [formattedData, setFormattedData] = useState<ChartEntry[] | undefined>()\n  useEffect(() => {\n    async function formatData() {\n      if (poolTickData) {\n        const newData = await Promise.all(\n          poolTickData.ticksProcessed.map(async (t: TickProcessed, i) => {\n            const active = t.tickIdx === poolTickData.activeTickIdx\n            const sqrtPriceX96 = TickMath.getSqrtRatioAtTick(t.tickIdx)\n            const feeAmount: FeeAmount = poolData.feeTier\n            const mockTicks = [\n              {\n                index: t.tickIdx - TICK_SPACINGS[feeAmount],\n                liquidityGross: t.liquidityGross,\n                liquidityNet: JSBI.multiply(t.liquidityNet, JSBI.BigInt('-1')),\n              },\n              {\n                index: t.tickIdx,\n                liquidityGross: t.liquidityGross,\n                liquidityNet: t.liquidityNet,\n              },\n            ]\n            const pool =\n              token0 && token1 && feeTier\n                ? new Pool(token0, token1, feeTier, sqrtPriceX96, t.liquidityActive, t.tickIdx, mockTicks)\n                : undefined\n            const nextSqrtX96 = poolTickData.ticksProcessed[i - 1]\n              ? TickMath.getSqrtRatioAtTick(poolTickData.ticksProcessed[i - 1].tickIdx)\n              : undefined\n            const maxAmountToken0 = token0 ? CurrencyAmount.fromRawAmount(token0, MAX_UINT128.toString()) : undefined\n            const outputRes0 =\n              pool && maxAmountToken0 ? await pool.getOutputAmount(maxAmountToken0, nextSqrtX96) : undefined\n\n            const token1Amount = outputRes0?.[0] as CurrencyAmount<Token> | undefined\n\n            const amount0 = token1Amount ? parseFloat(token1Amount.toExact()) * parseFloat(t.price1) : 0\n            const amount1 = token1Amount ? parseFloat(token1Amount.toExact()) : 0\n\n            return {\n              index: i,\n              isCurrent: active,\n              activeLiquidity: parseFloat(t.liquidityActive.toString()),\n              price0: parseFloat(t.price0),\n              price1: parseFloat(t.price1),\n              tvlToken0: amount0,\n              tvlToken1: amount1,\n            }\n          })\n        )\n        // offset the values to line off bars with TVL used to swap across bar\n        newData?.map((entry, i) => {\n          if (i > 0) {\n            newData[i - 1].tvlToken0 = entry.tvlToken0\n            newData[i - 1].tvlToken1 = entry.tvlToken1\n          }\n        })\n\n        if (newData) {\n          if (loading) {\n            setLoading(false)\n          }\n          setFormattedData(newData)\n        }\n        return\n      } else {\n        return []\n      }\n    }\n    if (!formattedData) {\n      formatData()\n    }\n  }, [feeTier, formattedData, loading, poolData.feeTier, poolTickData, token0, token1])\n\n  const atZoomMax = zoomState.left + ZOOM_INTERVAL >= zoomState.right - ZOOM_INTERVAL - 1\n  const atZoomMin = zoomState.left - ZOOM_INTERVAL < 0\n\n  const handleZoomIn = useCallback(() => {\n    !atZoomMax &&\n      setZoomState({\n        ...zoomState,\n        left: zoomState.left + ZOOM_INTERVAL,\n        right: zoomState.right - ZOOM_INTERVAL,\n      })\n  }, [zoomState, atZoomMax])\n\n  const handleZoomOut = useCallback(() => {\n    if (atZoomMin) {\n      setLoading(true)\n      setTicksToFetch(ticksToFetch + ZOOM_INTERVAL)\n      setFormattedData(undefined)\n      setZoomState({\n        ...zoomState,\n        left: 0,\n        right: amountTicks,\n      })\n    } else {\n      setZoomState({\n        ...zoomState,\n        left: zoomState.left - ZOOM_INTERVAL,\n        right: zoomState.right + ZOOM_INTERVAL,\n      })\n    }\n  }, [amountTicks, atZoomMin, ticksToFetch, zoomState])\n\n  const zoomedData = useMemo(() => {\n    if (formattedData) {\n      return formattedData.slice(zoomState.left, zoomState.right)\n    }\n    return undefined\n  }, [formattedData, zoomState.left, zoomState.right])\n\n  // reset data on address change\n  useEffect(() => {\n    setFormattedData(undefined)\n  }, [address])\n\n  if (!poolTickData) {\n    return <Loader />\n  }\n\n  const CustomBar = ({\n    x,\n    y,\n    width,\n    height,\n    fill,\n  }: {\n    x: number\n    y: number\n    width: number\n    height: number\n    fill: string\n  }) => {\n    return (\n      <g>\n        <rect x={x} y={y} fill={fill} width={width} height={height} rx=\"2\" />\n      </g>\n    )\n  }\n  return (\n    <Wrapper>\n      {!loading ? (\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <BarChart\n            width={500}\n            height={300}\n            data={zoomedData}\n            margin={{\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 60,\n            }}\n          >\n            <Tooltip\n              content={(props) => (\n                <CustomToolTip chartProps={props} poolData={poolData} currentPrice={poolData.token0Price} />\n              )}\n            />\n            <XAxis reversed={true} tick={false} />\n            <Bar\n              dataKey=\"activeLiquidity\"\n              fill=\"#ffffff\"\n              isAnimationActive={false}\n              shape={(props) => {\n                // eslint-disable-next-line react/prop-types\n                return <CustomBar height={props.height} width={props.width} x={props.x} y={props.y} fill={props.fill} />\n              }}\n            >\n              {zoomedData?.map((entry, index) => {\n                return <Cell key={`cell-${index}`} fill={entry.isCurrent ? theme.pink1 : theme.blue1} />\n              })}\n              <LabelList\n                dataKey=\"activeLiquidity\"\n                position=\"inside\"\n                content={(props) => <CurrentPriceLabel chartProps={props} poolData={poolData} data={zoomedData} />}\n              />\n            </Bar>\n          </BarChart>\n        </ResponsiveContainer>\n      ) : (\n        <Loader />\n      )}\n      <ControlsWrapper>\n        <ActionButton disabled={false} onClick={handleZoomOut}>\n          -\n        </ActionButton>\n        <ActionButton disabled={atZoomMax} onClick={handleZoomIn}>\n          +\n        </ActionButton>\n      </ControlsWrapper>\n    </Wrapper>\n  )\n}\n","import React, { useMemo, useState, useEffect } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useColor } from 'hooks/useColor'\nimport { ThemedBackground, PageWrapper } from 'pages/styled'\nimport { feeTierPercent, getEtherscanLink } from 'utils'\nimport { AutoColumn } from 'components/Column'\nimport { RowBetween, RowFixed, AutoRow } from 'components/Row'\nimport { TYPE, StyledInternalLink } from 'theme'\nimport Loader, { LocalLoader } from 'components/Loader'\nimport { ExternalLink, Download } from 'react-feather'\nimport { ExternalLink as StyledExternalLink } from '../../theme/components'\nimport useTheme from 'hooks/useTheme'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport { formatDollarAmount, formatAmount } from 'utils/numbers'\nimport Percent from 'components/Percent'\nimport { ButtonPrimary, ButtonGray, SavedIcon } from 'components/Button'\nimport { DarkGreyCard, GreyCard, GreyBadge } from 'components/Card'\nimport { usePoolDatas, usePoolChartData, usePoolTransactions } from 'state/pools/hooks'\nimport LineChart from 'components/LineChart/alt'\nimport { unixToDate } from 'utils/date'\nimport { ToggleWrapper, ToggleElementFree } from 'components/Toggle/index'\nimport BarChart from 'components/BarChart/alt'\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\nimport TransactionTable from 'components/TransactionsTable'\nimport { useSavedPools } from 'state/user/hooks'\nimport DensityChart from 'components/DensityChart'\nimport { MonoSpace } from 'components/shared'\n\nconst ContentLayout = styled.div`\n  display: grid;\n  grid-template-columns: 300px 1fr;\n  grid-gap: 1em;\n\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr;\n  }\n`\n\nconst TokenButton = styled(GreyCard)`\n  padding: 8px 12px;\n  border-radius: 10px;\n  :hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst ResponsiveRow = styled(RowBetween)`\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    flex-direction: column;\n    align-items: flex-start;\n    row-gap: 24px;\n    width: 100%:\n  `};\n`\n\nenum ChartView {\n  TVL,\n  VOL,\n  PRICE,\n  DENSITY,\n}\n\nexport default function PoolPage({\n  match: {\n    params: { address },\n  },\n}: RouteComponentProps<{ address: string }>) {\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  // theming\n  const backgroundColor = useColor()\n  const theme = useTheme()\n\n  // token data\n  const poolData = usePoolDatas([address])[0]\n  const chartData = usePoolChartData(address)\n  const transactions = usePoolTransactions(address)\n\n  const [view, setView] = useState(ChartView.VOL)\n  const [latestValue, setLatestValue] = useState<number | undefined>()\n  const [valueLabel, setValueLabel] = useState<string | undefined>()\n\n  const formattedTvlData = useMemo(() => {\n    if (chartData) {\n      return chartData.map((day) => {\n        return {\n          time: unixToDate(day.date),\n          value: day.totalValueLockedUSD,\n        }\n      })\n    } else {\n      return []\n    }\n  }, [chartData])\n\n  const formattedVolumeData = useMemo(() => {\n    if (chartData) {\n      return chartData.map((day) => {\n        return {\n          time: unixToDate(day.date),\n          value: day.volumeUSD,\n        }\n      })\n    } else {\n      return []\n    }\n  }, [chartData])\n\n  //watchlist\n  const [savedPools, addSavedPool] = useSavedPools()\n\n  return (\n    <PageWrapper>\n      <ThemedBackground backgroundColor={backgroundColor} />\n      {poolData ? (\n        <AutoColumn gap=\"32px\">\n          <RowBetween>\n            <AutoRow gap=\"4px\">\n              <StyledInternalLink to=\"/\">\n                <TYPE.main>{`Home > `}</TYPE.main>\n              </StyledInternalLink>\n              <StyledInternalLink to=\"/pools\">\n                <TYPE.label>{` Pools `}</TYPE.label>\n              </StyledInternalLink>\n              <TYPE.main>{` > `}</TYPE.main>\n              <TYPE.label>{` ${poolData.token0.symbol} / ${poolData.token1.symbol} ${feeTierPercent(\n                poolData.feeTier\n              )} `}</TYPE.label>\n            </AutoRow>\n            <RowFixed gap=\"10px\" align=\"center\">\n              <SavedIcon fill={savedPools.includes(address)} onClick={() => addSavedPool(address)} />\n              <StyledExternalLink href={getEtherscanLink(1, address, 'address')}>\n                <ExternalLink stroke={theme.text2} size={'17px'} style={{ marginLeft: '12px' }} />\n              </StyledExternalLink>\n            </RowFixed>\n          </RowBetween>\n          <ResponsiveRow align=\"flex-end\">\n            <AutoColumn gap=\"lg\">\n              <RowFixed gap=\"4px\">\n                <DoubleCurrencyLogo address0={poolData.token0.address} address1={poolData.token1.address} size={24} />\n                <TYPE.label\n                  ml=\"8px\"\n                  mr=\"8px\"\n                  fontSize=\"24px\"\n                >{` ${poolData.token0.symbol} / ${poolData.token1.symbol} `}</TYPE.label>\n                <GreyBadge>{feeTierPercent(poolData.feeTier)}</GreyBadge>\n              </RowFixed>\n              <ResponsiveRow>\n                <StyledInternalLink to={'/tokens/' + poolData.token0.address}>\n                  <TokenButton>\n                    <RowFixed>\n                      <CurrencyLogo address={poolData.token0.address} size={'20px'} />\n                      <TYPE.label fontSize=\"16px\" ml=\"4px\" style={{ whiteSpace: 'nowrap' }} width={'fit-content'}>\n                        {`1 ${poolData.token0.symbol} =  ${formatAmount(poolData.token1Price, 4)} ${\n                          poolData.token1.symbol\n                        }`}\n                      </TYPE.label>\n                    </RowFixed>\n                  </TokenButton>\n                </StyledInternalLink>\n                <StyledInternalLink to={'/tokens/' + poolData.token1.address}>\n                  <TokenButton ml=\"10px\">\n                    <RowFixed>\n                      <CurrencyLogo address={poolData.token1.address} size={'20px'} />\n                      <TYPE.label fontSize=\"16px\" ml=\"4px\" style={{ whiteSpace: 'nowrap' }} width={'fit-content'}>\n                        {`1 ${poolData.token1.symbol} =  ${formatAmount(poolData.token0Price, 4)} ${\n                          poolData.token0.symbol\n                        }`}\n                      </TYPE.label>\n                    </RowFixed>\n                  </TokenButton>\n                </StyledInternalLink>\n              </ResponsiveRow>\n            </AutoColumn>\n            <AutoColumn gap=\"lg\">\n              <RowFixed>\n                <StyledExternalLink\n                  href={`https://wavax.org/#/add/${poolData.token0.address}/${poolData.token1.address}/${poolData.feeTier}`}\n                >\n                  <ButtonGray width=\"170px\" mr=\"12px\" style={{ height: '44px' }}>\n                    <RowBetween>\n                      <Download size={24} />\n                      <div style={{ display: 'flex', alignItems: 'center' }}>Add Liquidity</div>\n                    </RowBetween>\n                  </ButtonGray>\n                </StyledExternalLink>\n                <StyledExternalLink\n                  href={`https://wavax.org/#/swap?inputCurrency=${poolData.token0.address}&outputCurrency=${poolData.token1.address}`}\n                >\n                  <ButtonPrimary width=\"100px\" style={{ height: '44px' }}>\n                    Trade\n                  </ButtonPrimary>\n                </StyledExternalLink>\n              </RowFixed>\n            </AutoColumn>\n          </ResponsiveRow>\n          <ContentLayout>\n            <DarkGreyCard>\n              <AutoColumn gap=\"lg\">\n                <GreyCard padding=\"16px\">\n                  <AutoColumn gap=\"md\">\n                    <TYPE.main>Total Tokens Locked</TYPE.main>\n                    <RowBetween>\n                      <RowFixed>\n                        <CurrencyLogo address={poolData.token0.address} size={'20px'} />\n                        <TYPE.label fontSize=\"14px\" ml=\"8px\">\n                          {poolData.token0.symbol}\n                        </TYPE.label>\n                      </RowFixed>\n                      <TYPE.label fontSize=\"14px\">{formatAmount(poolData.tvlToken0)}</TYPE.label>\n                    </RowBetween>\n                    <RowBetween>\n                      <RowFixed>\n                        <CurrencyLogo address={poolData.token1.address} size={'20px'} />\n                        <TYPE.label fontSize=\"14px\" ml=\"8px\">\n                          {poolData.token1.symbol}\n                        </TYPE.label>\n                      </RowFixed>\n                      <TYPE.label fontSize=\"14px\">{formatAmount(poolData.tvlToken1)}</TYPE.label>\n                    </RowBetween>\n                  </AutoColumn>\n                </GreyCard>\n                <AutoColumn gap=\"4px\">\n                  <TYPE.main fontWeight={400}>TVL</TYPE.main>\n                  <TYPE.label fontSize=\"24px\">{formatDollarAmount(poolData.tvlUSD)}</TYPE.label>\n                  <Percent value={poolData.tvlUSDChange} />\n                </AutoColumn>\n                <AutoColumn gap=\"4px\">\n                  <TYPE.main fontWeight={400}>Volume 24h</TYPE.main>\n                  <TYPE.label fontSize=\"24px\">{formatDollarAmount(poolData.volumeUSD)}</TYPE.label>\n                  <Percent value={poolData.volumeUSDChange} />\n                </AutoColumn>\n                <AutoColumn gap=\"4px\">\n                  <TYPE.main fontWeight={400}>24h Fees</TYPE.main>\n                  <TYPE.label fontSize=\"24px\">\n                    {formatDollarAmount(poolData.volumeUSD * (poolData.feeTier / 1000000))}\n                  </TYPE.label>\n                </AutoColumn>\n              </AutoColumn>\n            </DarkGreyCard>\n            <DarkGreyCard>\n              <RowBetween align=\"flex-start\">\n                <AutoColumn>\n                  <TYPE.label fontSize=\"24px\" height=\"30px\">\n                    <MonoSpace>\n                      {latestValue\n                        ? formatDollarAmount(latestValue)\n                        : view === ChartView.VOL\n                        ? formatDollarAmount(formattedVolumeData[formattedVolumeData.length - 1]?.value)\n                        : view === ChartView.DENSITY\n                        ? ''\n                        : formatDollarAmount(formattedTvlData[formattedTvlData.length - 1]?.value)}{' '}\n                    </MonoSpace>\n                  </TYPE.label>\n                  <TYPE.main height=\"20px\" fontSize=\"12px\">\n                    {valueLabel ? <MonoSpace>{valueLabel}</MonoSpace> : ''}\n                  </TYPE.main>\n                </AutoColumn>\n                <ToggleWrapper width=\"200px\">\n                  <ToggleElementFree\n                    isActive={view === ChartView.VOL}\n                    fontSize=\"12px\"\n                    onClick={() => (view === ChartView.VOL ? setView(ChartView.TVL) : setView(ChartView.VOL))}\n                  >\n                    Volume\n                  </ToggleElementFree>\n                  <ToggleElementFree\n                    isActive={view === ChartView.TVL}\n                    fontSize=\"12px\"\n                    onClick={() => (view === ChartView.TVL ? setView(ChartView.DENSITY) : setView(ChartView.TVL))}\n                  >\n                    TVL\n                  </ToggleElementFree>\n                  <ToggleElementFree\n                    isActive={view === ChartView.DENSITY}\n                    fontSize=\"12px\"\n                    onClick={() => (view === ChartView.DENSITY ? setView(ChartView.VOL) : setView(ChartView.DENSITY))}\n                  >\n                    Liquidity\n                  </ToggleElementFree>\n                </ToggleWrapper>\n              </RowBetween>\n              {view === ChartView.TVL ? (\n                <LineChart\n                  data={formattedTvlData}\n                  setLabel={setValueLabel}\n                  color={backgroundColor}\n                  minHeight={340}\n                  setValue={setLatestValue}\n                  value={latestValue}\n                  label={valueLabel}\n                />\n              ) : view === ChartView.VOL ? (\n                <BarChart\n                  data={formattedVolumeData}\n                  color={backgroundColor}\n                  minHeight={340}\n                  setValue={setLatestValue}\n                  setLabel={setValueLabel}\n                  value={latestValue}\n                  label={valueLabel}\n                />\n              ) : (\n                <DensityChart address={address} />\n              )}\n            </DarkGreyCard>\n          </ContentLayout>\n          <TYPE.main fontSize=\"24px\">Transactions</TYPE.main>\n          <DarkGreyCard>\n            {transactions ? <TransactionTable transactions={transactions} /> : <LocalLoader fill={false} />}\n          </DarkGreyCard>\n        </AutoColumn>\n      ) : (\n        <Loader />\n      )}\n    </PageWrapper>\n  )\n}\n","import React, { Suspense, useState, useEffect } from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport GoogleAnalyticsReporter from '../components/analytics/GoogleAnalyticsReporter'\r\nimport Header from '../components/Header'\r\nimport URLWarning from '../components/Header/URLWarning'\r\nimport Popups from '../components/Popups'\r\nimport DarkModeQueryParamReader from '../theme/DarkModeQueryParamReader'\r\nimport Home from './Home'\r\nimport Protocol from './Protocol'\r\nimport PoolsOverview from './Pool/PoolsOverview'\r\nimport TokensOverview from './Token/TokensOverview'\r\nimport TopBar from 'components/Header/TopBar'\r\nimport { RedirectInvalidToken } from './Token/redirects'\r\nimport { LocalLoader } from 'components/Loader'\r\nimport PoolPage from './Pool/PoolPage'\r\nimport { ExternalLink, HideMedium, TYPE } from 'theme'\r\nimport { useSubgraphStatus } from 'state/application/hooks'\r\nimport { DarkGreyCard } from 'components/Card'\r\n\r\nconst AppWrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: flex-start;\r\n  overflow-x: hidden;\r\n  min-height: 100vh;\r\n`\r\n\r\nconst HeaderWrapper = styled.div`\r\n  ${({ theme }) => theme.flexColumnNoWrap}\r\n  width: 100%;\r\n  position: fixed;\r\n  justify-content: space-between;\r\n  z-index: 2;\r\n`\r\n\r\nconst BodyWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding-top: 40px;\r\n  margin-top: 100px;\r\n  align-items: center;\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  z-index: 10;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    padding-top: 2rem;\r\n    margin-top: 100px;\r\n  `};\r\n\r\n  z-index: 1;\r\n\r\n  > * {\r\n    max-width: 1200px;\r\n  }\r\n`\r\n\r\nconst Marginer = styled.div`\r\n  margin-top: 5rem;\r\n`\r\n\r\nexport default function App() {\r\n  // pretend load buffer\r\n  const [loading, setLoading] = useState(true)\r\n  useEffect(() => {\r\n    setTimeout(() => setLoading(false), 1300)\r\n  }, [])\r\n\r\n  // subgraph health\r\n  const [subgraphStatus] = useSubgraphStatus()\r\n\r\n  return (\r\n    <Suspense fallback={null}>\r\n      <Route component={GoogleAnalyticsReporter} />\r\n      <Route component={DarkModeQueryParamReader} />\r\n      {loading ? (\r\n        <LocalLoader fill={true} />\r\n      ) : subgraphStatus.available === false ? (\r\n        <AppWrapper>\r\n          <BodyWrapper>\r\n            <DarkGreyCard style={{ maxWidth: '340px' }}>\r\n              <TYPE.label>\r\n                The Graph network which provides data for this site is temporarily down. Check status{' '}\r\n                <ExternalLink href=\"https://thegraph.com/explorer/subgraph/ianlapham/uniswap-v3-testing\">\r\n                  here.\r\n                </ExternalLink>\r\n              </TYPE.label>\r\n            </DarkGreyCard>\r\n          </BodyWrapper>\r\n        </AppWrapper>\r\n      ) : (\r\n        <AppWrapper>\r\n          <URLWarning />\r\n          <HeaderWrapper>\r\n            <HideMedium>\r\n              <TopBar />\r\n            </HideMedium>\r\n            <Header />\r\n          </HeaderWrapper>\r\n          <BodyWrapper>\r\n            <Popups />\r\n            <Switch>\r\n              <Route exact strict path=\"/\" component={Home} />\r\n              <Route exact strict path=\"/protocol\" component={Protocol} />\r\n              <Route exact strict path=\"/pools\" component={PoolsOverview} />\r\n              <Route exact strict path=\"/tokens\" component={TokensOverview} />\r\n              <Route exact strict path=\"/tokens/:address\" component={RedirectInvalidToken} />\r\n              <Route exact strict path=\"/pools/:address\" component={PoolPage} />\r\n            </Switch>\r\n            <Marginer />\r\n          </BodyWrapper>\r\n        </AppWrapper>\r\n      )}\r\n    </Suspense>\r\n  )\r\n}\r\n","import { createReducer, nanoid } from '@reduxjs/toolkit'\nimport {\n  addPopup,\n  PopupContent,\n  removePopup,\n  updateBlockNumber,\n  updateSubgraphStatus,\n  ApplicationModal,\n  setOpenModal,\n} from './actions'\n\ntype PopupList = Array<{ key: string; show: boolean; content: PopupContent; removeAfterMs: number | null }>\n\nexport interface ApplicationState {\n  readonly blockNumber: { readonly [chainId: number]: number }\n  readonly popupList: PopupList\n  readonly openModal: ApplicationModal | null\n  readonly subgraphStatus: {\n    available: boolean | null\n    syncedBlock: number | undefined\n  }\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n  popupList: [],\n  openModal: null,\n  subgraphStatus: {\n    available: null,\n    syncedBlock: undefined,\n  },\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateBlockNumber, (state, action) => {\n      const { chainId, blockNumber } = action.payload\n      if (typeof state.blockNumber[chainId] !== 'number') {\n        state.blockNumber[chainId] = blockNumber\n      } else {\n        state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n      }\n    })\n    .addCase(setOpenModal, (state, action) => {\n      state.openModal = action.payload\n    })\n    .addCase(addPopup, (state, { payload: { content, key, removeAfterMs = 15000 } }) => {\n      state.popupList = (key ? state.popupList.filter((popup) => popup.key !== key) : state.popupList).concat([\n        {\n          key: key || nanoid(),\n          show: true,\n          content,\n          removeAfterMs,\n        },\n      ])\n    })\n    .addCase(removePopup, (state, { payload: { key } }) => {\n      state.popupList.forEach((p) => {\n        if (p.key === key) {\n          p.show = false\n        }\n      })\n    })\n    .addCase(updateSubgraphStatus, (state, { payload: { available, syncedBlock } }) => {\n      state.subgraphStatus = {\n        available,\n        syncedBlock,\n      }\n    })\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n","import { createReducer } from '@reduxjs/toolkit'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateMatchesDarkMode,\n  updateUserDarkMode,\n  toggleURLWarning,\n  addSavedToken,\n  addSavedPool,\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userDarkMode: boolean | null // the user's choice for dark mode or light mode\n  matchesDarkMode: boolean // whether the dark mode media query matches\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  savedTokens: string[]\n  savedPools: string[]\n\n  timestamp: number\n  URLWarningVisible: boolean\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userDarkMode: true,\n  matchesDarkMode: false,\n  tokens: {},\n  pairs: {},\n  savedTokens: [],\n  savedPools: [],\n  timestamp: currentTimestamp(),\n  URLWarningVisible: true,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserDarkMode, (state, action) => {\n      state.userDarkMode = action.payload.userDarkMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateMatchesDarkMode, (state, action) => {\n      state.matchesDarkMode = action.payload.matchesDarkMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSavedToken, (state, { payload: { address } }) => {\n      if (!state.savedTokens || !state.savedTokens.includes(address)) {\n        const newTokens = state.savedTokens ?? []\n        newTokens.push(address)\n        state.savedTokens = newTokens\n      }\n      // toggle for delete\n      else if (state.savedTokens && state.savedTokens.includes(address)) {\n        const newTokens = state.savedTokens.filter((x) => x !== address)\n        state.savedTokens = newTokens\n      }\n    })\n    .addCase(addSavedPool, (state, { payload: { address } }) => {\n      if (!state.savedPools || !state.savedPools.includes(address)) {\n        const newPools = state.savedPools ?? []\n        newPools.push(address)\n        state.savedPools = newPools\n      } else if (state.savedPools && state.savedPools.includes(address)) {\n        const newPools = state.savedPools.filter((x) => x !== address)\n        state.savedPools = newPools\n      }\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const chainId = serializedPair.token0.chainId\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(toggleURLWarning, (state) => {\n      state.URLWarningVisible = !state.URLWarningVisible\n    })\n)\n","// used to mark unsupported tokens, these are hosted lists of unsupported tokens\n/**\n * @TODO add list from blockchain association\n */\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// const COMPOUND_LIST = 'https://raw.githubusercontent.com/compound-finance/token-list/master/compound.tokenlist.json'\n// const UMA_LIST = 'https://umaproject.org/uma.tokenlist.json'\n// const AAVE_LIST = 'tokenlist.aave.eth'\n// const SYNTHETIX_LIST = 'synths.snx.eth'\n// const WRAPPED_LIST = 'wrapped.tokensoft.eth'\n// const SET_LIST = 'https://raw.githubusercontent.com/SetProtocol/uniswap-tokenlist/main/set.tokenlist.json'\n// const OPYN_LIST = 'https://raw.githubusercontent.com/opynfinance/opyn-tokenlist/master/opyn-v1.tokenlist.json'\n// const ROLL_LIST = 'https://app.tryroll.com/tokens.json'\n// const COINGECKO_LIST = 'https://tokens.coingecko.com/uniswap/all.json'\n// const CMC_ALL_LIST = 'defi.cmc.eth'\n// const CMC_STABLECOIN = 'stablecoin.cmc.eth'\n// const KLEROS_LIST = 't2crtokens.eth'\nconst AVA_AEB_LIST = 'https://raw.githubusercontent.com/pangolindex/tokenlists/main/aeb.tokenlist.json'\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  AVA_AEB_LIST,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = [AVA_AEB_LIST]\n","import { DEFAULT_ACTIVE_LIST_URLS } from './../../constants/lists'\nimport { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_LIST_OF_LISTS } from '../../constants/lists'\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current: current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set()\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    })\n)\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners'\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners'\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults'\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      }\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    })\n)\n","import { currentTimestamp } from './../../utils/index'\nimport { updateProtocolData, updateChartData, updateTransactions } from './actions'\nimport { createReducer } from '@reduxjs/toolkit'\nimport { ChartDayData, Transaction } from 'types'\n\nexport interface ProtocolData {\n  // volume\n  volumeUSD: number\n  volumeUSDChange: number\n\n  // in range liquidity\n  tvlUSD: number\n  tvlUSDChange: number\n\n  // fees\n  feesUSD: number\n  feeChange: number\n\n  // transactions\n  txCount: number\n  txCountChange: number\n}\n\nexport interface ProtocolState {\n  // timestamp for last updated fetch\n  readonly lastUpdated: number | undefined\n\n  // overview data\n  readonly data: ProtocolData | undefined\n\n  readonly chartData: ChartDayData[] | undefined\n\n  readonly transactions: Transaction[] | undefined\n}\n\nexport const initialState: ProtocolState = {\n  data: undefined,\n  chartData: undefined,\n  transactions: undefined,\n  lastUpdated: undefined,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateProtocolData, (state, { payload: { protocolData } }) => {\n      state.data = protocolData\n      // mark when last updated\n      state.lastUpdated = currentTimestamp()\n    })\n    .addCase(updateChartData, (state, { payload: { chartData } }) => {\n      state.chartData = chartData\n    })\n    .addCase(updateTransactions, (state, { payload: { transactions } }) => {\n      state.transactions = transactions\n    })\n)\n","import { currentTimestamp } from './../../utils/index'\nimport {\n  updateTokenData,\n  addTokenKeys,\n  addPoolAddresses,\n  updateChartData,\n  updatePriceData,\n  updateTransactions,\n} from './actions'\nimport { createReducer } from '@reduxjs/toolkit'\nimport { PriceChartEntry, Transaction } from 'types'\n\nexport type TokenData = {\n  // token is in some pool on uniswap\n  exists: boolean\n\n  // basic token info\n  name: string\n  symbol: string\n  address: string\n\n  // volume\n  volumeUSD: number\n  volumeUSDChange: number\n  volumeUSDWeek: number\n  txCount: number\n\n  //fees\n  feesUSD: number\n\n  // tvl\n  tvlToken: number\n  tvlUSD: number\n  tvlUSDChange: number\n\n  priceUSD: number\n  priceUSDChange: number\n  priceUSDChangeWeek: number\n}\n\nexport interface TokenChartEntry {\n  date: number\n  volumeUSD: number\n  totalValueLockedUSD: number\n}\n\nexport interface TokensState {\n  // analytics data from\n  byAddress: {\n    [address: string]: {\n      data: TokenData | undefined\n      poolAddresses: string[] | undefined\n      chartData: TokenChartEntry[] | undefined\n      priceData: {\n        oldestFetchedTimestamp?: number | undefined\n        [secondsInterval: number]: PriceChartEntry[] | undefined\n      }\n      transactions: Transaction[] | undefined\n      lastUpdated: number | undefined\n    }\n  }\n}\n\nexport const initialState: TokensState = { byAddress: {} }\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateTokenData, (state, { payload: { tokens } }) => {\n      tokens.map(\n        (tokenData) =>\n          (state.byAddress[tokenData.address] = {\n            ...state.byAddress[tokenData.address],\n            data: tokenData,\n            lastUpdated: currentTimestamp(),\n          })\n      )\n    }) // add address to byAddress keys if not included yet\n    .addCase(addTokenKeys, (state, { payload: { tokenAddresses } }) => {\n      tokenAddresses.map((address) => {\n        if (!state.byAddress[address]) {\n          state.byAddress[address] = {\n            poolAddresses: undefined,\n            data: undefined,\n            chartData: undefined,\n            priceData: {},\n            transactions: undefined,\n            lastUpdated: undefined,\n          }\n        }\n      })\n    })\n    // add list of pools the token is included in\n    .addCase(addPoolAddresses, (state, { payload: { tokenAddress, poolAddresses } }) => {\n      state.byAddress[tokenAddress] = { ...state.byAddress[tokenAddress], poolAddresses }\n    })\n    // add list of pools the token is included in\n    .addCase(updateChartData, (state, { payload: { tokenAddress, chartData } }) => {\n      state.byAddress[tokenAddress] = { ...state.byAddress[tokenAddress], chartData }\n    })\n    // add list of pools the token is included in\n    .addCase(updateTransactions, (state, { payload: { tokenAddress, transactions } }) => {\n      state.byAddress[tokenAddress] = { ...state.byAddress[tokenAddress], transactions }\n    })\n    // update historical price volume based on interval size\n    .addCase(\n      updatePriceData,\n      (state, { payload: { tokenAddress, secondsInterval, priceData, oldestFetchedTimestamp } }) => {\n        state.byAddress[tokenAddress] = {\n          ...state.byAddress[tokenAddress],\n          priceData: {\n            ...state.byAddress[tokenAddress].priceData,\n            [secondsInterval]: priceData,\n            oldestFetchedTimestamp,\n          },\n        }\n      }\n    )\n)\n","import { currentTimestamp } from './../../utils/index'\nimport { updatePoolData, addPoolKeys, updatePoolChartData, updatePoolTransactions, updateTickData } from './actions'\nimport { createReducer } from '@reduxjs/toolkit'\nimport { SerializedToken } from 'state/user/actions'\nimport { Transaction } from 'types'\nimport { PoolTickData } from 'data/pools/tickData'\n\nexport interface Pool {\n  address: string\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport interface PoolData {\n  // basic token info\n  address: string\n  feeTier: number\n\n  token0: {\n    name: string\n    symbol: string\n    address: string\n    decimals: number\n    derivedETH: number\n  }\n\n  token1: {\n    name: string\n    symbol: string\n    address: string\n    decimals: number\n    derivedETH: number\n  }\n\n  // for tick math\n  liquidity: number\n  sqrtPrice: number\n  tick: number\n\n  // volume\n  volumeUSD: number\n  volumeUSDChange: number\n  volumeUSDWeek: number\n\n  // liquidity\n  tvlUSD: number\n  tvlUSDChange: number\n\n  // prices\n  token0Price: number\n  token1Price: number\n\n  // token amounts\n  tvlToken0: number\n  tvlToken1: number\n}\n\nexport type PoolChartEntry = {\n  date: number\n  volumeUSD: number\n  totalValueLockedUSD: number\n}\n\nexport interface PoolsState {\n  // analytics data from\n  byAddress: {\n    [address: string]: {\n      data: PoolData | undefined\n      chartData: PoolChartEntry[] | undefined\n      transactions: Transaction[] | undefined\n      lastUpdated: number | undefined\n      tickData: PoolTickData | undefined\n    }\n  }\n}\n\nexport const initialState: PoolsState = { byAddress: {} }\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updatePoolData, (state, { payload: { pools } }) => {\n      pools.map(\n        (poolData) =>\n          (state.byAddress[poolData.address] = {\n            ...state.byAddress[poolData.address],\n            data: poolData,\n            lastUpdated: currentTimestamp(),\n          })\n      )\n    })\n    // add address to byAddress keys if not included yet\n    .addCase(addPoolKeys, (state, { payload: { poolAddresses } }) => {\n      poolAddresses.map((address) => {\n        if (!state.byAddress[address]) {\n          state.byAddress[address] = {\n            data: undefined,\n            chartData: undefined,\n            transactions: undefined,\n            lastUpdated: undefined,\n            tickData: undefined,\n          }\n        }\n      })\n    })\n    .addCase(updatePoolChartData, (state, { payload: { poolAddress, chartData } }) => {\n      state.byAddress[poolAddress] = { ...state.byAddress[poolAddress], chartData: chartData }\n    })\n    .addCase(updatePoolTransactions, (state, { payload: { poolAddress, transactions } }) => {\n      state.byAddress[poolAddress] = { ...state.byAddress[poolAddress], transactions }\n    })\n    .addCase(updateTickData, (state, { payload: { poolAddress, tickData } }) => {\n      state.byAddress[poolAddress] = { ...state.byAddress[poolAddress], tickData }\n    })\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\n\nimport application from './application/reducer'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport lists from './lists/reducer'\nimport multicall from './multicall/reducer'\nimport protocol from './protocol/reducer'\nimport tokens from './tokens/reducer'\nimport pools from './pools/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'lists']\n\nconst store = configureStore({\n  reducer: {\n    application,\n    user,\n    multicall,\n    lists,\n    protocol,\n    tokens,\n    pools,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: false, immutableCheck: false }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\nexport default store\n\nexport type AppState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from '../index'\nimport { updateMatchesDarkMode } from './actions'\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n\n  // keep dark mode in sync with the system\n  useEffect(() => {\n    const darkHandler = (match: MediaQueryListEvent) => {\n      dispatch(updateMatchesDarkMode({ matchesDarkMode: match.matches }))\n    }\n\n    const match = window?.matchMedia('(prefers-color-scheme: dark)')\n    dispatch(updateMatchesDarkMode({ matchesDarkMode: match.matches }))\n\n    if (match?.addListener) {\n      match?.addListener(darkHandler)\n    } else if (match?.addEventListener) {\n      match?.addEventListener('change', darkHandler)\n    }\n\n    return () => {\n      if (match?.removeListener) {\n        match?.removeListener(darkHandler)\n      } else if (match?.removeEventListener) {\n        match?.removeEventListener('change', darkHandler)\n      }\n    }\n  }, [dispatch])\n\n  return null\n}\n","import { getPercentChange } from '../../utils/data'\nimport { ProtocolData } from '../../state/protocol/reducer'\nimport gql from 'graphql-tag'\nimport { useQuery } from '@apollo/client'\nimport { useDeltaTimestamps } from 'utils/queries'\nimport { useBlocksFromTimestamps } from 'hooks/useBlocksFromTimestamps'\nimport { useMemo } from 'react'\n\nexport const GLOBAL_DATA = (block?: string) => {\n  const queryString = ` query uniswapFactories {\n      factories(\n       ${block ? `block: { number: ${block}}` : ``} \n       first: 1) {\n        txCount\n        totalVolumeUSD\n        totalFeesUSD\n        totalValueLockedUSD\n      }\n    }`\n  return gql(queryString)\n}\n\ninterface GlobalResponse {\n  factories: {\n    txCount: string\n    totalVolumeUSD: string\n    totalFeesUSD: string\n    totalValueLockedUSD: string\n  }[]\n}\n\n// mocked\nexport function useFetchProtocolData(): {\n  loading: boolean\n  error: boolean\n  data: ProtocolData | undefined\n} {\n  // get blocks from historic timestamps\n  const [t24, t48] = useDeltaTimestamps()\n  const { blocks, error: blockError } = useBlocksFromTimestamps([t24, t48])\n  const [block24, block48] = blocks ?? []\n\n  // fetch all data\n  const { loading, error, data } = useQuery<GlobalResponse>(GLOBAL_DATA())\n\n  const { loading: loading24, error: error24, data: data24 } = useQuery<GlobalResponse>(\n    GLOBAL_DATA(block24?.number ?? undefined)\n  )\n  const { loading: loading48, error: error48, data: data48 } = useQuery<GlobalResponse>(\n    GLOBAL_DATA(block48?.number ?? undefined)\n  )\n\n  const anyError = Boolean(error || error24 || error48 || blockError)\n  const anyLoading = Boolean(loading || loading24 || loading48)\n\n  const parsed = data?.factories?.[0]\n  const parsed24 = data24?.factories?.[0]\n  const parsed48 = data48?.factories?.[0]\n\n  const formattedData: ProtocolData | undefined = useMemo(() => {\n    if (anyError || anyLoading || !parsed || !blocks) {\n      return undefined\n    }\n\n    // volume data\n    const volumeUSD =\n      parsed && parsed24\n        ? parseFloat(parsed.totalVolumeUSD) - parseFloat(parsed24.totalVolumeUSD)\n        : parseFloat(parsed.totalVolumeUSD)\n\n    const volumeOneWindowAgo =\n      parsed24 && parsed48 ? parseFloat(parsed24.totalVolumeUSD) - parseFloat(parsed48.totalVolumeUSD) : undefined\n\n    const volumeUSDChange =\n      volumeUSD && volumeOneWindowAgo ? ((volumeUSD - volumeOneWindowAgo) / volumeOneWindowAgo) * 100 : 0\n\n    // total value locked\n    const tvlUSDChange = getPercentChange(parsed?.totalValueLockedUSD, parsed24?.totalValueLockedUSD)\n\n    // 24H transactions\n    const txCount =\n      parsed && parsed24 ? parseFloat(parsed.txCount) - parseFloat(parsed24.txCount) : parseFloat(parsed.txCount)\n\n    const txCountOneWindowAgo =\n      parsed24 && parsed48 ? parseFloat(parsed24.txCount) - parseFloat(parsed48.txCount) : undefined\n\n    const txCountChange =\n      txCount && txCountOneWindowAgo ? getPercentChange(txCount.toString(), txCountOneWindowAgo.toString()) : 0\n\n    const feesOneWindowAgo =\n      parsed24 && parsed48 ? parseFloat(parsed24.totalFeesUSD) - parseFloat(parsed48.totalFeesUSD) : undefined\n\n    const feesUSD =\n      parsed && parsed24\n        ? parseFloat(parsed.totalFeesUSD) - parseFloat(parsed24.totalFeesUSD)\n        : parseFloat(parsed.totalFeesUSD)\n\n    const feeChange =\n      feesUSD && feesOneWindowAgo ? getPercentChange(feesUSD.toString(), feesOneWindowAgo.toString()) : 0\n\n    return {\n      volumeUSD,\n      volumeUSDChange: typeof volumeUSDChange === 'number' ? volumeUSDChange : 0,\n      tvlUSD: parseFloat(parsed.totalValueLockedUSD),\n      tvlUSDChange,\n      feesUSD,\n      feeChange,\n      txCount,\n      txCountChange,\n    }\n  }, [anyError, anyLoading, blocks, parsed, parsed24, parsed48])\n\n  return {\n    loading: anyLoading,\n    error: anyError,\n    data: formattedData,\n  }\n}\n","import { ChartDayData } from '../../types/index'\nimport { useState, useEffect } from 'react'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\nimport gql from 'graphql-tag'\nimport { client } from 'apollo/client'\n\n// format dayjs with the libraries that we need\ndayjs.extend(utc)\ndayjs.extend(weekOfYear)\nconst ONE_DAY_UNIX = 24 * 60 * 60\n\nconst GLOBAL_CHART = gql`\n  query uniswapDayDatas($startTime: Int!, $skip: Int!) {\n    uniswapDayDatas(first: 1000, skip: $skip, where: { date_gt: $startTime }, orderBy: date, orderDirection: asc) {\n      id\n      date\n      volumeUSD\n      tvlUSD\n    }\n  }\n`\n\ninterface ChartResults {\n  uniswapDayDatas: {\n    date: number\n    volumeUSD: string\n    tvlUSD: string\n  }[]\n}\n\nasync function fetchChartData() {\n  let data: {\n    date: number\n    volumeUSD: string\n    tvlUSD: string\n  }[] = []\n  const startTimestamp = 1619170975\n  const endTimestamp = dayjs.utc().unix()\n\n  let error = false\n  let skip = 0\n  let allFound = false\n\n  try {\n    while (!allFound) {\n      const { data: chartResData, error, loading } = await client.query<ChartResults>({\n        query: GLOBAL_CHART,\n        variables: {\n          startTime: startTimestamp,\n          skip,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      if (!loading) {\n        skip += 1000\n        if (chartResData.uniswapDayDatas.length < 1000 || error) {\n          allFound = true\n        }\n        if (chartResData) {\n          data = data.concat(chartResData.uniswapDayDatas)\n        }\n      }\n    }\n  } catch {\n    error = true\n  }\n\n  if (data) {\n    const formattedExisting = data.reduce((accum: { [date: number]: ChartDayData }, dayData) => {\n      const roundedDate = parseInt((dayData.date / ONE_DAY_UNIX).toFixed(0))\n      accum[roundedDate] = {\n        date: dayData.date,\n        volumeUSD: parseFloat(dayData.volumeUSD),\n        tvlUSD: parseFloat(dayData.tvlUSD),\n      }\n      return accum\n    }, {})\n\n    const firstEntry = formattedExisting[parseInt(Object.keys(formattedExisting)[0])]\n\n    // fill in empty days ( there will be no day datas if no trades made that day )\n    let timestamp = firstEntry?.date ?? startTimestamp\n    let latestTvl = firstEntry?.tvlUSD ?? 0\n    while (timestamp < endTimestamp - ONE_DAY_UNIX) {\n      const nextDay = timestamp + ONE_DAY_UNIX\n      const currentDayIndex = parseInt((nextDay / ONE_DAY_UNIX).toFixed(0))\n      if (!Object.keys(formattedExisting).includes(currentDayIndex.toString())) {\n        formattedExisting[currentDayIndex] = {\n          date: nextDay,\n          volumeUSD: 0,\n          tvlUSD: latestTvl,\n        }\n      } else {\n        latestTvl = formattedExisting[currentDayIndex].tvlUSD\n      }\n      timestamp = nextDay\n    }\n\n    const dateMap = Object.keys(formattedExisting).map((key) => {\n      return formattedExisting[parseInt(key)]\n    })\n\n    return {\n      data: dateMap,\n      error: false,\n    }\n  } else {\n    return {\n      data: undefined,\n      error,\n    }\n  }\n}\n\n/**\n * Fetch historic chart data\n */\nexport function useFetchGlobalChartData(): {\n  error: boolean\n  data: ChartDayData[] | undefined\n} {\n  const [data, setData] = useState<ChartDayData[] | undefined>()\n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n    async function fetch() {\n      const { data, error } = await fetchChartData()\n      if (data && !error) {\n        setData(data)\n      } else if (error) {\n        setError(true)\n      }\n    }\n    if (!data && !error) {\n      fetch()\n    }\n  }, [data, error])\n\n  return {\n    error,\n    data,\n  }\n}\n","import { client } from 'apollo/client'\nimport gql from 'graphql-tag'\nimport { Transaction, TransactionType } from 'types'\nimport { formatTokenSymbol } from 'utils/tokens'\n\nconst GLOBAL_TRANSACTIONS = gql`\n  query transactions {\n    transactions(first: 500, orderBy: timestamp, orderDirection: desc) {\n      id\n      timestamp\n      mints {\n        pool {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        owner\n        sender\n        origin\n        amount0\n        amount1\n        amountUSD\n      }\n      swaps {\n        pool {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        origin\n        amount0\n        amount1\n        amountUSD\n      }\n      burns {\n        pool {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        owner\n        origin\n        amount0\n        amount1\n        amountUSD\n      }\n    }\n  }\n`\n\ntype TransactionEntry = {\n  timestamp: string\n  id: string\n  mints: {\n    pool: {\n      token0: {\n        id: string\n        symbol: string\n      }\n      token1: {\n        id: string\n        symbol: string\n      }\n    }\n    origin: string\n    amount0: string\n    amount1: string\n    amountUSD: string\n  }[]\n  swaps: {\n    pool: {\n      token0: {\n        id: string\n        symbol: string\n      }\n      token1: {\n        id: string\n        symbol: string\n      }\n    }\n    origin: string\n    amount0: string\n    amount1: string\n    amountUSD: string\n  }[]\n  burns: {\n    pool: {\n      token0: {\n        id: string\n        symbol: string\n      }\n      token1: {\n        id: string\n        symbol: string\n      }\n    }\n    owner: string\n    origin: string\n    amount0: string\n    amount1: string\n    amountUSD: string\n  }[]\n}\n\ninterface TransactionResults {\n  transactions: TransactionEntry[]\n}\n\nexport async function fetchTopTransactions(): Promise<Transaction[] | undefined> {\n  try {\n    const { data, error, loading } = await client.query<TransactionResults>({\n      query: GLOBAL_TRANSACTIONS,\n      fetchPolicy: 'network-only',\n    })\n\n    if (error || loading || !data) {\n      return undefined\n    }\n\n    const formatted = data.transactions.reduce((accum: Transaction[], t: TransactionEntry) => {\n      const mintEntries = t.mints.map((m) => {\n        return {\n          type: TransactionType.MINT,\n          hash: t.id,\n          timestamp: t.timestamp,\n          sender: m.origin,\n          token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\n          token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\n          token0Address: m.pool.token0.id,\n          token1Address: m.pool.token1.id,\n          amountUSD: parseFloat(m.amountUSD),\n          amountToken0: parseFloat(m.amount0),\n          amountToken1: parseFloat(m.amount1),\n        }\n      })\n      const burnEntries = t.burns.map((m) => {\n        return {\n          type: TransactionType.BURN,\n          hash: t.id,\n          timestamp: t.timestamp,\n          sender: m.origin,\n          token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\n          token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\n          token0Address: m.pool.token0.id,\n          token1Address: m.pool.token1.id,\n          amountUSD: parseFloat(m.amountUSD),\n          amountToken0: parseFloat(m.amount0),\n          amountToken1: parseFloat(m.amount1),\n        }\n      })\n\n      const swapEntries = t.swaps.map((m) => {\n        return {\n          hash: t.id,\n          type: TransactionType.SWAP,\n          timestamp: t.timestamp,\n          sender: m.origin,\n          token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\n          token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\n          token0Address: m.pool.token0.id,\n          token1Address: m.pool.token1.id,\n          amountUSD: parseFloat(m.amountUSD),\n          amountToken0: parseFloat(m.amount0),\n          amountToken1: parseFloat(m.amount1),\n        }\n      })\n      accum = [...accum, ...mintEntries, ...burnEntries, ...swapEntries]\n      return accum\n    }, [])\n\n    return formatted\n  } catch {\n    return undefined\n  }\n}\n","import { useProtocolData, useProtocolChartData, useProtocolTransactions } from './hooks'\nimport { useEffect } from 'react'\nimport { useFetchProtocolData } from 'data/protocol/overview'\nimport { useFetchGlobalChartData } from 'data/protocol/chart'\nimport { fetchTopTransactions } from 'data/protocol/transactions'\n\nexport default function Updater(): null {\n  const [protocolData, updateProtocolData] = useProtocolData()\n  const { data: fetchedProtocolData, error, loading } = useFetchProtocolData()\n\n  const [chartData, updateChartData] = useProtocolChartData()\n  const { data: fetchedChartData, error: chartError } = useFetchGlobalChartData()\n\n  const [transactions, updateTransactions] = useProtocolTransactions()\n\n  // update overview data if available and not set\n  useEffect(() => {\n    if (protocolData === undefined && fetchedProtocolData && !loading && !error) {\n      updateProtocolData(fetchedProtocolData)\n    }\n  }, [error, fetchedProtocolData, loading, protocolData, updateProtocolData])\n\n  // update global chart data if available and not set\n  useEffect(() => {\n    if (chartData === undefined && fetchedChartData && !chartError) {\n      updateChartData(fetchedChartData)\n    }\n  }, [chartData, chartError, fetchedChartData, updateChartData])\n\n  useEffect(() => {\n    async function fetch() {\n      const data = await fetchTopTransactions()\n      if (data) {\n        updateTransactions(data)\n      }\n    }\n    if (!transactions) {\n      fetch()\n    }\n  }, [transactions, updateTransactions])\n\n  return null\n}\n","import { useMemo } from 'react'\nimport { useQuery } from '@apollo/client'\nimport gql from 'graphql-tag'\n\nexport const TOP_TOKENS = gql`\n  query topPools {\n    tokens(first: 50, orderBy: totalValueLockedUSD, orderDirection: desc) {\n      id\n    }\n  }\n`\n\ninterface TopTokensResponse {\n  tokens: {\n    id: string\n  }[]\n}\n\n/**\n * Fetch top addresses by volume\n */\nexport function useTopTokenAddresses(): {\n  loading: boolean\n  error: boolean\n  addresses: string[] | undefined\n} {\n  const { loading, error, data } = useQuery<TopTokensResponse>(TOP_TOKENS)\n\n  const formattedData = useMemo(() => {\n    if (data) {\n      return data.tokens.map((t) => t.id)\n    } else {\n      return undefined\n    }\n  }, [data])\n\n  return {\n    loading: loading,\n    error: Boolean(error),\n    addresses: formattedData,\n  }\n}\n","import { useAllTokenData, useUpdateTokenData, useAddTokenKeys } from './hooks'\nimport { useEffect, useMemo } from 'react'\nimport { useTopTokenAddresses } from '../../data/tokens/topTokens'\nimport { useFetchedTokenDatas } from 'data/tokens/tokenData'\n\nexport default function Updater(): null {\n  // updaters\n  const updateTokenDatas = useUpdateTokenData()\n  const addTokenKeys = useAddTokenKeys()\n\n  // intitial data\n  const allTokenData = useAllTokenData()\n  const { loading, error, addresses } = useTopTokenAddresses()\n\n  // add top pools on first load\n  useEffect(() => {\n    if (addresses && !error && !loading) {\n      addTokenKeys(addresses)\n    }\n  }, [addTokenKeys, addresses, error, loading])\n\n  // detect for which addresses we havent loaded token data yet\n  const unfetchedTokenAddresses = useMemo(() => {\n    return Object.keys(allTokenData).reduce((accum: string[], key) => {\n      const tokenData = allTokenData[key]\n      if (!tokenData.data || !tokenData.lastUpdated) {\n        accum.push(key)\n      }\n      return accum\n    }, [])\n  }, [allTokenData])\n\n  // update unloaded pool entries with fetched data\n  const { error: tokenDataError, loading: tokenDataLoading, data: tokenDatas } = useFetchedTokenDatas(\n    unfetchedTokenAddresses\n  )\n  useEffect(() => {\n    if (tokenDatas && !tokenDataError && !tokenDataLoading) {\n      updateTokenDatas(Object.values(tokenDatas))\n    }\n  }, [tokenDataError, tokenDataLoading, tokenDatas, updateTokenDatas])\n\n  return null\n}\n","import { useMemo } from 'react'\nimport { useQuery } from '@apollo/client'\nimport gql from 'graphql-tag'\n\nexport const TOP_POOLS = gql`\n  query topPools {\n    pools(first: 50, orderBy: totalValueLockedUSD, orderDirection: desc) {\n      id\n    }\n  }\n`\n\ninterface TopPoolsResponse {\n  pools: {\n    id: string\n  }[]\n}\n\n/**\n * Fetch top addresses by volume\n */\nexport function useTopPoolAddresses(): {\n  loading: boolean\n  error: boolean\n  addresses: string[] | undefined\n} {\n  const { loading, error, data } = useQuery<TopPoolsResponse>(TOP_POOLS, {\n    fetchPolicy: 'network-only',\n  })\n\n  const formattedData = useMemo(() => {\n    if (data) {\n      return data.pools.map((p) => p.id)\n    } else {\n      return undefined\n    }\n  }, [data])\n\n  return {\n    loading: loading,\n    error: Boolean(error),\n    addresses: formattedData,\n  }\n}\n","import { useQuery } from '@apollo/client'\nimport gql from 'graphql-tag'\nimport { useDeltaTimestamps } from 'utils/queries'\nimport { useBlocksFromTimestamps } from 'hooks/useBlocksFromTimestamps'\nimport { PoolData } from 'state/pools/reducer'\nimport { get2DayChange } from 'utils/data'\nimport { formatTokenName, formatTokenSymbol } from 'utils/tokens'\n\nexport const POOLS_BULK = (block: number | undefined, pools: string[]) => {\n  let poolString = `[`\n  pools.map((address) => {\n    return (poolString += `\"${address}\",`)\n  })\n  poolString += ']'\n  const queryString =\n    `\n    query pools {\n      pools(where: {id_in: ${poolString}},` +\n    (block ? `block: {number: ${block}} ,` : ``) +\n    ` orderBy: totalValueLockedUSD, orderDirection: desc) {\n        id\n        feeTier\n        liquidity\n        sqrtPrice\n        tick\n        token0 {\n            id\n            symbol \n            name\n            decimals\n            derivedETH\n        }\n        token1 {\n            id\n            symbol \n            name\n            decimals\n            derivedETH\n        }\n        token0Price\n        token1Price\n        volumeUSD\n        txCount\n        totalValueLockedToken0\n        totalValueLockedToken1\n        totalValueLockedUSD\n      }\n    }\n    `\n  return gql(queryString)\n}\n\ninterface PoolFields {\n  id: string\n  feeTier: string\n  liquidity: string\n  sqrtPrice: string\n  tick: string\n  token0: {\n    id: string\n    symbol: string\n    name: string\n    decimals: string\n    derivedETH: string\n  }\n  token1: {\n    id: string\n    symbol: string\n    name: string\n    decimals: string\n    derivedETH: string\n  }\n  token0Price: string\n  token1Price: string\n  volumeUSD: string\n  txCount: string\n  totalValueLockedToken0: string\n  totalValueLockedToken1: string\n  totalValueLockedUSD: string\n}\n\ninterface PoolDataResponse {\n  pools: PoolFields[]\n}\n\n/**\n * Fetch top addresses by volume\n */\nexport function usePoolDatas(\n  poolAddresses: string[]\n): {\n  loading: boolean\n  error: boolean\n  data:\n    | {\n        [address: string]: PoolData\n      }\n    | undefined\n} {\n  // get blocks from historic timestamps\n  const [t24, t48, tWeek] = useDeltaTimestamps()\n  const { blocks, error: blockError } = useBlocksFromTimestamps([t24, t48, tWeek])\n  const [block24, block48, blockWeek] = blocks ?? []\n\n  const { loading, error, data } = useQuery<PoolDataResponse>(POOLS_BULK(undefined, poolAddresses))\n\n  const { loading: loading24, error: error24, data: data24 } = useQuery<PoolDataResponse>(\n    POOLS_BULK(block24?.number, poolAddresses)\n  )\n  const { loading: loading48, error: error48, data: data48 } = useQuery<PoolDataResponse>(\n    POOLS_BULK(block48?.number, poolAddresses)\n  )\n  const { loading: loadingWeek, error: errorWeek, data: dataWeek } = useQuery<PoolDataResponse>(\n    POOLS_BULK(blockWeek?.number, poolAddresses)\n  )\n\n  const anyError = Boolean(error || error24 || error48 || blockError || errorWeek)\n  const anyLoading = Boolean(loading || loading24 || loading48 || loadingWeek)\n\n  // return early if not all data yet\n  if (anyError || anyLoading) {\n    return {\n      loading: anyLoading,\n      error: anyError,\n      data: undefined,\n    }\n  }\n\n  const parsed = data?.pools\n    ? data.pools.reduce((accum: { [address: string]: PoolFields }, poolData) => {\n        accum[poolData.id] = poolData\n        return accum\n      }, {})\n    : {}\n  const parsed24 = data24?.pools\n    ? data24.pools.reduce((accum: { [address: string]: PoolFields }, poolData) => {\n        accum[poolData.id] = poolData\n        return accum\n      }, {})\n    : {}\n  const parsed48 = data48?.pools\n    ? data48.pools.reduce((accum: { [address: string]: PoolFields }, poolData) => {\n        accum[poolData.id] = poolData\n        return accum\n      }, {})\n    : {}\n  const parsedWeek = dataWeek?.pools\n    ? dataWeek.pools.reduce((accum: { [address: string]: PoolFields }, poolData) => {\n        accum[poolData.id] = poolData\n        return accum\n      }, {})\n    : {}\n\n  // format data and calculate daily changes\n  const formatted = poolAddresses.reduce((accum: { [address: string]: PoolData }, address) => {\n    const current: PoolFields | undefined = parsed[address]\n    const oneDay: PoolFields | undefined = parsed24[address]\n    const twoDay: PoolFields | undefined = parsed48[address]\n    const week: PoolFields | undefined = parsedWeek[address]\n\n    const [volumeUSD, volumeUSDChange] =\n      current && oneDay && twoDay\n        ? get2DayChange(current.volumeUSD, oneDay.volumeUSD, twoDay.volumeUSD)\n        : current\n        ? [parseFloat(current.volumeUSD), 0]\n        : [0, 0]\n\n    const volumeUSDWeek =\n      current && week\n        ? parseFloat(current.volumeUSD) - parseFloat(week.volumeUSD)\n        : current\n        ? parseFloat(current.volumeUSD)\n        : 0\n\n    const tvlUSD = current ? parseFloat(current.totalValueLockedUSD) : 0\n\n    const tvlUSDChange =\n      current && oneDay\n        ? ((parseFloat(current.totalValueLockedUSD) - parseFloat(oneDay.totalValueLockedUSD)) /\n            parseFloat(oneDay.totalValueLockedUSD)) *\n          100\n        : 0\n\n    const tvlToken0 = current ? parseFloat(current.totalValueLockedToken0) : 0\n    const tvlToken1 = current ? parseFloat(current.totalValueLockedToken1) : 0\n\n    const feeTier = current ? parseInt(current.feeTier) : 0\n\n    if (current) {\n      accum[address] = {\n        address,\n        feeTier,\n        liquidity: parseFloat(current.liquidity),\n        sqrtPrice: parseFloat(current.sqrtPrice),\n        tick: parseFloat(current.tick),\n        token0: {\n          address: current.token0.id,\n          name: formatTokenName(current.token0.id, current.token0.name),\n          symbol: formatTokenSymbol(current.token0.id, current.token0.symbol),\n          decimals: parseInt(current.token0.decimals),\n          derivedETH: parseFloat(current.token0.derivedETH),\n        },\n        token1: {\n          address: current.token1.id,\n          name: formatTokenName(current.token1.id, current.token1.name),\n          symbol: formatTokenSymbol(current.token1.id, current.token1.symbol),\n          decimals: parseInt(current.token1.decimals),\n          derivedETH: parseFloat(current.token1.derivedETH),\n        },\n        token0Price: parseFloat(current.token0Price),\n        token1Price: parseFloat(current.token1Price),\n        volumeUSD,\n        volumeUSDChange,\n        volumeUSDWeek,\n        tvlUSD,\n        tvlUSDChange,\n        tvlToken0,\n        tvlToken1,\n      }\n    }\n\n    return accum\n  }, {})\n\n  return {\n    loading: anyLoading,\n    error: anyError,\n    data: formatted,\n  }\n}\n","import { useUpdatePoolData, useAllPoolData, useAddPoolKeys } from './hooks'\nimport { useEffect, useMemo } from 'react'\nimport { useTopPoolAddresses } from 'data/pools/topPools'\nimport { usePoolDatas } from 'data/pools/poolData'\n\nexport default function Updater(): null {\n  // updaters\n  const updatePoolData = useUpdatePoolData()\n  const addPoolKeys = useAddPoolKeys()\n\n  // data\n  const allPoolData = useAllPoolData()\n  const { loading, error, addresses } = useTopPoolAddresses()\n\n  // add top pools on first load\n  useEffect(() => {\n    if (addresses && !error && !loading) {\n      addPoolKeys(addresses)\n    }\n  }, [addPoolKeys, addresses, error, loading])\n\n  // detect for which addresses we havent loaded pool data yet\n  const unfetchedPoolAddresses = useMemo(() => {\n    return Object.keys(allPoolData).reduce((accum: string[], key) => {\n      const poolData = allPoolData[key]\n      if (!poolData.data || !poolData.lastUpdated) {\n        accum.push(key)\n      }\n      return accum\n    }, [])\n  }, [allPoolData])\n\n  // update unloaded pool entries with fetched data\n  const { error: poolDataError, loading: poolDataLoading, data: poolDatas } = usePoolDatas(unfetchedPoolAddresses)\n  useEffect(() => {\n    if (poolDatas && !poolDataError && !poolDataLoading) {\n      updatePoolData(Object.values(poolDatas))\n    }\n  }, [poolDataError, poolDataLoading, poolDatas, updatePoolData])\n\n  return null\n}\n","import { healthClient } from './../../apollo/client'\nimport { useQuery } from '@apollo/client'\nimport gql from 'graphql-tag'\n\nexport const SUBGRAPH_HEALTH = gql`\n  query health {\n    indexingStatusForCurrentVersion(subgraphName: \"uniswap/uniswap-v2\") {\n      synced\n      health\n      chains {\n        chainHeadBlock {\n          number\n        }\n        latestBlock {\n          number\n        }\n      }\n    }\n  }\n`\n\ninterface HealthResponse {\n  indexingStatusForCurrentVersion: {\n    chains: {\n      chainHeadBlock: {\n        number: string\n      }\n      latestBlock: {\n        number: string\n      }\n    }[]\n    synced: boolean\n  }\n}\n\n/**\n * Fetch top addresses by volume\n */\nexport function useFetchedSubgraphStatus(): {\n  available: boolean | null\n  syncedBlock: number | undefined\n  headBlock: number | undefined\n} {\n  const { loading, error, data } = useQuery<HealthResponse>(SUBGRAPH_HEALTH, {\n    client: healthClient,\n    fetchPolicy: 'network-only',\n  })\n\n  const parsed = data?.indexingStatusForCurrentVersion\n\n  if (loading) {\n    return {\n      available: null,\n      syncedBlock: undefined,\n      headBlock: undefined,\n    }\n  }\n\n  if ((!loading && !parsed) || error) {\n    return {\n      available: false,\n      syncedBlock: undefined,\n      headBlock: undefined,\n    }\n  }\n\n  const syncedBlock = parsed?.chains[0].latestBlock.number\n  const headBlock = parsed?.chains[0].chainHeadBlock.number\n\n  return {\n    available: true,\n    syncedBlock: syncedBlock ? parseFloat(syncedBlock) : undefined,\n    headBlock: headBlock ? parseFloat(headBlock) : undefined,\n  }\n}\n","import { useEffect } from 'react'\nimport { useSubgraphStatus } from './hooks'\nimport { useFetchedSubgraphStatus } from '../../data/application'\n\nexport default function Updater(): null {\n  // subgraph status\n  const [status, updateStatus] = useSubgraphStatus()\n  const { available, syncedBlock: newSyncedBlock } = useFetchedSubgraphStatus()\n\n  const syncedBlock = status.syncedBlock\n\n  useEffect(() => {\n    if (status.available === null && available !== null) {\n      updateStatus(available, syncedBlock)\n    }\n    if (!status.syncedBlock || (status.syncedBlock !== newSyncedBlock && syncedBlock)) {\n      updateStatus(status.available, newSyncedBlock)\n    }\n  }, [available, newSyncedBlock, status.available, status.syncedBlock, syncedBlock, updateStatus])\n\n  return null\n}\n","import 'inter-ui'\nimport React, { StrictMode } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport ReactDOM from 'react-dom'\nimport ReactGA from 'react-ga'\nimport { Provider } from 'react-redux'\nimport { HashRouter } from 'react-router-dom'\nimport './i18n'\nimport App from './pages/App'\nimport store from './state'\nimport UserUpdater from './state/user/updater'\nimport ProtocolUpdater from './state/protocol/updater'\nimport TokenUpdater from './state/tokens/updater'\nimport PoolUpdater from './state/pools/updater'\nimport ApplicationUpdater from './state/application/updater'\nimport ThemeProvider, { FixedGlobalStyle, ThemedGlobalStyle } from './theme'\nimport { ApolloProvider } from '@apollo/client/react'\nimport { client } from 'apollo/client'\n\nconst GOOGLE_ANALYTICS_ID: string | undefined = process.env.REACT_APP_GOOGLE_ANALYTICS_ID\nif (typeof GOOGLE_ANALYTICS_ID === 'string') {\n  ReactGA.initialize(GOOGLE_ANALYTICS_ID)\n  ReactGA.set({\n    customBrowserType: !isMobile\n      ? 'desktop'\n      : 'web3' in window || 'ethereum' in window\n      ? 'mobileWeb3'\n      : 'mobileRegular',\n  })\n} else {\n  ReactGA.initialize('test', { testMode: true, debug: true })\n}\n\nwindow.addEventListener('error', (error) => {\n  ReactGA.exception({\n    description: `${error.message} @ ${error.filename}:${error.lineno}:${error.colno}`,\n    fatal: true,\n  })\n})\n\nfunction Updaters() {\n  return (\n    <>\n      <UserUpdater />\n      <ProtocolUpdater />\n      <TokenUpdater />\n      <PoolUpdater />\n      <ApplicationUpdater />\n    </>\n  )\n}\n\nReactDOM.render(\n  <StrictMode>\n    <FixedGlobalStyle />\n    <ApolloProvider client={client}>\n      <Provider store={store}>\n        <Updaters />\n        <ThemeProvider>\n          <ThemedGlobalStyle />\n          <HashRouter>\n            <App />\n          </HashRouter>\n        </ThemeProvider>\n      </Provider>\n    </ApolloProvider>\n  </StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}